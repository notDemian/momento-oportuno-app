{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Container, Text, Button, Section, Divider, DateTimePicker } from \"../../../elements\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DeliveryInformation = function DeliveryInformation() {\n  var navigation = useNavigation();\n  var _React$useState = React.useState(new Date(1598051730000)),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    date = _React$useState2[0],\n    setDate = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    showDateTimePicker = _React$useState4[0],\n    setShowDateTimePicker = _React$useState4[1];\n  var onChangeAddressButtonPressed = function onChangeAddressButtonPressed() {\n    navigation.navigate('ChangeAddressScreen');\n  };\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShowDateTimePicker(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n  var _onChangeTimeButtonPressed = function _onChangeTimeButtonPressed() {\n    setShowDateTimePicker(!showDateTimePicker);\n  };\n  return _jsxs(Section, {\n    title: \"Deliver to\",\n    actionButtonText: \"Change address\",\n    onButtonActionPressed: onChangeAddressButtonPressed,\n    children: [_jsxs(Container, {\n      children: [_jsxs(View, {\n        style: styles.deliveryContainer,\n        children: [_jsx(View, {\n          style: styles.locationContainer,\n          children: _jsx(Image, {\n            source: require(\"../../../../assets/checkout/map.png\"),\n            style: styles.locationImage\n          })\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            isBold: true,\n            style: styles.locationInfo,\n            children: \"588 Blanda Square - Virginia\"\n          }), _jsx(Text, {\n            isSecondary: true,\n            accessibilityRole: \"link\",\n            style: styles.locationInfo,\n            children: \"Add floor / unit number\"\n          }), _jsx(Text, {\n            isSecondary: true,\n            style: styles.locationInfo,\n            children: \"Add a note to driver\"\n          })]\n        })]\n      }), _jsx(Divider, {}), _jsxs(View, {\n        style: styles.deliveryTimeContainer,\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            isSecondary: true,\n            style: styles.deliveryTime,\n            children: \"Delivery time\"\n          }), _jsx(Text, {\n            children: \"Deliver now (15 mins)\"\n          })]\n        }), _jsx(View, {\n          style: styles.changeTimeContainer,\n          children: _jsx(Button, {\n            isTransparent: true,\n            onPress: _onChangeTimeButtonPressed,\n            children: _jsx(Text, {\n              isPrimary: true,\n              children: showDateTimePicker ? 'Done' : 'Change time'\n            })\n          })\n        })]\n      })]\n    }), showDateTimePicker && _jsx(DateTimePicker, {\n      value: date,\n      mode: \"datetime\",\n      onChange: onChange,\n      style: styles.dateTimePicker\n    })]\n  });\n};\nexport default DeliveryInformation;","map":{"version":3,"names":["React","useNavigation","Container","Text","Button","Section","Divider","DateTimePicker","styles","DeliveryInformation","navigation","useState","Date","date","setDate","showDateTimePicker","setShowDateTimePicker","onChangeAddressButtonPressed","navigate","onChange","event","selectedDate","currentDate","Platform","OS","_onChangeTimeButtonPressed","deliveryContainer","locationContainer","require","locationImage","locationInfo","deliveryTimeContainer","deliveryTime","changeTimeContainer","dateTimePicker"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/screens/Checkout/DeliveryInformation/DeliveryInformation.tsx"],"sourcesContent":["import * as React from 'react';\nimport {View, Image, Platform} from 'react-native';\nimport {useNavigation} from '@react-navigation/native';\nimport {AndroidEvent} from '@react-native-community/datetimepicker';\nimport {\n  Container,\n  Text,\n  Button,\n  Section,\n  Divider,\n  DateTimePicker,\n} from '@src/components/elements';\nimport styles from './styles';\n\ntype DeliveryInformationProps = {};\n\nconst DeliveryInformation: React.FC<DeliveryInformationProps> = () => {\n  const navigation = useNavigation();\n  const [date, setDate] = React.useState(new Date(1598051730000));\n  const [showDateTimePicker, setShowDateTimePicker] = React.useState(false);\n\n  const onChangeAddressButtonPressed = () => {\n    navigation.navigate('ChangeAddressScreen');\n  };\n\n  const onChange = (event: AndroidEvent, selectedDate?: Date) => {\n    const currentDate = selectedDate || date;\n    setShowDateTimePicker(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n\n  const _onChangeTimeButtonPressed = () => {\n    setShowDateTimePicker(!showDateTimePicker);\n  };\n\n  return (\n    <Section\n      title=\"Deliver to\"\n      actionButtonText=\"Change address\"\n      onButtonActionPressed={onChangeAddressButtonPressed}>\n      <Container>\n        <View style={styles.deliveryContainer}>\n          <View style={styles.locationContainer}>\n            <Image\n              source={require('@src/assets/checkout/map.png')}\n              style={styles.locationImage}\n            />\n          </View>\n          <View>\n            <Text isBold style={styles.locationInfo}>\n              588 Blanda Square - Virginia\n            </Text>\n            <Text\n              isSecondary\n              accessibilityRole=\"link\"\n              style={styles.locationInfo}>\n              Add floor / unit number\n            </Text>\n            <Text isSecondary style={styles.locationInfo}>\n              Add a note to driver\n            </Text>\n          </View>\n        </View>\n        <Divider />\n        <View style={styles.deliveryTimeContainer}>\n          <View>\n            <Text isSecondary style={styles.deliveryTime}>\n              Delivery time\n            </Text>\n            <Text>Deliver now (15 mins)</Text>\n          </View>\n          <View style={styles.changeTimeContainer}>\n            <Button isTransparent onPress={_onChangeTimeButtonPressed}>\n              <Text isPrimary>\n                {showDateTimePicker ? 'Done' : 'Change time'}\n              </Text>\n            </Button>\n          </View>\n        </View>\n      </Container>\n      {showDateTimePicker && (\n        <DateTimePicker\n          value={date}\n          mode=\"datetime\"\n          onChange={onChange}\n          style={styles.dateTimePicker}\n        />\n      )}\n    </Section>\n  );\n};\n\nexport default DeliveryInformation;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAE/B,SAAQC,aAAa,QAAO,0BAA0B;AAEtD,SACEC,SAAS,EACTC,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,OAAO,EACPC,cAAc;AAEhB,OAAOC,MAAM;AAAiB;AAAA;AAI9B,IAAMC,mBAAuD,GAAG,SAA1DA,mBAAuD,GAAS;EACpE,IAAMC,UAAU,GAAGT,aAAa,EAAE;EAClC,sBAAwBD,KAAK,CAACW,QAAQ,CAAC,IAAIC,IAAI,CAAC,aAAa,CAAC,CAAC;IAAA;IAAxDC,IAAI;IAAEC,OAAO;EACpB,uBAAoDd,KAAK,CAACW,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlEI,kBAAkB;IAAEC,qBAAqB;EAEhD,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA4B,GAAS;IACzCP,UAAU,CAACQ,QAAQ,CAAC,qBAAqB,CAAC;EAC5C,CAAC;EAED,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,KAAmB,EAAEC,YAAmB,EAAK;IAC7D,IAAMC,WAAW,GAAGD,YAAY,IAAIR,IAAI;IACxCG,qBAAqB,CAACO,QAAQ,CAACC,EAAE,KAAK,KAAK,CAAC;IAC5CV,OAAO,CAACQ,WAAW,CAAC;EACtB,CAAC;EAED,IAAMG,0BAA0B,GAAG,SAA7BA,0BAA0B,GAAS;IACvCT,qBAAqB,CAAC,CAACD,kBAAkB,CAAC;EAC5C,CAAC;EAED,OACE,MAAC,OAAO;IACN,KAAK,EAAC,YAAY;IAClB,gBAAgB,EAAC,gBAAgB;IACjC,qBAAqB,EAAEE,4BAA6B;IAAA,WACpD,MAAC,SAAS;MAAA,WACR,MAAC,IAAI;QAAC,KAAK,EAAET,MAAM,CAACkB,iBAAkB;QAAA,WACpC,KAAC,IAAI;UAAC,KAAK,EAAElB,MAAM,CAACmB,iBAAkB;UAAA,UACpC,KAAC,KAAK;YACJ,MAAM,EAAEC,OAAO,uCAAiC;YAChD,KAAK,EAAEpB,MAAM,CAACqB;UAAc;QAC5B,EACG,EACP,MAAC,IAAI;UAAA,WACH,KAAC,IAAI;YAAC,MAAM;YAAC,KAAK,EAAErB,MAAM,CAACsB,YAAa;YAAA;UAAA,EAEjC,EACP,KAAC,IAAI;YACH,WAAW;YACX,iBAAiB,EAAC,MAAM;YACxB,KAAK,EAAEtB,MAAM,CAACsB,YAAa;YAAA;UAAA,EAEtB,EACP,KAAC,IAAI;YAAC,WAAW;YAAC,KAAK,EAAEtB,MAAM,CAACsB,YAAa;YAAA;UAAA,EAEtC;QAAA,EACF;MAAA,EACF,EACP,KAAC,OAAO,KAAG,EACX,MAAC,IAAI;QAAC,KAAK,EAAEtB,MAAM,CAACuB,qBAAsB;QAAA,WACxC,MAAC,IAAI;UAAA,WACH,KAAC,IAAI;YAAC,WAAW;YAAC,KAAK,EAAEvB,MAAM,CAACwB,YAAa;YAAA;UAAA,EAEtC,EACP,KAAC,IAAI;YAAA;UAAA,EAA6B;QAAA,EAC7B,EACP,KAAC,IAAI;UAAC,KAAK,EAAExB,MAAM,CAACyB,mBAAoB;UAAA,UACtC,KAAC,MAAM;YAAC,aAAa;YAAC,OAAO,EAAER,0BAA2B;YAAA,UACxD,KAAC,IAAI;cAAC,SAAS;cAAA,UACZV,kBAAkB,GAAG,MAAM,GAAG;YAAa;UACvC;QACA,EACJ;MAAA,EACF;IAAA,EACG,EACXA,kBAAkB,IACjB,KAAC,cAAc;MACb,KAAK,EAAEF,IAAK;MACZ,IAAI,EAAC,UAAU;MACf,QAAQ,EAAEM,QAAS;MACnB,KAAK,EAAEX,MAAM,CAAC0B;IAAe,EAEhC;EAAA,EACO;AAEd,CAAC;AAED,eAAezB,mBAAmB"},"metadata":{},"sourceType":"module"}