{"ast":null,"code":"import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Container, Section, Divider, Icon } from \"../../elements\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport ListRowItem from \"../../elements/List/ListRowItem\";\nimport { favoriteAddresses } from \"../../../data/mock-address\";\nimport styles from \"./styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SavedAddresses = function SavedAddresses() {\n  var navigation = useNavigation();\n  var _addAddressItemPressed = function _addAddressItemPressed() {\n    navigation.navigate('AddAddressScreen');\n  };\n  return _jsx(ScrollView, {\n    children: _jsx(Section, {\n      title: \"Favorites\",\n      children: _jsxs(Container, {\n        style: styles.container,\n        children: [favoriteAddresses.map(function (item, index) {\n          var id = item.id,\n            name = item.name,\n            description = item.description,\n            isHome = item.isHome,\n            isWork = item.isWork;\n          var leftIcon;\n          if (isHome) {\n            leftIcon = _jsx(Icon, {\n              name: \"home\",\n              size: 16\n            });\n          } else if (isWork) {\n            leftIcon = _jsx(Icon, {\n              name: \"briefcase\",\n              size: 16\n            });\n          }\n          return _jsxs(View, {\n            children: [_jsx(ListRowItem, {\n              id: id,\n              title: name,\n              subTitle: description,\n              leftIcon: leftIcon\n            }), _jsx(Divider, {})]\n          }, index);\n        }), _jsx(ListRowItem, {\n          title: \"Add an Address\",\n          subTitle: \"Save your favourite places\",\n          onPress: _addAddressItemPressed\n        })]\n      })\n    })\n  });\n};\nexport default SavedAddresses;","map":{"version":3,"names":["React","useNavigation","Container","Section","Divider","Icon","ScrollView","ListRowItem","favoriteAddresses","styles","SavedAddresses","navigation","_addAddressItemPressed","navigate","container","map","item","index","id","name","description","isHome","isWork","leftIcon"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/screens/SavedAddresses/SavedAddresses.tsx"],"sourcesContent":["import * as React from 'react';\nimport {useNavigation} from '@react-navigation/native';\nimport {Container, Section, Divider, Icon} from '@src/components/elements';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport ListRowItem from '@src/components/elements/List/ListRowItem';\nimport {favoriteAddresses} from '@src/data/mock-address';\nimport styles from './styles';\nimport {View} from 'react-native';\n\ntype SavedAddressesProps = {};\n\nconst SavedAddresses: React.FC<SavedAddressesProps> = () => {\n  const navigation = useNavigation();\n\n  const _addAddressItemPressed = () => {\n    navigation.navigate('AddAddressScreen');\n  };\n\n  return (\n    <ScrollView>\n      <Section title=\"Favorites\">\n        <Container style={styles.container}>\n          {favoriteAddresses.map((item, index) => {\n            const {id, name, description, isHome, isWork} = item;\n            let leftIcon;\n            if (isHome) {\n              leftIcon = <Icon name=\"home\" size={16} />;\n            } else if (isWork) {\n              leftIcon = <Icon name=\"briefcase\" size={16} />;\n            }\n            return (\n              <View key={index}>\n                <ListRowItem\n                  id={id}\n                  title={name}\n                  subTitle={description}\n                  leftIcon={leftIcon}\n                />\n                <Divider />\n              </View>\n            );\n          })}\n          <ListRowItem\n            title=\"Add an Address\"\n            subTitle=\"Save your favourite places\"\n            onPress={_addAddressItemPressed}\n          />\n        </Container>\n      </Section>\n    </ScrollView>\n  );\n};\n\nexport default SavedAddresses;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,aAAa,QAAO,0BAA0B;AACtD,SAAQC,SAAS,EAAEC,OAAO,EAAEC,OAAO,EAAEC,IAAI;AACzC,SAAQC,UAAU,QAAO,8BAA8B;AACvD,OAAOC,WAAW;AAClB,SAAQC,iBAAiB;AACzB,OAAOC,MAAM;AAAiB;AAAA;AAAA;AAK9B,IAAMC,cAA6C,GAAG,SAAhDA,cAA6C,GAAS;EAC1D,IAAMC,UAAU,GAAGV,aAAa,EAAE;EAElC,IAAMW,sBAAsB,GAAG,SAAzBA,sBAAsB,GAAS;IACnCD,UAAU,CAACE,QAAQ,CAAC,kBAAkB,CAAC;EACzC,CAAC;EAED,OACE,KAAC,UAAU;IAAA,UACT,KAAC,OAAO;MAAC,KAAK,EAAC,WAAW;MAAA,UACxB,MAAC,SAAS;QAAC,KAAK,EAAEJ,MAAM,CAACK,SAAU;QAAA,WAChCN,iBAAiB,CAACO,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;UACtC,IAAOC,EAAE,GAAuCF,IAAI,CAA7CE,EAAE;YAAEC,IAAI,GAAiCH,IAAI,CAAzCG,IAAI;YAAEC,WAAW,GAAoBJ,IAAI,CAAnCI,WAAW;YAAEC,MAAM,GAAYL,IAAI,CAAtBK,MAAM;YAAEC,MAAM,GAAIN,IAAI,CAAdM,MAAM;UAC5C,IAAIC,QAAQ;UACZ,IAAIF,MAAM,EAAE;YACVE,QAAQ,GAAG,KAAC,IAAI;cAAC,IAAI,EAAC,MAAM;cAAC,IAAI,EAAE;YAAG,EAAG;UAC3C,CAAC,MAAM,IAAID,MAAM,EAAE;YACjBC,QAAQ,GAAG,KAAC,IAAI;cAAC,IAAI,EAAC,WAAW;cAAC,IAAI,EAAE;YAAG,EAAG;UAChD;UACA,OACE,MAAC,IAAI;YAAA,WACH,KAAC,WAAW;cACV,EAAE,EAAEL,EAAG;cACP,KAAK,EAAEC,IAAK;cACZ,QAAQ,EAAEC,WAAY;cACtB,QAAQ,EAAEG;YAAS,EACnB,EACF,KAAC,OAAO,KAAG;UAAA,GAPFN,KAAK,CAQT;QAEX,CAAC,CAAC,EACF,KAAC,WAAW;UACV,KAAK,EAAC,gBAAgB;UACtB,QAAQ,EAAC,4BAA4B;UACrC,OAAO,EAAEL;QAAuB,EAChC;MAAA;IACQ;EACJ,EACC;AAEjB,CAAC;AAED,eAAeF,cAAc"},"metadata":{},"sourceType":"module"}