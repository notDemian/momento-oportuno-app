{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useTheme, useNavigation } from '@react-navigation/native';\nimport { Text, Button } from \"../../elements\";\nimport { mockDishDetails } from \"../../../data/mock-places\";\nimport CartContext from \"../../../context/cart-context\";\nimport HeadingInformation from \"./HeadingInformation\";\nimport SideDishes from \"./SideDishes\";\nimport AddToBasketForm from \"./AddToBasketForm\";\nimport { formatCurrency } from \"../../../utils/number-formatter\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var DishDetails = function DishDetails() {\n  var _React$useState = React.useState(parseFloat(mockDishDetails.price)),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    totalPrice = _React$useState2[0],\n    setTotalPrice = _React$useState2[1];\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    selectedSideDishes = _React$useState4[0],\n    setSelectedSideDishes = _React$useState4[1];\n  var _React$useState5 = React.useState(new Animated.Value(0)),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    scrollY = _React$useState6[0];\n  var _useTheme = useTheme(),\n    background = _useTheme.colors.background;\n  var _useNavigation = useNavigation(),\n    goBack = _useNavigation.goBack;\n  var _React$useContext = React.useContext(CartContext),\n    updateCartItems = _React$useContext.updateCartItems;\n  var addSideDishToBasket = React.useCallback(function (dish) {\n    var existedDishIndex = selectedSideDishes.find(function (item) {\n      return item.id === dish.id;\n    });\n    if (existedDishIndex) {\n      setSelectedSideDishes(selectedSideDishes.filter(function (item) {\n        return item.id !== dish.id;\n      }));\n      setTotalPrice(totalPrice - parseFloat(existedDishIndex.price));\n    } else {\n      setSelectedSideDishes([].concat(_toConsumableArray(selectedSideDishes), [dish]));\n      setTotalPrice(totalPrice + parseFloat(dish.price));\n    }\n  }, [selectedSideDishes, totalPrice]);\n  var updateTotalDishAmount = React.useCallback(function (amount) {\n    var totalSelectedDishPrice = selectedSideDishes.reduce(function (prevValue, currentValue) {\n      return prevValue + parseFloat(currentValue.price);\n    }, 0);\n    setTotalPrice(parseFloat(mockDishDetails.price) * amount + totalSelectedDishPrice);\n  }, [selectedSideDishes]);\n  var onAddToBasketButtonPressed = function onAddToBasketButtonPressed() {\n    updateCartItems([{\n      dish: mockDishDetails,\n      sideDishes: selectedSideDishes\n    }], totalPrice);\n    goBack();\n  };\n  var coverTranslateY = scrollY.interpolate({\n    inputRange: [-4, 0, 10],\n    outputRange: [-2, 0, 3]\n  });\n  var coverScale = scrollY.interpolate({\n    inputRange: [-200, 0],\n    outputRange: [2, 1],\n    extrapolateRight: 'clamp'\n  });\n  var headerOpacity = scrollY.interpolate({\n    inputRange: [150, 250],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  });\n  return _jsx(SafeAreaView, {\n    style: styles.safeAreaView,\n    children: _jsxs(View, {\n      style: styles.rootContainer,\n      children: [_jsx(KeyboardAvoidingView, {\n        style: styles.keyboardAvoidingView,\n        behavior: Platform.OS === 'ios' ? 'position' : 'height',\n        enabled: true,\n        children: _jsxs(Animated.ScrollView, {\n          onScroll: Animated.event([{\n            nativeEvent: {\n              contentOffset: {\n                y: scrollY\n              }\n            }\n          }], {\n            useNativeDriver: true\n          }),\n          children: [_jsx(Animated.View, {\n            style: [styles.coverPhotoContainer, {\n              transform: [{\n                translateY: coverTranslateY\n              }]\n            }],\n            children: _jsx(Animated.Image, {\n              source: mockDishDetails.coverImage || {},\n              style: [styles.coverPhoto, {\n                transform: [{\n                  scale: coverScale\n                }]\n              }]\n            })\n          }), _jsx(HeadingInformation, {\n            data: mockDishDetails\n          }), _jsx(SideDishes, {\n            data: mockDishDetails,\n            addSideDishToBasket: addSideDishToBasket\n          }), _jsx(AddToBasketForm, {\n            updateTotalDishAmount: updateTotalDishAmount\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.addToBasketButtonContainer,\n        children: _jsx(Button, {\n          childrenContainerStyle: styles.addToBasketButton,\n          onPress: onAddToBasketButtonPressed,\n          children: _jsxs(Text, {\n            style: styles.addToBasketButtonText,\n            children: [\"Add to Basket - \", formatCurrency(totalPrice)]\n          })\n        })\n      }), _jsx(Animated.View, {\n        style: [styles.header, {\n          opacity: headerOpacity,\n          backgroundColor: background\n        }],\n        children: _jsx(Text, {\n          style: styles.headerTitle,\n          children: mockDishDetails.title\n        })\n      })]\n    })\n  });\n};\nexport default DishDetails;","map":{"version":3,"names":["React","useTheme","useNavigation","Text","Button","mockDishDetails","CartContext","HeadingInformation","SideDishes","AddToBasketForm","formatCurrency","styles","DishDetails","useState","parseFloat","price","totalPrice","setTotalPrice","selectedSideDishes","setSelectedSideDishes","Animated","Value","scrollY","background","colors","goBack","useContext","updateCartItems","addSideDishToBasket","useCallback","dish","existedDishIndex","find","item","id","filter","updateTotalDishAmount","amount","totalSelectedDishPrice","reduce","prevValue","currentValue","onAddToBasketButtonPressed","sideDishes","coverTranslateY","interpolate","inputRange","outputRange","coverScale","extrapolateRight","headerOpacity","extrapolate","safeAreaView","rootContainer","keyboardAvoidingView","Platform","OS","event","nativeEvent","contentOffset","y","useNativeDriver","coverPhotoContainer","transform","translateY","coverImage","coverPhoto","scale","addToBasketButtonContainer","addToBasketButton","addToBasketButtonText","header","opacity","backgroundColor","headerTitle","title"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/screens/DishDetails/DishDetails.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  SafeAreaView,\n  View,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport {useTheme, useNavigation} from '@react-navigation/native';\nimport {Text, Button} from '@src/components/elements';\nimport {mockDishDetails, Dish} from '@src/data/mock-places';\nimport CartContext from '@src/context/cart-context';\nimport HeadingInformation from './HeadingInformation';\nimport SideDishes from './SideDishes';\nimport AddToBasketForm from './AddToBasketForm';\nimport {formatCurrency} from '@src/utils/number-formatter';\nimport styles from './styles';\n\ntype DishDetailsProps = {};\n\nexport const DishDetails: React.FC<DishDetailsProps> = () => {\n  const [totalPrice, setTotalPrice] = React.useState(\n    parseFloat(mockDishDetails.price),\n  );\n  const [selectedSideDishes, setSelectedSideDishes] = React.useState<Dish[]>(\n    [],\n  );\n  const [scrollY] = React.useState(new Animated.Value(0));\n  const {\n    colors: {background},\n  } = useTheme();\n  const {goBack} = useNavigation();\n  const {updateCartItems} = React.useContext(CartContext);\n\n  const addSideDishToBasket = React.useCallback(\n    (dish: Dish) => {\n      const existedDishIndex = selectedSideDishes.find(\n        (item: Dish) => item.id === dish.id,\n      );\n      if (existedDishIndex) {\n        setSelectedSideDishes(\n          selectedSideDishes.filter((item: Dish) => item.id !== dish.id),\n        );\n        setTotalPrice(totalPrice - parseFloat(existedDishIndex.price));\n      } else {\n        setSelectedSideDishes([...selectedSideDishes, dish]);\n        setTotalPrice(totalPrice + parseFloat(dish.price));\n      }\n    },\n    [selectedSideDishes, totalPrice],\n  );\n\n  const updateTotalDishAmount = React.useCallback(\n    (amount: number) => {\n      const totalSelectedDishPrice = selectedSideDishes.reduce(\n        (prevValue, currentValue) => prevValue + parseFloat(currentValue.price),\n        0,\n      );\n      setTotalPrice(\n        parseFloat(mockDishDetails.price) * amount + totalSelectedDishPrice,\n      );\n    },\n    [selectedSideDishes],\n  );\n\n  const onAddToBasketButtonPressed = () => {\n    updateCartItems(\n      [\n        {\n          dish: mockDishDetails,\n          sideDishes: selectedSideDishes,\n        },\n      ],\n      totalPrice,\n    );\n    goBack();\n  };\n\n  const coverTranslateY = scrollY.interpolate({\n    inputRange: [-4, 0, 10],\n    outputRange: [-2, 0, 3],\n  });\n\n  const coverScale = scrollY.interpolate({\n    inputRange: [-200, 0],\n    outputRange: [2, 1],\n    extrapolateRight: 'clamp',\n  });\n\n  const headerOpacity = scrollY.interpolate({\n    inputRange: [150, 250],\n    outputRange: [0, 1],\n    extrapolate: 'clamp',\n  });\n\n  return (\n    <SafeAreaView style={styles.safeAreaView}>\n      <View style={styles.rootContainer}>\n        <KeyboardAvoidingView\n          style={styles.keyboardAvoidingView}\n          behavior={Platform.OS === 'ios' ? 'position' : 'height'}\n          enabled>\n          <Animated.ScrollView\n            onScroll={Animated.event(\n              [\n                {\n                  nativeEvent: {\n                    contentOffset: {\n                      y: scrollY,\n                    },\n                  },\n                },\n              ],\n              {\n                useNativeDriver: true,\n              },\n            )}>\n            <Animated.View\n              style={[\n                styles.coverPhotoContainer,\n                {\n                  transform: [\n                    {\n                      translateY: coverTranslateY,\n                    },\n                  ],\n                },\n              ]}>\n              <Animated.Image\n                source={mockDishDetails.coverImage || {}}\n                style={[\n                  styles.coverPhoto,\n                  {\n                    transform: [\n                      {\n                        scale: coverScale,\n                      },\n                    ],\n                  },\n                ]}\n              />\n            </Animated.View>\n            <HeadingInformation data={mockDishDetails} />\n            <SideDishes\n              data={mockDishDetails}\n              addSideDishToBasket={addSideDishToBasket}\n            />\n            <AddToBasketForm updateTotalDishAmount={updateTotalDishAmount} />\n          </Animated.ScrollView>\n        </KeyboardAvoidingView>\n        <View style={styles.addToBasketButtonContainer}>\n          <Button\n            childrenContainerStyle={styles.addToBasketButton}\n            onPress={onAddToBasketButtonPressed}>\n            <Text style={styles.addToBasketButtonText}>\n              Add to Basket - {formatCurrency(totalPrice)}\n            </Text>\n          </Button>\n        </View>\n        <Animated.View\n          style={[\n            styles.header,\n            {\n              opacity: headerOpacity,\n              backgroundColor: background,\n            },\n          ]}>\n          <Text style={styles.headerTitle}>{mockDishDetails.title}</Text>\n        </Animated.View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default DishDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}