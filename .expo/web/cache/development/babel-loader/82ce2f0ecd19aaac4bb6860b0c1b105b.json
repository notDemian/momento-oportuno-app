{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isPrimary\", \"useIonicons\", \"color\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport IconFontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useTheme } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Icon = function Icon(_ref) {\n  var isPrimary = _ref.isPrimary,\n    useIonicons = _ref.useIonicons,\n    color = _ref.color,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useTheme = useTheme(),\n    _useTheme$colors = _useTheme.colors,\n    text = _useTheme$colors.text,\n    primary = _useTheme$colors.primary;\n  var iconColor = isPrimary ? primary : text;\n  if (color) {\n    iconColor = color;\n  }\n  return useIonicons ? _jsx(Ionicons, _objectSpread(_objectSpread({}, rest), {}, {\n    color: iconColor\n  })) : _jsx(IconFontAwesome5, _objectSpread(_objectSpread({}, rest), {}, {\n    color: iconColor\n  }));\n};\nexport default Icon;","map":{"version":3,"names":["React","IconFontAwesome5","Ionicons","useTheme","Icon","isPrimary","useIonicons","color","rest","colors","text","primary","iconColor"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/elements/Icon/Icon.tsx"],"sourcesContent":["import * as React from 'react';\nimport IconFontAwesome5, {\n  FontAwesome5IconProps,\n} from 'react-native-vector-icons/FontAwesome5';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport {useTheme} from '@react-navigation/native';\n\ninterface OwnProps {\n  isPrimary?: boolean;\n  useIonicons?: boolean;\n}\n\ntype IconProps = OwnProps & FontAwesome5IconProps;\n\nconst Icon: React.FC<IconProps> = ({\n  isPrimary,\n  useIonicons,\n  color,\n  ...rest\n}) => {\n  const {\n    colors: {text, primary},\n  } = useTheme();\n  let iconColor = isPrimary ? primary : text;\n  if (color) {\n    iconColor = color;\n  }\n\n  return useIonicons ? (\n    <Ionicons {...rest} color={iconColor} />\n  ) : (\n    <IconFontAwesome5 {...rest} color={iconColor} />\n  );\n};\n\nexport default Icon;\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,gBAAgB;AAGvB,OAAOC,QAAQ;AACf,SAAQC,QAAQ,QAAO,0BAA0B;AAAC;AASlD,IAAMC,IAAyB,GAAG,SAA5BA,IAAyB,OAKzB;EAAA,IAJJC,SAAS,QAATA,SAAS;IACTC,WAAW,QAAXA,WAAW;IACXC,KAAK,QAALA,KAAK;IACFC,IAAI;EAEP,gBAEIL,QAAQ,EAAE;IAAA,6BADZM,MAAM;IAAGC,IAAI,oBAAJA,IAAI;IAAEC,OAAO,oBAAPA,OAAO;EAExB,IAAIC,SAAS,GAAGP,SAAS,GAAGM,OAAO,GAAGD,IAAI;EAC1C,IAAIH,KAAK,EAAE;IACTK,SAAS,GAAGL,KAAK;EACnB;EAEA,OAAOD,WAAW,GAChB,KAAC,QAAQ,kCAAKE,IAAI;IAAE,KAAK,EAAEI;EAAU,GAAG,GAExC,KAAC,gBAAgB,kCAAKJ,IAAI;IAAE,KAAK,EAAEI;EAAU,GAC9C;AACH,CAAC;AAED,eAAeR,IAAI"},"metadata":{},"sourceType":"module"}