{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"cancelTextIOS\", \"cancelTextStyle\", \"confirmTextIOS\", \"confirmTextStyle\", \"contentContainerStyleIOS\", \"cancelButtonContainerStyleIOS\", \"customCancelButtonIOS\", \"customConfirmButtonIOS\", \"customConfirmButtonWhileInteractingIOS\", \"customDatePickerIOS\", \"customTitleContainerIOS\", \"datePickerContainerStyleIOS\", \"dismissOnBackdropPressIOS\", \"hideTitleContainerIOS\", \"isDarkModeEnabled\", \"isVisible\", \"minuteInterval\", \"mode\", \"neverDisableConfirmIOS\", \"pickerRefCb\", \"reactNativeModalPropsIOS\", \"titleIOS\", \"titleStyle\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DatePickerIOS } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ReactNativeModal from \"react-native-modal\";\nimport { isIphoneX } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CustomDatePickerIOS = function (_React$PureComponent) {\n  _inherits(CustomDatePickerIOS, _React$PureComponent);\n  var _super = _createSuper(CustomDatePickerIOS);\n  function CustomDatePickerIOS() {\n    var _this;\n    _classCallCheck(this, CustomDatePickerIOS);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      date: _this.props.date,\n      userIsInteractingWithPicker: false,\n      minuteInterval: _this.props.minuteInterval || 1\n    };\n    _this.handleCancel = function () {\n      _this.confirmed = false;\n      _this.props.onCancel();\n      _this.resetDate();\n    };\n    _this.handleConfirm = function () {\n      _this.confirmed = true;\n      _this.props.onConfirm(_this.state.date);\n      _this.resetDate();\n    };\n    _this.resetDate = function () {\n      _this.setState({\n        date: _this.props.date\n      });\n    };\n    _this.handleModalShow = function () {\n      _this.setState({\n        minuteInterval: _this.props.minuteInterval\n      });\n    };\n    _this.handleModalHide = function () {\n      if (_this.confirmed) {\n        _this.props.onHideAfterConfirm(_this.state.date);\n      }\n    };\n    _this.handleDateChange = function (date) {\n      _this.setState({\n        date: date,\n        userIsInteractingWithPicker: false\n      });\n      _this.props.onDateChange(date);\n    };\n    _this.handleUserTouchInit = function () {\n      if (!_this.props.customDatePickerIOS) {\n        _this.setState({\n          userIsInteractingWithPicker: true\n        });\n      }\n      return false;\n    };\n    return _this;\n  }\n  _createClass(CustomDatePickerIOS, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.date.valueOf() !== nextProps.date.valueOf()) {\n        this.setState({\n          date: nextProps.date\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        cancelTextIOS = _this$props.cancelTextIOS,\n        cancelTextStyle = _this$props.cancelTextStyle,\n        confirmTextIOS = _this$props.confirmTextIOS,\n        confirmTextStyle = _this$props.confirmTextStyle,\n        contentContainerStyleIOS = _this$props.contentContainerStyleIOS,\n        cancelButtonContainerStyleIOS = _this$props.cancelButtonContainerStyleIOS,\n        customCancelButtonIOS = _this$props.customCancelButtonIOS,\n        customConfirmButtonIOS = _this$props.customConfirmButtonIOS,\n        customConfirmButtonWhileInteractingIOS = _this$props.customConfirmButtonWhileInteractingIOS,\n        customDatePickerIOS = _this$props.customDatePickerIOS,\n        customTitleContainerIOS = _this$props.customTitleContainerIOS,\n        datePickerContainerStyleIOS = _this$props.datePickerContainerStyleIOS,\n        dismissOnBackdropPressIOS = _this$props.dismissOnBackdropPressIOS,\n        hideTitleContainerIOS = _this$props.hideTitleContainerIOS,\n        isDarkModeEnabled = _this$props.isDarkModeEnabled,\n        isVisible = _this$props.isVisible,\n        minuteInterval = _this$props.minuteInterval,\n        mode = _this$props.mode,\n        neverDisableConfirmIOS = _this$props.neverDisableConfirmIOS,\n        pickerRefCb = _this$props.pickerRefCb,\n        reactNativeModalPropsIOS = _this$props.reactNativeModalPropsIOS,\n        titleIOS = _this$props.titleIOS,\n        titleStyle = _this$props.titleStyle,\n        otherProps = _objectWithoutProperties(_this$props, _excluded);\n      var titleContainer = _jsx(View, {\n        style: styles.titleContainer,\n        children: _jsx(Text, {\n          style: [styles.title, titleStyle],\n          children: titleIOS\n        })\n      });\n      var confirmButton;\n\n      if (customConfirmButtonIOS) {\n        if (customConfirmButtonWhileInteractingIOS && this.state.userIsInteractingWithPicker) {\n          confirmButton = customConfirmButtonWhileInteractingIOS;\n        } else {\n          confirmButton = customConfirmButtonIOS;\n        }\n      } else {\n        confirmButton = _jsx(Text, {\n          style: [styles.confirmText, confirmTextStyle],\n          children: confirmTextIOS\n        });\n      }\n      var cancelButton = _jsx(Text, {\n        style: [styles.cancelText, cancelTextStyle],\n        children: cancelTextIOS\n      });\n      var DatePickerComponent = customDatePickerIOS || DatePickerIOS;\n      var reactNativeModalProps = _objectSpread({\n        onBackdropPress: dismissOnBackdropPressIOS ? this.handleCancel : function () {\n          return null;\n        }\n      }, reactNativeModalPropsIOS);\n      var backgroundColor = isDarkModeEnabled ? BACKGROUND_COLOR_DARK : BACKGROUND_COLOR_LIGHT;\n      return _jsxs(ReactNativeModal, _objectSpread(_objectSpread({\n        isVisible: isVisible,\n        style: [styles.contentContainer, contentContainerStyleIOS],\n        onModalHide: this.handleModalHide,\n        onModalShow: this.handleModalShow,\n        backdropOpacity: 0.4\n      }, reactNativeModalProps), {}, {\n        children: [_jsxs(View, {\n          style: [styles.datepickerContainer, {\n            backgroundColor: backgroundColor\n          }, datePickerContainerStyleIOS],\n          children: [!hideTitleContainerIOS && (customTitleContainerIOS || titleContainer), _jsx(View, {\n            onStartShouldSetResponderCapture: neverDisableConfirmIOS !== true ? this.handleUserTouchInit : null,\n            children: _jsx(DatePickerComponent, _objectSpread(_objectSpread({\n              ref: pickerRefCb,\n              mode: mode,\n              minuteInterval: this.state.minuteInterval\n            }, otherProps), {}, {\n              date: this.state.date,\n              onDateChange: this.handleDateChange\n            }))\n          }), _jsx(TouchableHighlight, {\n            style: styles.confirmButton,\n            underlayColor: HIGHLIGHT_COLOR,\n            onPress: this.handleConfirm,\n            disabled: !neverDisableConfirmIOS && this.state.userIsInteractingWithPicker,\n            children: confirmButton\n          })]\n        }), _jsx(TouchableHighlight, {\n          style: [styles.cancelButton, {\n            backgroundColor: backgroundColor\n          }, cancelButtonContainerStyleIOS],\n          underlayColor: HIGHLIGHT_COLOR,\n          onPress: this.handleCancel,\n          children: customCancelButtonIOS || cancelButton\n        })]\n      }));\n    }\n  }]);\n  return CustomDatePickerIOS;\n}(React.PureComponent);\nCustomDatePickerIOS.propTypes = {\n  cancelTextIOS: PropTypes.string,\n  cancelTextStyle: PropTypes.any,\n  confirmTextIOS: PropTypes.string,\n  confirmTextStyle: PropTypes.any,\n  contentContainerStyleIOS: PropTypes.any,\n  cancelButtonContainerStyleIOS: PropTypes.any,\n  customCancelButtonIOS: PropTypes.node,\n  customConfirmButtonIOS: PropTypes.node,\n  customConfirmButtonWhileInteractingIOS: PropTypes.node,\n  customDatePickerIOS: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  customTitleContainerIOS: PropTypes.node,\n  dismissOnBackdropPressIOS: PropTypes.bool,\n  hideTitleContainerIOS: PropTypes.bool,\n  isDarkModeEnabled: PropTypes.bool,\n  isVisible: PropTypes.bool,\n  date: PropTypes.instanceOf(Date),\n  datePickerContainerStyleIOS: PropTypes.any,\n  mode: PropTypes.oneOf([\"date\", \"time\", \"datetime\"]),\n  neverDisableConfirmIOS: PropTypes.bool,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func,\n  onHideAfterConfirm: PropTypes.func,\n  pickerRefCb: PropTypes.func,\n  reactNativeModalPropsIOS: PropTypes.any,\n  titleIOS: PropTypes.string,\n  titleStyle: PropTypes.any\n};\nCustomDatePickerIOS.defaultProps = {\n  cancelTextIOS: \"Cancel\",\n  confirmTextIOS: \"Confirm\",\n  date: new Date(),\n  dismissOnBackdropPressIOS: true,\n  hideTitleContainerIOS: false,\n  isDarkModeEnabled: false,\n  isVisible: false,\n  mode: \"date\",\n  neverDisableConfirmIOS: false,\n  onHideAfterConfirm: function onHideAfterConfirm() {},\n  onDateChange: function onDateChange() {},\n  reactNativeModalPropsIOS: {},\n  titleIOS: \"Pick a date\"\n};\nexport { CustomDatePickerIOS as default };\nvar BORDER_RADIUS = 13;\nvar BACKGROUND_COLOR_LIGHT = \"white\";\nvar BACKGROUND_COLOR_DARK = \"#0E0E0E\";\nvar BORDER_COLOR = \"#d5d5d5\";\nvar TITLE_FONT_SIZE = 13;\nvar TITLE_COLOR = \"#8f8f8f\";\nvar BUTTON_FONT_WEIGHT = \"normal\";\nvar BUTTON_FONT_COLOR = \"#007ff9\";\nvar BUTTON_FONT_SIZE = 20;\nvar HIGHLIGHT_COLOR = \"#ebebeb\";\nvar styles = StyleSheet.create({\n  contentContainer: {\n    justifyContent: \"flex-end\",\n    margin: 10\n  },\n  datepickerContainer: {\n    borderRadius: BORDER_RADIUS,\n    marginBottom: 8,\n    overflow: \"hidden\"\n  },\n  titleContainer: {\n    borderBottomColor: BORDER_COLOR,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    padding: 14,\n    backgroundColor: \"transparent\"\n  },\n  title: {\n    textAlign: \"center\",\n    color: TITLE_COLOR,\n    fontSize: TITLE_FONT_SIZE\n  },\n  confirmButton: {\n    borderColor: BORDER_COLOR,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    backgroundColor: \"transparent\",\n    height: 57,\n    justifyContent: \"center\"\n  },\n  confirmText: {\n    textAlign: \"center\",\n    color: BUTTON_FONT_COLOR,\n    fontSize: BUTTON_FONT_SIZE,\n    fontWeight: BUTTON_FONT_WEIGHT,\n    backgroundColor: \"transparent\"\n  },\n  cancelButton: {\n    borderRadius: BORDER_RADIUS,\n    height: 57,\n    marginBottom: isIphoneX() ? 20 : 0,\n    justifyContent: \"center\"\n  },\n  cancelText: {\n    padding: 10,\n    textAlign: \"center\",\n    color: BUTTON_FONT_COLOR,\n    fontSize: BUTTON_FONT_SIZE,\n    fontWeight: \"600\",\n    backgroundColor: \"transparent\"\n  }\n});","map":{"version":3,"names":["React","PropTypes","DatePickerIOS","ReactNativeModal","isIphoneX","CustomDatePickerIOS","state","date","props","userIsInteractingWithPicker","minuteInterval","handleCancel","confirmed","onCancel","resetDate","handleConfirm","onConfirm","setState","handleModalShow","handleModalHide","onHideAfterConfirm","handleDateChange","onDateChange","handleUserTouchInit","customDatePickerIOS","nextProps","valueOf","cancelTextIOS","cancelTextStyle","confirmTextIOS","confirmTextStyle","contentContainerStyleIOS","cancelButtonContainerStyleIOS","customCancelButtonIOS","customConfirmButtonIOS","customConfirmButtonWhileInteractingIOS","customTitleContainerIOS","datePickerContainerStyleIOS","dismissOnBackdropPressIOS","hideTitleContainerIOS","isDarkModeEnabled","isVisible","mode","neverDisableConfirmIOS","pickerRefCb","reactNativeModalPropsIOS","titleIOS","titleStyle","otherProps","titleContainer","styles","title","confirmButton","confirmText","cancelButton","cancelText","DatePickerComponent","reactNativeModalProps","onBackdropPress","backgroundColor","BACKGROUND_COLOR_DARK","BACKGROUND_COLOR_LIGHT","contentContainer","datepickerContainer","HIGHLIGHT_COLOR","PureComponent","propTypes","string","any","node","oneOfType","func","bool","instanceOf","Date","oneOf","isRequired","defaultProps","BORDER_RADIUS","BORDER_COLOR","TITLE_FONT_SIZE","TITLE_COLOR","BUTTON_FONT_WEIGHT","BUTTON_FONT_COLOR","BUTTON_FONT_SIZE","StyleSheet","create","justifyContent","margin","borderRadius","marginBottom","overflow","borderBottomColor","borderBottomWidth","hairlineWidth","padding","textAlign","color","fontSize","borderColor","borderTopWidth","height","fontWeight"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/node_modules/react-native-modal-datetime-picker/src/CustomDatePickerIOS.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  DatePickerIOS,\n  StyleSheet,\n  Text,\n  TouchableHighlight,\n  View\n} from \"react-native\";\nimport ReactNativeModal from \"react-native-modal\";\nimport { isIphoneX } from \"./utils\";\n\nexport default class CustomDatePickerIOS extends React.PureComponent {\n  static propTypes = {\n    cancelTextIOS: PropTypes.string,\n    cancelTextStyle: PropTypes.any,\n    confirmTextIOS: PropTypes.string,\n    confirmTextStyle: PropTypes.any,\n    contentContainerStyleIOS: PropTypes.any,\n    cancelButtonContainerStyleIOS: PropTypes.any,\n    customCancelButtonIOS: PropTypes.node,\n    customConfirmButtonIOS: PropTypes.node,\n    customConfirmButtonWhileInteractingIOS: PropTypes.node,\n    customDatePickerIOS: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    customTitleContainerIOS: PropTypes.node,\n    dismissOnBackdropPressIOS: PropTypes.bool,\n    hideTitleContainerIOS: PropTypes.bool,\n    isDarkModeEnabled: PropTypes.bool,\n    isVisible: PropTypes.bool,\n    date: PropTypes.instanceOf(Date),\n    datePickerContainerStyleIOS: PropTypes.any,\n    mode: PropTypes.oneOf([\"date\", \"time\", \"datetime\"]),\n    neverDisableConfirmIOS: PropTypes.bool,\n    onCancel: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    onDateChange: PropTypes.func,\n    onHideAfterConfirm: PropTypes.func,\n    pickerRefCb: PropTypes.func,\n    reactNativeModalPropsIOS: PropTypes.any,\n    titleIOS: PropTypes.string,\n    titleStyle: PropTypes.any\n  };\n\n  static defaultProps = {\n    cancelTextIOS: \"Cancel\",\n    confirmTextIOS: \"Confirm\",\n    date: new Date(),\n    dismissOnBackdropPressIOS: true,\n    hideTitleContainerIOS: false,\n    isDarkModeEnabled: false,\n    isVisible: false,\n    mode: \"date\",\n    neverDisableConfirmIOS: false,\n    onHideAfterConfirm: () => {},\n    onDateChange: () => {},\n    reactNativeModalPropsIOS: {},\n    titleIOS: \"Pick a date\"\n  };\n\n  state = {\n    date: this.props.date,\n    userIsInteractingWithPicker: false,\n    minuteInterval: this.props.minuteInterval || 1\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.date.valueOf() !== nextProps.date.valueOf()) {\n      this.setState({\n        date: nextProps.date\n      });\n    }\n  }\n\n  handleCancel = () => {\n    this.confirmed = false;\n    this.props.onCancel();\n    this.resetDate();\n  };\n\n  handleConfirm = () => {\n    this.confirmed = true;\n    this.props.onConfirm(this.state.date);\n    this.resetDate();\n  };\n\n  resetDate = () => {\n    this.setState({\n      date: this.props.date\n    });\n  };\n\n  handleModalShow = () => {\n    this.setState({ minuteInterval: this.props.minuteInterval });\n  };\n\n  handleModalHide = () => {\n    if (this.confirmed) {\n      this.props.onHideAfterConfirm(this.state.date);\n    }\n  };\n\n  handleDateChange = date => {\n    this.setState({\n      date,\n      userIsInteractingWithPicker: false\n    });\n    this.props.onDateChange(date);\n  };\n\n  handleUserTouchInit = () => {\n    // custom date picker shouldn't change this param\n    if (!this.props.customDatePickerIOS) {\n      this.setState({\n        userIsInteractingWithPicker: true\n      });\n    }\n    return false;\n  };\n\n  render() {\n    const {\n      cancelTextIOS,\n      cancelTextStyle,\n      confirmTextIOS,\n      confirmTextStyle,\n      contentContainerStyleIOS,\n      cancelButtonContainerStyleIOS,\n      customCancelButtonIOS,\n      customConfirmButtonIOS,\n      customConfirmButtonWhileInteractingIOS,\n      customDatePickerIOS,\n      customTitleContainerIOS,\n      datePickerContainerStyleIOS,\n      dismissOnBackdropPressIOS,\n      hideTitleContainerIOS,\n      isDarkModeEnabled,\n      isVisible,\n      minuteInterval,\n      mode,\n      neverDisableConfirmIOS,\n      pickerRefCb,\n      reactNativeModalPropsIOS,\n      titleIOS,\n      titleStyle,\n      ...otherProps\n    } = this.props;\n\n    const titleContainer = (\n      <View style={styles.titleContainer}>\n        <Text style={[styles.title, titleStyle]}>{titleIOS}</Text>\n      </View>\n    );\n    let confirmButton;\n\n    // Interested PR: https://github.com/mmazzarolo/react-native-modal-datetime-picker/pull/40\n    // Issue on React-Native: https://github.com/facebook/react-native/issues/8169\n    // Up until now when the user interacted with the picker, if he tapped on the confirm button,\n    // the state was not yet changed and thus the picked value would be old and miss-leading.\n    // DatePickerIOS does not update on the fly, and before it even manages to dispatch an update,\n    // our component is unmounted and thus the state is lost.\n    // We no longer allow our user to tap the confirm button unless the picker is still.\n    // They can always tap the cancel button anyway.\n    if (customConfirmButtonIOS) {\n      if (\n        customConfirmButtonWhileInteractingIOS &&\n        this.state.userIsInteractingWithPicker\n      ) {\n        confirmButton = customConfirmButtonWhileInteractingIOS;\n      } else {\n        confirmButton = customConfirmButtonIOS;\n      }\n    } else {\n      confirmButton = (\n        <Text style={[styles.confirmText, confirmTextStyle]}>\n          {confirmTextIOS}\n        </Text>\n      );\n    }\n    const cancelButton = (\n      <Text style={[styles.cancelText, cancelTextStyle]}>{cancelTextIOS}</Text>\n    );\n    const DatePickerComponent = customDatePickerIOS || DatePickerIOS;\n\n    const reactNativeModalProps = {\n      onBackdropPress: dismissOnBackdropPressIOS\n        ? this.handleCancel\n        : () => null,\n      ...reactNativeModalPropsIOS\n    };\n\n    const backgroundColor = isDarkModeEnabled ? BACKGROUND_COLOR_DARK : BACKGROUND_COLOR_LIGHT;\n\n    return (\n      <ReactNativeModal\n        isVisible={isVisible}\n        style={[styles.contentContainer, contentContainerStyleIOS]}\n        onModalHide={this.handleModalHide}\n        onModalShow={this.handleModalShow}\n        backdropOpacity={0.4}\n        {...reactNativeModalProps}\n      >\n        <View style={[styles.datepickerContainer, { backgroundColor }, datePickerContainerStyleIOS]}>\n          {!hideTitleContainerIOS &&\n            (customTitleContainerIOS || titleContainer)}\n          <View\n            onStartShouldSetResponderCapture={\n              neverDisableConfirmIOS !== true ? this.handleUserTouchInit : null\n            }\n          >\n            <DatePickerComponent\n              ref={pickerRefCb}\n              mode={mode}\n              minuteInterval={this.state.minuteInterval}\n              {...otherProps}\n              date={this.state.date}\n              onDateChange={this.handleDateChange}\n            />\n          </View>\n          <TouchableHighlight\n            style={styles.confirmButton}\n            underlayColor={HIGHLIGHT_COLOR}\n            onPress={this.handleConfirm}\n            disabled={\n              !neverDisableConfirmIOS && this.state.userIsInteractingWithPicker\n            }\n          >\n            {confirmButton}\n          </TouchableHighlight>\n        </View>\n\n        <TouchableHighlight\n          style={[styles.cancelButton, { backgroundColor }, cancelButtonContainerStyleIOS]}\n          underlayColor={HIGHLIGHT_COLOR}\n          onPress={this.handleCancel}\n        >\n          {customCancelButtonIOS || cancelButton}\n        </TouchableHighlight>\n      </ReactNativeModal>\n    );\n  }\n}\n\nconst BORDER_RADIUS = 13;\nconst BACKGROUND_COLOR_LIGHT = \"white\";\nconst BACKGROUND_COLOR_DARK = \"#0E0E0E\";\nconst BORDER_COLOR = \"#d5d5d5\";\nconst TITLE_FONT_SIZE = 13;\nconst TITLE_COLOR = \"#8f8f8f\";\nconst BUTTON_FONT_WEIGHT = \"normal\";\nconst BUTTON_FONT_COLOR = \"#007ff9\";\nconst BUTTON_FONT_SIZE = 20;\nconst HIGHLIGHT_COLOR = \"#ebebeb\";\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    justifyContent: \"flex-end\",\n    margin: 10\n  },\n  datepickerContainer: {\n    borderRadius: BORDER_RADIUS,\n    marginBottom: 8,\n    overflow: \"hidden\"\n  },\n  titleContainer: {\n    borderBottomColor: BORDER_COLOR,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    padding: 14,\n    backgroundColor: \"transparent\"\n  },\n  title: {\n    textAlign: \"center\",\n    color: TITLE_COLOR,\n    fontSize: TITLE_FONT_SIZE\n  },\n  confirmButton: {\n    borderColor: BORDER_COLOR,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    backgroundColor: \"transparent\",\n    height: 57,\n    justifyContent: \"center\"\n  },\n  confirmText: {\n    textAlign: \"center\",\n    color: BUTTON_FONT_COLOR,\n    fontSize: BUTTON_FONT_SIZE,\n    fontWeight: BUTTON_FONT_WEIGHT,\n    backgroundColor: \"transparent\"\n  },\n  cancelButton: {\n    borderRadius: BORDER_RADIUS,\n    height: 57,\n    marginBottom: isIphoneX() ? 20 : 0,\n    justifyContent: \"center\"\n  },\n  cancelText: {\n    padding: 10,\n    textAlign: \"center\",\n    color: BUTTON_FONT_COLOR,\n    fontSize: BUTTON_FONT_SIZE,\n    fontWeight: \"600\",\n    backgroundColor: \"transparent\"\n  }\n});\n"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAEjCC,aAAa;AAAA;AAAA;AAAA;AAAA;AAMf,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,SAAS;AAAkB;AAAA;AAAA,IAEfC,mBAAmB;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MA+CtCC,KAAK,GAAG;MACNC,IAAI,EAAE,MAAKC,KAAK,CAACD,IAAI;MACrBE,2BAA2B,EAAE,KAAK;MAClCC,cAAc,EAAE,MAAKF,KAAK,CAACE,cAAc,IAAI;IAC/C,CAAC;IAAA,MAUDC,YAAY,GAAG,YAAM;MACnB,MAAKC,SAAS,GAAG,KAAK;MACtB,MAAKJ,KAAK,CAACK,QAAQ,EAAE;MACrB,MAAKC,SAAS,EAAE;IAClB,CAAC;IAAA,MAEDC,aAAa,GAAG,YAAM;MACpB,MAAKH,SAAS,GAAG,IAAI;MACrB,MAAKJ,KAAK,CAACQ,SAAS,CAAC,MAAKV,KAAK,CAACC,IAAI,CAAC;MACrC,MAAKO,SAAS,EAAE;IAClB,CAAC;IAAA,MAEDA,SAAS,GAAG,YAAM;MAChB,MAAKG,QAAQ,CAAC;QACZV,IAAI,EAAE,MAAKC,KAAK,CAACD;MACnB,CAAC,CAAC;IACJ,CAAC;IAAA,MAEDW,eAAe,GAAG,YAAM;MACtB,MAAKD,QAAQ,CAAC;QAAEP,cAAc,EAAE,MAAKF,KAAK,CAACE;MAAe,CAAC,CAAC;IAC9D,CAAC;IAAA,MAEDS,eAAe,GAAG,YAAM;MACtB,IAAI,MAAKP,SAAS,EAAE;QAClB,MAAKJ,KAAK,CAACY,kBAAkB,CAAC,MAAKd,KAAK,CAACC,IAAI,CAAC;MAChD;IACF,CAAC;IAAA,MAEDc,gBAAgB,GAAG,UAAAd,IAAI,EAAI;MACzB,MAAKU,QAAQ,CAAC;QACZV,IAAI,EAAJA,IAAI;QACJE,2BAA2B,EAAE;MAC/B,CAAC,CAAC;MACF,MAAKD,KAAK,CAACc,YAAY,CAACf,IAAI,CAAC;IAC/B,CAAC;IAAA,MAEDgB,mBAAmB,GAAG,YAAM;MAE1B,IAAI,CAAC,MAAKf,KAAK,CAACgB,mBAAmB,EAAE;QACnC,MAAKP,QAAQ,CAAC;UACZR,2BAA2B,EAAE;QAC/B,CAAC,CAAC;MACJ;MACA,OAAO,KAAK;IACd,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OApDD,mCAA0BgB,SAAS,EAAE;MACnC,IAAI,IAAI,CAACjB,KAAK,CAACD,IAAI,CAACmB,OAAO,EAAE,KAAKD,SAAS,CAAClB,IAAI,CAACmB,OAAO,EAAE,EAAE;QAC1D,IAAI,CAACT,QAAQ,CAAC;UACZV,IAAI,EAAEkB,SAAS,CAAClB;QAClB,CAAC,CAAC;MACJ;IACF;EAAC;IAAA;IAAA,OAgDD,kBAAS;MACP,kBAyBI,IAAI,CAACC,KAAK;QAxBZmB,aAAa,eAAbA,aAAa;QACbC,eAAe,eAAfA,eAAe;QACfC,cAAc,eAAdA,cAAc;QACdC,gBAAgB,eAAhBA,gBAAgB;QAChBC,wBAAwB,eAAxBA,wBAAwB;QACxBC,6BAA6B,eAA7BA,6BAA6B;QAC7BC,qBAAqB,eAArBA,qBAAqB;QACrBC,sBAAsB,eAAtBA,sBAAsB;QACtBC,sCAAsC,eAAtCA,sCAAsC;QACtCX,mBAAmB,eAAnBA,mBAAmB;QACnBY,uBAAuB,eAAvBA,uBAAuB;QACvBC,2BAA2B,eAA3BA,2BAA2B;QAC3BC,yBAAyB,eAAzBA,yBAAyB;QACzBC,qBAAqB,eAArBA,qBAAqB;QACrBC,iBAAiB,eAAjBA,iBAAiB;QACjBC,SAAS,eAATA,SAAS;QACT/B,cAAc,eAAdA,cAAc;QACdgC,IAAI,eAAJA,IAAI;QACJC,sBAAsB,eAAtBA,sBAAsB;QACtBC,WAAW,eAAXA,WAAW;QACXC,wBAAwB,eAAxBA,wBAAwB;QACxBC,QAAQ,eAARA,QAAQ;QACRC,UAAU,eAAVA,UAAU;QACPC,UAAU;MAGf,IAAMC,cAAc,GAClB,KAAC,IAAI;QAAC,KAAK,EAAEC,MAAM,CAACD,cAAe;QAAA,UACjC,KAAC,IAAI;UAAC,KAAK,EAAE,CAACC,MAAM,CAACC,KAAK,EAAEJ,UAAU,CAAE;UAAA,UAAED;QAAQ;MAAQ,EAE7D;MACD,IAAIM,aAAa;;MAUjB,IAAIlB,sBAAsB,EAAE;QAC1B,IACEC,sCAAsC,IACtC,IAAI,CAAC7B,KAAK,CAACG,2BAA2B,EACtC;UACA2C,aAAa,GAAGjB,sCAAsC;QACxD,CAAC,MAAM;UACLiB,aAAa,GAAGlB,sBAAsB;QACxC;MACF,CAAC,MAAM;QACLkB,aAAa,GACX,KAAC,IAAI;UAAC,KAAK,EAAE,CAACF,MAAM,CAACG,WAAW,EAAEvB,gBAAgB,CAAE;UAAA,UACjDD;QAAc,EAElB;MACH;MACA,IAAMyB,YAAY,GAChB,KAAC,IAAI;QAAC,KAAK,EAAE,CAACJ,MAAM,CAACK,UAAU,EAAE3B,eAAe,CAAE;QAAA,UAAED;MAAa,EAClE;MACD,IAAM6B,mBAAmB,GAAGhC,mBAAmB,IAAItB,aAAa;MAEhE,IAAMuD,qBAAqB;QACzBC,eAAe,EAAEpB,yBAAyB,GACtC,IAAI,CAAC3B,YAAY,GACjB;UAAA,OAAM,IAAI;QAAA;MAAA,GACXkC,wBAAwB,CAC5B;MAED,IAAMc,eAAe,GAAGnB,iBAAiB,GAAGoB,qBAAqB,GAAGC,sBAAsB;MAE1F,OACE,MAAC,gBAAgB;QACf,SAAS,EAAEpB,SAAU;QACrB,KAAK,EAAE,CAACS,MAAM,CAACY,gBAAgB,EAAE/B,wBAAwB,CAAE;QAC3D,WAAW,EAAE,IAAI,CAACZ,eAAgB;QAClC,WAAW,EAAE,IAAI,CAACD,eAAgB;QAClC,eAAe,EAAE;MAAI,GACjBuC,qBAAqB;QAAA,WAEzB,MAAC,IAAI;UAAC,KAAK,EAAE,CAACP,MAAM,CAACa,mBAAmB,EAAE;YAAEJ,eAAe,EAAfA;UAAgB,CAAC,EAAEtB,2BAA2B,CAAE;UAAA,WACzF,CAACE,qBAAqB,KACpBH,uBAAuB,IAAIa,cAAc,CAAC,EAC7C,KAAC,IAAI;YACH,gCAAgC,EAC9BN,sBAAsB,KAAK,IAAI,GAAG,IAAI,CAACpB,mBAAmB,GAAG,IAC9D;YAAA,UAED,KAAC,mBAAmB;cAClB,GAAG,EAAEqB,WAAY;cACjB,IAAI,EAAEF,IAAK;cACX,cAAc,EAAE,IAAI,CAACpC,KAAK,CAACI;YAAe,GACtCsC,UAAU;cACd,IAAI,EAAE,IAAI,CAAC1C,KAAK,CAACC,IAAK;cACtB,YAAY,EAAE,IAAI,CAACc;YAAiB;UACpC,EACG,EACP,KAAC,kBAAkB;YACjB,KAAK,EAAE6B,MAAM,CAACE,aAAc;YAC5B,aAAa,EAAEY,eAAgB;YAC/B,OAAO,EAAE,IAAI,CAACjD,aAAc;YAC5B,QAAQ,EACN,CAAC4B,sBAAsB,IAAI,IAAI,CAACrC,KAAK,CAACG,2BACvC;YAAA,UAEA2C;UAAa,EACK;QAAA,EAChB,EAEP,KAAC,kBAAkB;UACjB,KAAK,EAAE,CAACF,MAAM,CAACI,YAAY,EAAE;YAAEK,eAAe,EAAfA;UAAgB,CAAC,EAAE3B,6BAA6B,CAAE;UACjF,aAAa,EAAEgC,eAAgB;UAC/B,OAAO,EAAE,IAAI,CAACrD,YAAa;UAAA,UAE1BsB,qBAAqB,IAAIqB;QAAY,EACnB;MAAA,GACJ;IAEvB;EAAC;EAAA;AAAA,EAnO8CtD,KAAK,CAACiE,aAAa;AAA/C5D,mBAAmB,CAC/B6D,SAAS,GAAG;EACjBvC,aAAa,EAAE1B,SAAS,CAACkE,MAAM;EAC/BvC,eAAe,EAAE3B,SAAS,CAACmE,GAAG;EAC9BvC,cAAc,EAAE5B,SAAS,CAACkE,MAAM;EAChCrC,gBAAgB,EAAE7B,SAAS,CAACmE,GAAG;EAC/BrC,wBAAwB,EAAE9B,SAAS,CAACmE,GAAG;EACvCpC,6BAA6B,EAAE/B,SAAS,CAACmE,GAAG;EAC5CnC,qBAAqB,EAAEhC,SAAS,CAACoE,IAAI;EACrCnC,sBAAsB,EAAEjC,SAAS,CAACoE,IAAI;EACtClC,sCAAsC,EAAElC,SAAS,CAACoE,IAAI;EACtD7C,mBAAmB,EAAEvB,SAAS,CAACqE,SAAS,CAAC,CAACrE,SAAS,CAACoE,IAAI,EAAEpE,SAAS,CAACsE,IAAI,CAAC,CAAC;EAC1EnC,uBAAuB,EAAEnC,SAAS,CAACoE,IAAI;EACvC/B,yBAAyB,EAAErC,SAAS,CAACuE,IAAI;EACzCjC,qBAAqB,EAAEtC,SAAS,CAACuE,IAAI;EACrChC,iBAAiB,EAAEvC,SAAS,CAACuE,IAAI;EACjC/B,SAAS,EAAExC,SAAS,CAACuE,IAAI;EACzBjE,IAAI,EAAEN,SAAS,CAACwE,UAAU,CAACC,IAAI,CAAC;EAChCrC,2BAA2B,EAAEpC,SAAS,CAACmE,GAAG;EAC1C1B,IAAI,EAAEzC,SAAS,CAAC0E,KAAK,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;EACnDhC,sBAAsB,EAAE1C,SAAS,CAACuE,IAAI;EACtC3D,QAAQ,EAAEZ,SAAS,CAACsE,IAAI,CAACK,UAAU;EACnC5D,SAAS,EAAEf,SAAS,CAACsE,IAAI,CAACK,UAAU;EACpCtD,YAAY,EAAErB,SAAS,CAACsE,IAAI;EAC5BnD,kBAAkB,EAAEnB,SAAS,CAACsE,IAAI;EAClC3B,WAAW,EAAE3C,SAAS,CAACsE,IAAI;EAC3B1B,wBAAwB,EAAE5C,SAAS,CAACmE,GAAG;EACvCtB,QAAQ,EAAE7C,SAAS,CAACkE,MAAM;EAC1BpB,UAAU,EAAE9C,SAAS,CAACmE;AACxB,CAAC;AA7BkB/D,mBAAmB,CA+B/BwE,YAAY,GAAG;EACpBlD,aAAa,EAAE,QAAQ;EACvBE,cAAc,EAAE,SAAS;EACzBtB,IAAI,EAAE,IAAImE,IAAI,EAAE;EAChBpC,yBAAyB,EAAE,IAAI;EAC/BC,qBAAqB,EAAE,KAAK;EAC5BC,iBAAiB,EAAE,KAAK;EACxBC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE,MAAM;EACZC,sBAAsB,EAAE,KAAK;EAC7BvB,kBAAkB,EAAE,8BAAM,CAAC,CAAC;EAC5BE,YAAY,EAAE,wBAAM,CAAC,CAAC;EACtBuB,wBAAwB,EAAE,CAAC,CAAC;EAC5BC,QAAQ,EAAE;AACZ,CAAC;AAAA,SA7CkBzC,mBAAmB;AAsOxC,IAAMyE,aAAa,GAAG,EAAE;AACxB,IAAMjB,sBAAsB,GAAG,OAAO;AACtC,IAAMD,qBAAqB,GAAG,SAAS;AACvC,IAAMmB,YAAY,GAAG,SAAS;AAC9B,IAAMC,eAAe,GAAG,EAAE;AAC1B,IAAMC,WAAW,GAAG,SAAS;AAC7B,IAAMC,kBAAkB,GAAG,QAAQ;AACnC,IAAMC,iBAAiB,GAAG,SAAS;AACnC,IAAMC,gBAAgB,GAAG,EAAE;AAC3B,IAAMpB,eAAe,GAAG,SAAS;AAEjC,IAAMd,MAAM,GAAGmC,UAAU,CAACC,MAAM,CAAC;EAC/BxB,gBAAgB,EAAE;IAChByB,cAAc,EAAE,UAAU;IAC1BC,MAAM,EAAE;EACV,CAAC;EACDzB,mBAAmB,EAAE;IACnB0B,YAAY,EAAEX,aAAa;IAC3BY,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE;EACZ,CAAC;EACD1C,cAAc,EAAE;IACd2C,iBAAiB,EAAEb,YAAY;IAC/Bc,iBAAiB,EAAER,UAAU,CAACS,aAAa;IAC3CC,OAAO,EAAE,EAAE;IACXpC,eAAe,EAAE;EACnB,CAAC;EACDR,KAAK,EAAE;IACL6C,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAEhB,WAAW;IAClBiB,QAAQ,EAAElB;EACZ,CAAC;EACD5B,aAAa,EAAE;IACb+C,WAAW,EAAEpB,YAAY;IACzBqB,cAAc,EAAEf,UAAU,CAACS,aAAa;IACxCnC,eAAe,EAAE,aAAa;IAC9B0C,MAAM,EAAE,EAAE;IACVd,cAAc,EAAE;EAClB,CAAC;EACDlC,WAAW,EAAE;IACX2C,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAEd,iBAAiB;IACxBe,QAAQ,EAAEd,gBAAgB;IAC1BkB,UAAU,EAAEpB,kBAAkB;IAC9BvB,eAAe,EAAE;EACnB,CAAC;EACDL,YAAY,EAAE;IACZmC,YAAY,EAAEX,aAAa;IAC3BuB,MAAM,EAAE,EAAE;IACVX,YAAY,EAAEtF,SAAS,EAAE,GAAG,EAAE,GAAG,CAAC;IAClCmF,cAAc,EAAE;EAClB,CAAC;EACDhC,UAAU,EAAE;IACVwC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAEd,iBAAiB;IACxBe,QAAQ,EAAEd,gBAAgB;IAC1BkB,UAAU,EAAE,KAAK;IACjB3C,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}