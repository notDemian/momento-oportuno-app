{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useTheme } from '@react-navigation/native';\nimport Container from \"../Container\";\nimport Text from \"../Text\";\nimport BouncyCheckbox from 'react-native-bouncy-checkbox';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar RadioButton = function RadioButton(_ref) {\n  var data = _ref.data,\n    onItemPressed = _ref.onItemPressed,\n    defaultValue = _ref.defaultValue;\n  var _useTheme = useTheme(),\n    _useTheme$colors = _useTheme.colors,\n    primary = _useTheme$colors.primary,\n    border = _useTheme$colors.border,\n    text = _useTheme$colors.text,\n    card = _useTheme$colors.card;\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    selectedValue = _React$useState2[0],\n    setSelectedValue = _React$useState2[1];\n  var _onPress = function _onPress(item) {\n    return function () {\n      setSelectedValue(item.value);\n      onItemPressed(item);\n    };\n  };\n  var _handleOnCheckboxPress = function _handleOnCheckboxPress() {};\n  return _jsx(_Fragment, {\n    children: data.map(function (item) {\n      var value = item.value,\n        label = item.label,\n        rightElement = item.rightElement;\n      var isChecked = value === defaultValue;\n      if (selectedValue) {\n        isChecked = value === selectedValue;\n      }\n      return _jsx(Container, {\n        style: [styles.container, {\n          borderBottomColor: border\n        }],\n        children: _jsxs(TouchableOpacity, {\n          style: styles.button,\n          onPress: _onPress(item),\n          children: [_jsxs(Container, {\n            style: styles.checkBoxContainer,\n            children: [_jsx(View, {\n              children: _jsx(BouncyCheckbox, {\n                disableBuiltInState: true,\n                isChecked: isChecked,\n                size: 25,\n                fillColor: primary,\n                unfillColor: card,\n                iconStyle: {\n                  borderColor: primary\n                },\n                textStyle: {\n                  color: text\n                },\n                onPress: _handleOnCheckboxPress\n              })\n            }), _jsx(View, {\n              children: _jsx(Text, {\n                children: label\n              })\n            })]\n          }), rightElement && _jsx(Container, {\n            style: styles.rightElementContainer,\n            children: rightElement\n          })]\n        })\n      }, value);\n    })\n  });\n};\nexport default RadioButton;","map":{"version":3,"names":["React","useTheme","Container","Text","BouncyCheckbox","styles","RadioButton","data","onItemPressed","defaultValue","colors","primary","border","text","card","useState","selectedValue","setSelectedValue","_onPress","item","value","_handleOnCheckboxPress","map","label","rightElement","isChecked","container","borderBottomColor","button","checkBoxContainer","borderColor","color","rightElementContainer"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/elements/RadioButton/RadioButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport {useTheme} from '@react-navigation/native';\nimport Container from '../Container';\nimport Text from '../Text';\nimport BouncyCheckbox from 'react-native-bouncy-checkbox';\nimport styles from './styles';\n\nexport type RadioOption = {\n  value: string;\n  label: string;\n  rightElement?: React.ReactElement;\n};\n\ntype RadioButtonProps = {\n  data: RadioOption[];\n  defaultValue?: string;\n  onItemPressed: (option: RadioOption) => void;\n};\n\nconst RadioButton: React.FC<RadioButtonProps> = ({\n  data,\n  onItemPressed,\n  defaultValue,\n}) => {\n  const {\n    colors: {primary, border, text, card},\n  } = useTheme();\n  const [selectedValue, setSelectedValue] = React.useState<string>();\n  const _onPress = (item: RadioOption) => {\n    return () => {\n      setSelectedValue(item.value);\n      onItemPressed(item);\n    };\n  };\n\n  const _handleOnCheckboxPress = () => {};\n\n  return (\n    <>\n      {data.map((item) => {\n        const {value, label, rightElement} = item;\n        let isChecked = value === defaultValue;\n        if (selectedValue) {\n          isChecked = value === selectedValue;\n        }\n        return (\n          <Container\n            key={value}\n            style={[styles.container, {borderBottomColor: border}]}>\n            <TouchableOpacity style={styles.button} onPress={_onPress(item)}>\n              <Container style={styles.checkBoxContainer}>\n                <View>\n                  <BouncyCheckbox\n                    disableBuiltInState\n                    isChecked={isChecked}\n                    size={25}\n                    fillColor={primary}\n                    unfillColor={card}\n                    iconStyle={{\n                      borderColor: primary,\n                    }}\n                    textStyle={{\n                      color: text,\n                    }}\n                    onPress={_handleOnCheckboxPress}\n                  />\n                </View>\n                <View>\n                  <Text>{label}</Text>\n                </View>\n              </Container>\n              {rightElement && (\n                <Container style={styles.rightElementContainer}>\n                  {rightElement}\n                </Container>\n              )}\n            </TouchableOpacity>\n          </Container>\n        );\n      })}\n    </>\n  );\n};\n\nexport default RadioButton;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE/B,SAAQC,QAAQ,QAAO,0BAA0B;AACjD,OAAOC,SAAS;AAChB,OAAOC,IAAI;AACX,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,MAAM;AAAiB;AAAA;AAAA;AAc9B,IAAMC,WAAuC,GAAG,SAA1CA,WAAuC,OAIvC;EAAA,IAHJC,IAAI,QAAJA,IAAI;IACJC,aAAa,QAAbA,aAAa;IACbC,YAAY,QAAZA,YAAY;EAEZ,gBAEIR,QAAQ,EAAE;IAAA,6BADZS,MAAM;IAAGC,OAAO,oBAAPA,OAAO;IAAEC,MAAM,oBAANA,MAAM;IAAEC,IAAI,oBAAJA,IAAI;IAAEC,IAAI,oBAAJA,IAAI;EAEtC,sBAA0Cd,KAAK,CAACe,QAAQ,EAAU;IAAA;IAA3DC,aAAa;IAAEC,gBAAgB;EACtC,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,IAAiB,EAAK;IACtC,OAAO,YAAM;MACXF,gBAAgB,CAACE,IAAI,CAACC,KAAK,CAAC;MAC5BZ,aAAa,CAACW,IAAI,CAAC;IACrB,CAAC;EACH,CAAC;EAED,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsB,GAAS,CAAC,CAAC;EAEvC,OACE;IAAA,UACGd,IAAI,CAACe,GAAG,CAAC,UAACH,IAAI,EAAK;MAClB,IAAOC,KAAK,GAAyBD,IAAI,CAAlCC,KAAK;QAAEG,KAAK,GAAkBJ,IAAI,CAA3BI,KAAK;QAAEC,YAAY,GAAIL,IAAI,CAApBK,YAAY;MACjC,IAAIC,SAAS,GAAGL,KAAK,KAAKX,YAAY;MACtC,IAAIO,aAAa,EAAE;QACjBS,SAAS,GAAGL,KAAK,KAAKJ,aAAa;MACrC;MACA,OACE,KAAC,SAAS;QAER,KAAK,EAAE,CAACX,MAAM,CAACqB,SAAS,EAAE;UAACC,iBAAiB,EAAEf;QAAM,CAAC,CAAE;QAAA,UACvD,MAAC,gBAAgB;UAAC,KAAK,EAAEP,MAAM,CAACuB,MAAO;UAAC,OAAO,EAAEV,QAAQ,CAACC,IAAI,CAAE;UAAA,WAC9D,MAAC,SAAS;YAAC,KAAK,EAAEd,MAAM,CAACwB,iBAAkB;YAAA,WACzC,KAAC,IAAI;cAAA,UACH,KAAC,cAAc;gBACb,mBAAmB;gBACnB,SAAS,EAAEJ,SAAU;gBACrB,IAAI,EAAE,EAAG;gBACT,SAAS,EAAEd,OAAQ;gBACnB,WAAW,EAAEG,IAAK;gBAClB,SAAS,EAAE;kBACTgB,WAAW,EAAEnB;gBACf,CAAE;gBACF,SAAS,EAAE;kBACToB,KAAK,EAAElB;gBACT,CAAE;gBACF,OAAO,EAAEQ;cAAuB;YAChC,EACG,EACP,KAAC,IAAI;cAAA,UACH,KAAC,IAAI;gBAAA,UAAEE;cAAK;YAAQ,EACf;UAAA,EACG,EACXC,YAAY,IACX,KAAC,SAAS;YAAC,KAAK,EAAEnB,MAAM,CAAC2B,qBAAsB;YAAA,UAC5CR;UAAY,EAEhB;QAAA;MACgB,GA7BdJ,KAAK,CA8BA;IAEhB,CAAC;EAAC,EACD;AAEP,CAAC;AAED,eAAed,WAAW"},"metadata":{},"sourceType":"module"}