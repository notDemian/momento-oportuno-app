{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, Icon, Divider, Section } from \"../../elements\";\nimport ListRowItem from \"../../elements/List/ListRowItem\";\nimport styles from \"./styles\";\nimport ChangeAppearanceModal from \"./ChangeAppearanceModal\";\nimport ChangeLanguageModal from \"./ChangeLanguageModal\";\nimport themeContext from \"../../../context/theme-context\";\nimport { getStoreURL } from \"../../../utils/store-info\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Settings = function Settings() {\n  var _React$useContext = React.useContext(themeContext),\n    theme = _React$useContext.theme,\n    useSystemTheme = _React$useContext.useSystemTheme;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    enableRTL = _React$useState2[0],\n    setEnableRTL = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isAppearanceModalVisible = _React$useState4[0],\n    setIsAppearanceModalVisible = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isLanguageModalVisible = _React$useState6[0],\n    setIsLanguageModalVisible = _React$useState6[1];\n  React.useEffect(function () {\n    setEnableRTL(I18nManager.isRTL);\n  }, []);\n  var _hideAppearanceModal = function _hideAppearanceModal() {\n    setIsAppearanceModalVisible(false);\n  };\n  var _hideLanguageModal = function _hideLanguageModal() {\n    setIsLanguageModalVisible(false);\n  };\n  var chevronIconName = I18nManager.isRTL ? 'chevron-left' : 'chevron-right';\n  var _renderAppSettingsSection = function _renderAppSettingsSection() {\n    return _jsxs(Section, {\n      title: \"App Settings\",\n      children: [_jsx(ListRowItem, {\n        title: \"Appearance\",\n        onPress: function onPress() {\n          return setIsAppearanceModalVisible(true);\n        },\n        rightIcon: _jsxs(View, {\n          style: styles.settingOptionContainer,\n          children: [_jsx(Text, {\n            style: styles.settingOptionText,\n            children: useSystemTheme ? 'System' : theme.toString()\n          }), _jsx(Icon, {\n            name: chevronIconName\n          })]\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"RTL Layout\",\n        rightIcon: _jsx(Switch, {\n          value: enableRTL,\n          onValueChange: function onValueChange() {\n            setEnableRTL(!enableRTL);\n            I18nManager.forceRTL(!enableRTL);\n            Alert.alert('Reload this page', 'Please reload this page to change the UI direction! ');\n          }\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Language\",\n        onPress: function onPress() {\n          return setIsLanguageModalVisible(true);\n        },\n        rightIcon: _jsxs(View, {\n          style: styles.settingOptionContainer,\n          children: [_jsx(Text, {\n            style: styles.settingOptionText,\n            children: \"English\"\n          }), _jsx(Icon, {\n            name: chevronIconName\n          })]\n        })\n      })]\n    });\n  };\n  var _renderMoreInformationSection = function _renderMoreInformationSection() {\n    return _jsxs(Section, {\n      title: \"More Information\",\n      children: [_jsx(ListRowItem, {\n        title: \"About Us\",\n        onPress: function onPress() {\n          return Linking.openURL(getStoreURL());\n        },\n        rightIcon: _jsx(View, {\n          style: styles.settingOptionContainer,\n          children: _jsx(Icon, {\n            name: chevronIconName\n          })\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Rate The App\",\n        onPress: function onPress() {\n          return Linking.openURL(getStoreURL());\n        },\n        rightIcon: _jsx(View, {\n          style: styles.settingOptionContainer,\n          children: _jsx(Icon, {\n            name: chevronIconName\n          })\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Follow Us On Facebook\",\n        onPress: function onPress() {\n          return Linking.openURL(getStoreURL());\n        },\n        rightIcon: _jsx(View, {\n          style: styles.settingOptionContainer,\n          children: _jsx(Icon, {\n            name: chevronIconName\n          })\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Follow Us On Instagram\",\n        onPress: function onPress() {\n          return Linking.openURL(getStoreURL());\n        },\n        rightIcon: _jsx(View, {\n          style: styles.settingOptionContainer,\n          children: _jsx(Icon, {\n            name: chevronIconName\n          })\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Visit Our Website\",\n        onPress: function onPress() {\n          return Linking.openURL(getStoreURL());\n        },\n        rightIcon: _jsx(View, {\n          style: styles.settingOptionContainer,\n          children: _jsx(Icon, {\n            name: chevronIconName\n          })\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Contact Us\",\n        onPress: function onPress() {\n          return Linking.openURL(getStoreURL());\n        },\n        rightIcon: _jsx(View, {\n          style: styles.settingOptionContainer,\n          children: _jsx(Icon, {\n            name: chevronIconName\n          })\n        })\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsxs(ScrollView, {\n      children: [_renderAppSettingsSection(), _renderMoreInformationSection()]\n    }), _jsx(ChangeAppearanceModal, {\n      isVisible: isAppearanceModalVisible,\n      hideModal: _hideAppearanceModal\n    }), _jsx(ChangeLanguageModal, {\n      isVisible: isLanguageModalVisible,\n      hideModal: _hideLanguageModal\n    })]\n  });\n};\nexport default Settings;","map":{"version":3,"names":["React","Text","Icon","Divider","Section","ListRowItem","styles","ChangeAppearanceModal","ChangeLanguageModal","themeContext","getStoreURL","Settings","useContext","theme","useSystemTheme","useState","enableRTL","setEnableRTL","isAppearanceModalVisible","setIsAppearanceModalVisible","isLanguageModalVisible","setIsLanguageModalVisible","useEffect","I18nManager","isRTL","_hideAppearanceModal","_hideLanguageModal","chevronIconName","_renderAppSettingsSection","settingOptionContainer","settingOptionText","toString","forceRTL","Alert","alert","_renderMoreInformationSection","Linking","openURL","root"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/screens/Settings/Settings.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Switch,\n  View,\n  ScrollView,\n  Linking,\n  I18nManager,\n  Alert,\n} from 'react-native';\nimport {Text, Icon, Divider, Section} from '@src/components/elements';\nimport ListRowItem from '@src/components/elements/List/ListRowItem';\nimport styles from './styles';\nimport ChangeAppearanceModal from './ChangeAppearanceModal';\nimport ChangeLanguageModal from './ChangeLanguageModal';\nimport themeContext from '@src/context/theme-context';\nimport {getStoreURL} from '@src/utils/store-info';\n\ntype SettingsProps = {};\n\nconst Settings: React.FC<SettingsProps> = () => {\n  const {theme, useSystemTheme} = React.useContext(themeContext);\n  const [enableRTL, setEnableRTL] = React.useState(false);\n  const [isAppearanceModalVisible, setIsAppearanceModalVisible] =\n    React.useState(false);\n  const [isLanguageModalVisible, setIsLanguageModalVisible] =\n    React.useState(false);\n\n  React.useEffect(() => {\n    setEnableRTL(I18nManager.isRTL);\n  }, []);\n\n  const _hideAppearanceModal = () => {\n    setIsAppearanceModalVisible(false);\n  };\n\n  const _hideLanguageModal = () => {\n    setIsLanguageModalVisible(false);\n  };\n\n  const chevronIconName = I18nManager.isRTL ? 'chevron-left' : 'chevron-right';\n\n  const _renderAppSettingsSection = () => {\n    return (\n      <Section title=\"App Settings\">\n        <ListRowItem\n          title=\"Appearance\"\n          onPress={() => setIsAppearanceModalVisible(true)}\n          rightIcon={\n            <View style={styles.settingOptionContainer}>\n              <Text style={styles.settingOptionText}>\n                {useSystemTheme ? 'System' : theme.toString()}\n              </Text>\n              <Icon name={chevronIconName} />\n            </View>\n          }\n        />\n        <Divider />\n        <ListRowItem\n          title=\"RTL Layout\"\n          rightIcon={\n            <Switch\n              value={enableRTL}\n              onValueChange={() => {\n                setEnableRTL(!enableRTL);\n                I18nManager.forceRTL(!enableRTL);\n                Alert.alert(\n                  'Reload this page',\n                  'Please reload this page to change the UI direction! ',\n                );\n              }}\n            />\n          }\n        />\n        <Divider />\n        <ListRowItem\n          title=\"Language\"\n          onPress={() => setIsLanguageModalVisible(true)}\n          rightIcon={\n            <View style={styles.settingOptionContainer}>\n              <Text style={styles.settingOptionText}>English</Text>\n              <Icon name={chevronIconName} />\n            </View>\n          }\n        />\n      </Section>\n    );\n  };\n\n  const _renderMoreInformationSection = () => {\n    return (\n      <Section title=\"More Information\">\n        <ListRowItem\n          title=\"About Us\"\n          onPress={() => Linking.openURL(getStoreURL())}\n          rightIcon={\n            <View style={styles.settingOptionContainer}>\n              <Icon name={chevronIconName} />\n            </View>\n          }\n        />\n        <Divider />\n        <ListRowItem\n          title=\"Rate The App\"\n          onPress={() => Linking.openURL(getStoreURL())}\n          rightIcon={\n            <View style={styles.settingOptionContainer}>\n              <Icon name={chevronIconName} />\n            </View>\n          }\n        />\n        <Divider />\n        <ListRowItem\n          title=\"Follow Us On Facebook\"\n          onPress={() => Linking.openURL(getStoreURL())}\n          rightIcon={\n            <View style={styles.settingOptionContainer}>\n              <Icon name={chevronIconName} />\n            </View>\n          }\n        />\n        <Divider />\n        <ListRowItem\n          title=\"Follow Us On Instagram\"\n          onPress={() => Linking.openURL(getStoreURL())}\n          rightIcon={\n            <View style={styles.settingOptionContainer}>\n              <Icon name={chevronIconName} />\n            </View>\n          }\n        />\n        <Divider />\n        <ListRowItem\n          title=\"Visit Our Website\"\n          onPress={() => Linking.openURL(getStoreURL())}\n          rightIcon={\n            <View style={styles.settingOptionContainer}>\n              <Icon name={chevronIconName} />\n            </View>\n          }\n        />\n        <Divider />\n        <ListRowItem\n          title=\"Contact Us\"\n          onPress={() => Linking.openURL(getStoreURL())}\n          rightIcon={\n            <View style={styles.settingOptionContainer}>\n              <Icon name={chevronIconName} />\n            </View>\n          }\n        />\n      </Section>\n    );\n  };\n\n  return (\n    <View style={styles.root}>\n      <ScrollView>\n        {_renderAppSettingsSection()}\n        {_renderMoreInformationSection()}\n      </ScrollView>\n      <ChangeAppearanceModal\n        isVisible={isAppearanceModalVisible}\n        hideModal={_hideAppearanceModal}\n      />\n      <ChangeLanguageModal\n        isVisible={isLanguageModalVisible}\n        hideModal={_hideLanguageModal}\n      />\n    </View>\n  );\n};\n\nexport default Settings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}