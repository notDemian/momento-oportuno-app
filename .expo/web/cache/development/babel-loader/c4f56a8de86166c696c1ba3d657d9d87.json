{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"leftIcon\", \"leftIconSize\", \"style\", \"containerStyle\", \"hasMargin\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useTheme } from '@react-navigation/native';\nimport Icon from \"../Icon\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TextField = function TextField(_ref) {\n  var leftIcon = _ref.leftIcon,\n    leftIconSize = _ref.leftIconSize,\n    style = _ref.style,\n    containerStyle = _ref.containerStyle,\n    hasMargin = _ref.hasMargin,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useTheme = useTheme(),\n    _useTheme$colors = _useTheme.colors,\n    text = _useTheme$colors.text,\n    background = _useTheme$colors.background;\n  var margin = 0;\n  if (hasMargin) {\n    margin = 5;\n  }\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: background,\n      marginTop: margin,\n      marginBottom: margin\n    }, containerStyle],\n    children: [leftIcon && _jsx(Icon, {\n      style: styles.leftIcon,\n      name: leftIcon,\n      size: leftIconSize\n    }), _jsx(TextInput, _objectSpread({\n      style: [{\n        color: text\n      }, styles.textField, style],\n      placeholderTextColor: text,\n      underlineColorAndroid: \"transparent\"\n    }, rest))]\n  });\n};\nTextField.defaultProps = {\n  leftIconSize: 14\n};\nexport default TextField;","map":{"version":3,"names":["React","useTheme","Icon","styles","TextField","leftIcon","leftIconSize","style","containerStyle","hasMargin","rest","colors","text","background","margin","container","backgroundColor","marginTop","marginBottom","color","textField","defaultProps"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/elements/TextField/TextField.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput,\n  TextInputProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {useTheme} from '@react-navigation/native';\nimport Icon from '@src/components/elements/Icon';\nimport styles from './styles';\n\ninterface OwnProps {\n  leftIcon?: string;\n  leftIconSize?: number;\n  containerStyle?: StyleProp<ViewStyle>;\n  hasMargin?: boolean;\n}\n\ntype TextFieldProps = OwnProps & TextInputProps;\n\nconst TextField: React.FC<TextFieldProps> = ({\n  leftIcon,\n  leftIconSize,\n  style,\n  containerStyle,\n  hasMargin,\n  ...rest\n}) => {\n  const {\n    colors: {text, background},\n  } = useTheme();\n  let margin = 0;\n  if (hasMargin) {\n    margin = 5;\n  }\n\n  return (\n    <View\n      style={[\n        styles.container,\n        {backgroundColor: background, marginTop: margin, marginBottom: margin},\n        containerStyle,\n      ]}>\n      {leftIcon && (\n        <Icon style={styles.leftIcon} name={leftIcon} size={leftIconSize} />\n      )}\n      <TextInput\n        style={[{color: text}, styles.textField, style]}\n        placeholderTextColor={text}\n        underlineColorAndroid=\"transparent\"\n        {...rest}\n      />\n    </View>\n  );\n};\n\nTextField.defaultProps = {\n  leftIconSize: 14,\n};\n\nexport default TextField;\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAQ/B,SAAQC,QAAQ,QAAO,0BAA0B;AACjD,OAAOC,IAAI;AACX,OAAOC,MAAM;AAAiB;AAAA;AAW9B,IAAMC,SAAmC,GAAG,SAAtCA,SAAmC,OAOnC;EAAA,IANJC,QAAQ,QAARA,QAAQ;IACRC,YAAY,QAAZA,YAAY;IACZC,KAAK,QAALA,KAAK;IACLC,cAAc,QAAdA,cAAc;IACdC,SAAS,QAATA,SAAS;IACNC,IAAI;EAEP,gBAEIT,QAAQ,EAAE;IAAA,6BADZU,MAAM;IAAGC,IAAI,oBAAJA,IAAI;IAAEC,UAAU,oBAAVA,UAAU;EAE3B,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIL,SAAS,EAAE;IACbK,MAAM,GAAG,CAAC;EACZ;EAEA,OACE,MAAC,IAAI;IACH,KAAK,EAAE,CACLX,MAAM,CAACY,SAAS,EAChB;MAACC,eAAe,EAAEH,UAAU;MAAEI,SAAS,EAAEH,MAAM;MAAEI,YAAY,EAAEJ;IAAM,CAAC,EACtEN,cAAc,CACd;IAAA,WACDH,QAAQ,IACP,KAAC,IAAI;MAAC,KAAK,EAAEF,MAAM,CAACE,QAAS;MAAC,IAAI,EAAEA,QAAS;MAAC,IAAI,EAAEC;IAAa,EAClE,EACD,KAAC,SAAS;MACR,KAAK,EAAE,CAAC;QAACa,KAAK,EAAEP;MAAI,CAAC,EAAET,MAAM,CAACiB,SAAS,EAAEb,KAAK,CAAE;MAChD,oBAAoB,EAAEK,IAAK;MAC3B,qBAAqB,EAAC;IAAa,GAC/BF,IAAI,EACR;EAAA,EACG;AAEX,CAAC;AAEDN,SAAS,CAACiB,YAAY,GAAG;EACvBf,YAAY,EAAE;AAChB,CAAC;AAED,eAAeF,SAAS"},"metadata":{},"sourceType":"module"}