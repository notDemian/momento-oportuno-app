{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"../Button\";\nimport Text from \"../Text\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Section = function Section(_ref) {\n  var children = _ref.children,\n    title = _ref.title,\n    actionButtonText = _ref.actionButtonText,\n    onButtonActionPressed = _ref.onButtonActionPressed;\n  var _onButtonActionPressed = function _onButtonActionPressed() {\n    if (onButtonActionPressed) {\n      onButtonActionPressed();\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.sectionTitleContainer,\n      children: [title && _jsx(Text, {\n        style: styles.sectionTitle,\n        children: title\n      }), actionButtonText && _jsx(Button, {\n        onPress: _onButtonActionPressed,\n        isTransparent: true,\n        children: _jsx(Text, {\n          style: styles.actionButtonText,\n          isPrimary: true,\n          children: actionButtonText\n        })\n      })]\n    }), children]\n  });\n};\nexport default Section;","map":{"version":3,"names":["React","Button","Text","styles","Section","children","title","actionButtonText","onButtonActionPressed","_onButtonActionPressed","sectionTitleContainer","sectionTitle"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/elements/Section/Section.tsx"],"sourcesContent":["import * as React from 'react';\nimport {View} from 'react-native';\nimport Button from '../Button';\nimport Text from '../Text';\nimport styles from './styles';\n\ninterface SectionProps {\n  children?: React.ReactNode;\n  title?: string;\n  actionButtonText?: string;\n  onButtonActionPressed?: () => void;\n}\n\nconst Section: React.FC<SectionProps> = ({\n  children,\n  title,\n  actionButtonText,\n  onButtonActionPressed,\n}) => {\n  const _onButtonActionPressed = () => {\n    if (onButtonActionPressed) {\n      onButtonActionPressed();\n    }\n  };\n\n  return (\n    <View>\n      <View style={styles.sectionTitleContainer}>\n        {title && <Text style={styles.sectionTitle}>{title}</Text>}\n        {actionButtonText && (\n          <Button onPress={_onButtonActionPressed} isTransparent>\n            <Text style={styles.actionButtonText} isPrimary>\n              {actionButtonText}\n            </Text>\n          </Button>\n        )}\n      </View>\n      {children}\n    </View>\n  );\n};\n\nexport default Section;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAE/B,OAAOC,MAAM;AACb,OAAOC,IAAI;AACX,OAAOC,MAAM;AAAiB;AAAA;AAS9B,IAAMC,OAA+B,GAAG,SAAlCA,OAA+B,OAK/B;EAAA,IAJJC,QAAQ,QAARA,QAAQ;IACRC,KAAK,QAALA,KAAK;IACLC,gBAAgB,QAAhBA,gBAAgB;IAChBC,qBAAqB,QAArBA,qBAAqB;EAErB,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,GAAS;IACnC,IAAID,qBAAqB,EAAE;MACzBA,qBAAqB,EAAE;IACzB;EACF,CAAC;EAED,OACE,MAAC,IAAI;IAAA,WACH,MAAC,IAAI;MAAC,KAAK,EAAEL,MAAM,CAACO,qBAAsB;MAAA,WACvCJ,KAAK,IAAI,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACQ,YAAa;QAAA,UAAEL;MAAK,EAAQ,EACzDC,gBAAgB,IACf,KAAC,MAAM;QAAC,OAAO,EAAEE,sBAAuB;QAAC,aAAa;QAAA,UACpD,KAAC,IAAI;UAAC,KAAK,EAAEN,MAAM,CAACI,gBAAiB;UAAC,SAAS;UAAA,UAC5CA;QAAgB;MACZ,EAEV;IAAA,EACI,EACNF,QAAQ;EAAA,EACJ;AAEX,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}