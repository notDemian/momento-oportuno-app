{"ast":null,"code":"import * as React from 'react';\nimport { Container, Icon, Divider, SearchBar, Button, Text } from \"../../elements\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport ListRowItem from \"../../elements/List/ListRowItem\";\nimport { profile } from \"../../../data/mock-profile\";\nimport styles from \"./styles\";\nimport { useNavigation } from '@react-navigation/native';\nimport AuthContext from \"../../../context/auth-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Account = function Account() {\n  var navigation = useNavigation();\n  var _React$useContext = React.useContext(AuthContext),\n    signOut = _React$useContext.signOut;\n  var chevronIconName = I18nManager.isRTL ? 'chevron-left' : 'chevron-right';\n  var alertButtons = [{\n    text: 'Cancel',\n    style: 'cancel'\n  }, {\n    text: 'OK',\n    onPress: function onPress() {\n      return signOut();\n    }\n  }];\n  var onLogoutButtonPressed = function onLogoutButtonPressed() {\n    Alert.alert('Confirm', 'Are you sure you want to logout?', alertButtons);\n  };\n  return _jsxs(ScrollView, {\n    children: [_jsx(SearchBar, {}), _jsx(Divider, {}), _jsx(Container, {\n      children: _jsx(ListRowItem, {\n        title: profile.name,\n        subTitle: \"Edit Profile\",\n        onPress: function onPress() {\n          return navigation.navigate('EditProfileScreen');\n        },\n        leftIcon: _jsx(Image, {\n          source: profile.avatar,\n          style: styles.profileAvatar\n        }),\n        rightIcon: _jsx(Icon, {\n          name: chevronIconName\n        })\n      })\n    }), _jsxs(Container, {\n      style: styles.accountMenuItemContainer,\n      children: [_jsx(Divider, {}), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Order History\",\n        onPress: function onPress() {\n          return navigation.navigate('OrderHistoryScreen');\n        },\n        rightIcon: _jsx(Icon, {\n          name: chevronIconName\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Delivery Address\",\n        onPress: function onPress() {\n          return navigation.navigate('SavedAddressesScreen');\n        },\n        rightIcon: _jsx(Icon, {\n          name: chevronIconName\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Settings\",\n        onPress: function onPress() {\n          return navigation.navigate('SettingsScreen');\n        },\n        rightIcon: _jsx(Icon, {\n          name: chevronIconName\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Support Center\",\n        onPress: function onPress() {\n          return navigation.navigate('SupportCenterScreen');\n        },\n        rightIcon: _jsx(Icon, {\n          name: chevronIconName\n        })\n      }), _jsx(Divider, {}), _jsx(ListRowItem, {\n        title: \"Share Feedback\",\n        rightIcon: _jsx(Icon, {\n          name: chevronIconName\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(Button, {\n        isFullWidth: true,\n        isTransparent: true,\n        onPress: onLogoutButtonPressed,\n        children: _jsx(Text, {\n          isBold: true,\n          isPrimary: true,\n          children: \"Logout\"\n        })\n      })\n    })]\n  });\n};\nexport default Account;","map":{"version":3,"names":["React","Container","Icon","Divider","SearchBar","Button","Text","ListRowItem","profile","styles","useNavigation","AuthContext","Account","navigation","useContext","signOut","chevronIconName","I18nManager","isRTL","alertButtons","text","style","onPress","onLogoutButtonPressed","Alert","alert","name","navigate","avatar","profileAvatar","accountMenuItemContainer","buttonContainer"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/screens/Account/Account.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Container,\n  Icon,\n  Divider,\n  SearchBar,\n  Button,\n  Text,\n} from '@src/components/elements';\nimport {\n  ScrollView,\n  Image,\n  View,\n  Alert,\n  AlertButton,\n  I18nManager,\n} from 'react-native';\nimport ListRowItem from '@src/components/elements/List/ListRowItem';\nimport {profile} from '@src/data/mock-profile';\nimport styles from './styles';\nimport {useNavigation} from '@react-navigation/native';\nimport AuthContext from '@src/context/auth-context';\n\ntype AccountProps = {};\n\nconst Account: React.FC<AccountProps> = () => {\n  const navigation = useNavigation();\n  const {signOut} = React.useContext(AuthContext);\n  const chevronIconName = I18nManager.isRTL ? 'chevron-left' : 'chevron-right';\n\n  const alertButtons: AlertButton[] = [\n    {\n      text: 'Cancel',\n      style: 'cancel',\n    },\n    {text: 'OK', onPress: () => signOut()},\n  ];\n\n  const onLogoutButtonPressed = () => {\n    Alert.alert('Confirm', 'Are you sure you want to logout?', alertButtons);\n  };\n\n  return (\n    <ScrollView>\n      <SearchBar />\n      <Divider />\n      <Container>\n        <ListRowItem\n          title={profile.name}\n          subTitle=\"Edit Profile\"\n          onPress={() => navigation.navigate('EditProfileScreen')}\n          leftIcon={\n            <Image source={profile.avatar} style={styles.profileAvatar} />\n          }\n          rightIcon={<Icon name={chevronIconName} />}\n        />\n      </Container>\n      <Container style={styles.accountMenuItemContainer}>\n        <Divider />\n        <Divider />\n        <ListRowItem\n          title=\"Order History\"\n          onPress={() => navigation.navigate('OrderHistoryScreen')}\n          rightIcon={<Icon name={chevronIconName} />}\n        />\n        <Divider />\n        <ListRowItem\n          title=\"Delivery Address\"\n          onPress={() => navigation.navigate('SavedAddressesScreen')}\n          rightIcon={<Icon name={chevronIconName} />}\n        />\n        <Divider />\n        <ListRowItem\n          title=\"Settings\"\n          onPress={() => navigation.navigate('SettingsScreen')}\n          rightIcon={<Icon name={chevronIconName} />}\n        />\n        <Divider />\n\n        <ListRowItem\n          title=\"Support Center\"\n          onPress={() => navigation.navigate('SupportCenterScreen')}\n          rightIcon={<Icon name={chevronIconName} />}\n        />\n        <Divider />\n        <ListRowItem\n          title=\"Share Feedback\"\n          rightIcon={<Icon name={chevronIconName} />}\n        />\n      </Container>\n      <View style={styles.buttonContainer}>\n        <Button isFullWidth isTransparent onPress={onLogoutButtonPressed}>\n          <Text isBold isPrimary>\n            Logout\n          </Text>\n        </Button>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default Account;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}