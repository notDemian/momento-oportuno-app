{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, TextField, Button } from \"../../elements\";\nimport useThemeColors from \"../../../custom-hooks/useThemeColors\";\nimport styles from \"./styles\";\nimport AuthContext from \"../../../context/auth-context\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var navigation = useNavigation();\n  var _React$useContext = React.useContext(AuthContext),\n    signIn = _React$useContext.signIn;\n  var _useThemeColors = useThemeColors(),\n    card = _useThemeColors.card;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    password = _React$useState2[0],\n    setPassword = _React$useState2[1];\n  var _onPasswordFieldChange = function _onPasswordFieldChange(value) {\n    setPassword(value);\n  };\n  var _onNextButtonPressed = function _onNextButtonPressed() {\n    if (!password) {\n      Alert.alert('Error', 'Please enter your password!');\n      return;\n    }\n    signIn();\n  };\n  var _onForgotPasswordButtonPressed = function _onForgotPasswordButtonPressed() {\n    navigation.navigate('ForgotPasswordScreen');\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.root,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.contentContainer,\n      children: [_jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Image, {\n          source: require(\"../../../assets/profile/avatar.png\"),\n          style: styles.avatar\n        }), _jsx(Text, {\n          isBold: true,\n          isHeadingTitle: true,\n          children: \"Welcome! Vu Nguyen\"\n        }), _jsx(Text, {\n          isSecondary: true,\n          hasMargin: true,\n          children: \"Please enter your password to use our services\"\n        }), _jsx(TextField, {\n          autoFocus: true,\n          style: [{\n            backgroundColor: card\n          }, styles.passwordTextField],\n          value: password,\n          onChangeText: _onPasswordFieldChange,\n          hasMargin: true,\n          placeholder: \"Enter your password\",\n          secureTextEntry: true\n        })]\n      }), _jsx(Button, {\n        isFullWidth: true,\n        onPress: _onNextButtonPressed,\n        children: _jsx(Text, {\n          isBold: true,\n          children: \"Next\"\n        })\n      }), _jsx(Button, {\n        isFullWidth: true,\n        isTransparent: true,\n        onPress: _onForgotPasswordButtonPressed,\n        style: styles.forgotPasswordButton,\n        children: _jsx(Text, {\n          children: \"Forgot Password\"\n        })\n      })]\n    })\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","Text","TextField","Button","useThemeColors","styles","AuthContext","useNavigation","Login","navigation","useContext","signIn","card","useState","password","setPassword","_onPasswordFieldChange","value","_onNextButtonPressed","Alert","alert","_onForgotPasswordButtonPressed","navigate","root","contentContainer","formContainer","require","avatar","backgroundColor","passwordTextField","forgotPasswordButton"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/screens/Login/Login.tsx"],"sourcesContent":["import * as React from 'react';\nimport {SafeAreaView, View, ScrollView, Alert, Image} from 'react-native';\nimport {Text, TextField, Button} from '@src/components/elements';\nimport useThemeColors from '@src/custom-hooks/useThemeColors';\nimport styles from './styles';\nimport AuthContext from '@src/context/auth-context';\nimport {useNavigation} from '@react-navigation/native';\n\ntype LoginProps = {};\n\nconst Login: React.FC<LoginProps> = () => {\n  const navigation = useNavigation();\n  const {signIn} = React.useContext(AuthContext);\n  const {card} = useThemeColors();\n  const [password, setPassword] = React.useState('');\n\n  const _onPasswordFieldChange = (value: string) => {\n    setPassword(value);\n  };\n\n  const _onNextButtonPressed = () => {\n    if (!password) {\n      Alert.alert('Error', 'Please enter your password!');\n      return;\n    }\n    signIn();\n  };\n  const _onForgotPasswordButtonPressed = () => {\n    navigation.navigate('ForgotPasswordScreen');\n  };\n\n  return (\n    <SafeAreaView style={styles.root}>\n      <ScrollView contentContainerStyle={styles.contentContainer}>\n        <View style={styles.formContainer}>\n          <Image\n            source={require('../../../assets/profile/avatar.png')}\n            style={styles.avatar}\n          />\n          <Text isBold isHeadingTitle>\n            Welcome! Vu Nguyen\n          </Text>\n          <Text isSecondary hasMargin>\n            Please enter your password to use our services\n          </Text>\n          <TextField\n            autoFocus\n            style={[{backgroundColor: card}, styles.passwordTextField]}\n            value={password}\n            onChangeText={_onPasswordFieldChange}\n            hasMargin\n            placeholder=\"Enter your password\"\n            secureTextEntry={true}\n          />\n        </View>\n        <Button isFullWidth onPress={_onNextButtonPressed}>\n          <Text isBold>Next</Text>\n        </Button>\n        <Button\n          isFullWidth\n          isTransparent\n          onPress={_onForgotPasswordButtonPressed}\n          style={styles.forgotPasswordButton}>\n          <Text>Forgot Password</Text>\n        </Button>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default Login;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAE/B,SAAQC,IAAI,EAAEC,SAAS,EAAEC,MAAM;AAC/B,OAAOC,cAAc;AACrB,OAAOC,MAAM;AACb,OAAOC,WAAW;AAClB,SAAQC,aAAa,QAAO,0BAA0B;AAAC;AAAA;AAIvD,IAAMC,KAA2B,GAAG,SAA9BA,KAA2B,GAAS;EACxC,IAAMC,UAAU,GAAGF,aAAa,EAAE;EAClC,wBAAiBP,KAAK,CAACU,UAAU,CAACJ,WAAW,CAAC;IAAvCK,MAAM,qBAANA,MAAM;EACb,sBAAeP,cAAc,EAAE;IAAxBQ,IAAI,mBAAJA,IAAI;EACX,sBAAgCZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CC,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,KAAa,EAAK;IAChDF,WAAW,CAACE,KAAK,CAAC;EACpB,CAAC;EAED,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,GAAS;IACjC,IAAI,CAACJ,QAAQ,EAAE;MACbK,KAAK,CAACC,KAAK,CAAC,OAAO,EAAE,6BAA6B,CAAC;MACnD;IACF;IACAT,MAAM,EAAE;EACV,CAAC;EACD,IAAMU,8BAA8B,GAAG,SAAjCA,8BAA8B,GAAS;IAC3CZ,UAAU,CAACa,QAAQ,CAAC,sBAAsB,CAAC;EAC7C,CAAC;EAED,OACE,KAAC,YAAY;IAAC,KAAK,EAAEjB,MAAM,CAACkB,IAAK;IAAA,UAC/B,MAAC,UAAU;MAAC,qBAAqB,EAAElB,MAAM,CAACmB,gBAAiB;MAAA,WACzD,MAAC,IAAI;QAAC,KAAK,EAAEnB,MAAM,CAACoB,aAAc;QAAA,WAChC,KAAC,KAAK;UACJ,MAAM,EAAEC,OAAO,sCAAuC;UACtD,KAAK,EAAErB,MAAM,CAACsB;QAAO,EACrB,EACF,KAAC,IAAI;UAAC,MAAM;UAAC,cAAc;UAAA;QAAA,EAEpB,EACP,KAAC,IAAI;UAAC,WAAW;UAAC,SAAS;UAAA;QAAA,EAEpB,EACP,KAAC,SAAS;UACR,SAAS;UACT,KAAK,EAAE,CAAC;YAACC,eAAe,EAAEhB;UAAI,CAAC,EAAEP,MAAM,CAACwB,iBAAiB,CAAE;UAC3D,KAAK,EAAEf,QAAS;UAChB,YAAY,EAAEE,sBAAuB;UACrC,SAAS;UACT,WAAW,EAAC,qBAAqB;UACjC,eAAe,EAAE;QAAK,EACtB;MAAA,EACG,EACP,KAAC,MAAM;QAAC,WAAW;QAAC,OAAO,EAAEE,oBAAqB;QAAA,UAChD,KAAC,IAAI;UAAC,MAAM;UAAA;QAAA;MAAY,EACjB,EACT,KAAC,MAAM;QACL,WAAW;QACX,aAAa;QACb,OAAO,EAAEG,8BAA+B;QACxC,KAAK,EAAEhB,MAAM,CAACyB,oBAAqB;QAAA,UACnC,KAAC,IAAI;UAAA;QAAA;MAAuB,EACrB;IAAA;EACE,EACA;AAEnB,CAAC;AAED,eAAetB,KAAK"},"metadata":{},"sourceType":"module"}