{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport MapView, { PROVIDER_GOOGLE, Marker, Polyline } from 'react-native-maps';\nimport styles from \"./styles\";\nimport { darkModeStyle } from \"../../../utils/googleMapStyle\";\nimport { useTheme } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DeliveryMapView = function DeliveryMapView() {\n  var _useTheme = useTheme(),\n    primary = _useTheme.colors.primary;\n  var _React$useState = React.useState({\n      longitude: -122.406417,\n      latitude: 37.785834,\n      longitudeDelta: 0.0022,\n      latitudeDelta: 0.0031\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    currentLocation = _React$useState2[0],\n    setCurrentLocation = _React$useState2[1];\n  var _onRegionChangeComplete = function _onRegionChangeComplete(region) {\n    setCurrentLocation(region);\n  };\n  var _onMapViewPressed = function _onMapViewPressed(event) {\n    var coordinate = event.nativeEvent.coordinate;\n    console.log('_onMapViewPressed -> coordinate', coordinate);\n  };\n  return _jsx(View, {\n    style: styles.mapViewContainer,\n    children: _jsxs(MapView, {\n      loadingEnabled: true,\n      cacheEnabled: true,\n      loadingIndicatorColor: \"black\",\n      loadingBackgroundColor: \"black\",\n      provider: PROVIDER_GOOGLE,\n      style: styles.mapView,\n      customMapStyle: darkModeStyle,\n      onRegionChangeComplete: _onRegionChangeComplete,\n      onPress: _onMapViewPressed,\n      region: currentLocation,\n      children: [_jsx(Marker, {\n        coordinate: {\n          longitude: -122.406417,\n          latitude: 37.785834\n        },\n        children: _jsx(View, {\n          style: styles.currentLocationMarkerContainer,\n          children: _jsx(Image, {\n            source: require(\"../../../assets/drivers/location.png\"),\n            style: styles.marker\n          })\n        })\n      }), _jsx(Marker, {\n        coordinate: _objectSpread(_objectSpread({}, currentLocation), {}, {\n          longitude: -122.40755639970303,\n          latitude: 37.78638161404493\n        }),\n        children: _jsx(View, {\n          style: styles.driverMarkerContainer,\n          children: _jsx(Image, {\n            source: require(\"../../../assets/drivers/driver-marker.png\"),\n            style: styles.marker\n          })\n        })\n      }), _jsx(Polyline, {\n        lineDashPattern: [3, 3, 3, 3],\n        coordinates: [{\n          latitude: 37.78651041289761,\n          longitude: -122.40747157484294\n        }, {\n          latitude: 37.78662062947493,\n          longitude: -122.406404055655\n        }, {\n          latitude: 37.78569323533935,\n          longitude: -122.40623038262129\n        }, {\n          latitude: 37.785834,\n          longitude: -122.406417\n        }],\n        strokeColor: primary,\n        strokeWidth: 2\n      })]\n    })\n  });\n};\nexport default DeliveryMapView;","map":{"version":3,"names":["React","MapView","PROVIDER_GOOGLE","Marker","Polyline","styles","darkModeStyle","useTheme","DeliveryMapView","primary","colors","useState","longitude","latitude","longitudeDelta","latitudeDelta","currentLocation","setCurrentLocation","_onRegionChangeComplete","region","_onMapViewPressed","event","coordinate","nativeEvent","console","log","mapViewContainer","mapView","currentLocationMarkerContainer","require","marker","driverMarkerContainer"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/screens/TrackOrder/DeliveryMapView.tsx"],"sourcesContent":["import * as React from 'react';\nimport {View, Image} from 'react-native';\nimport MapView, {\n  PROVIDER_GOOGLE,\n  Marker,\n  MapEvent,\n  Region,\n  Polyline,\n} from 'react-native-maps';\nimport styles from './styles';\nimport {darkModeStyle} from '@src/utils/googleMapStyle';\nimport {useTheme} from '@react-navigation/native';\n\ntype DeliveryMapViewProps = {};\n\nconst DeliveryMapView: React.FC<DeliveryMapViewProps> = () => {\n  const {\n    colors: {primary},\n  } = useTheme();\n  const [currentLocation, setCurrentLocation] = React.useState<Region>({\n    longitude: -122.406417,\n    latitude: 37.785834,\n    longitudeDelta: 0.0022,\n    latitudeDelta: 0.0031,\n  });\n\n  const _onRegionChangeComplete = (region: Region) => {\n    setCurrentLocation(region);\n  };\n\n  const _onMapViewPressed = (event: MapEvent) => {\n    const {\n      nativeEvent: {coordinate},\n    } = event;\n\n    console.log('_onMapViewPressed -> coordinate', coordinate);\n  };\n\n  return (\n    <View style={styles.mapViewContainer}>\n      <MapView\n        loadingEnabled\n        cacheEnabled\n        loadingIndicatorColor=\"black\"\n        loadingBackgroundColor=\"black\"\n        provider={PROVIDER_GOOGLE}\n        style={styles.mapView}\n        customMapStyle={darkModeStyle}\n        onRegionChangeComplete={_onRegionChangeComplete}\n        onPress={_onMapViewPressed}\n        region={currentLocation}>\n        <Marker\n          coordinate={{\n            longitude: -122.406417,\n            latitude: 37.785834,\n          }}>\n          <View style={styles.currentLocationMarkerContainer}>\n            <Image\n              source={require('../../../assets/drivers/location.png')}\n              style={styles.marker}\n            />\n          </View>\n        </Marker>\n        <Marker\n          coordinate={{\n            ...currentLocation,\n            longitude: -122.40755639970303,\n            latitude: 37.78638161404493,\n          }}>\n          <View style={styles.driverMarkerContainer}>\n            <Image\n              source={require('../../../assets/drivers/driver-marker.png')}\n              style={styles.marker}\n            />\n          </View>\n        </Marker>\n        <Polyline\n          lineDashPattern={[3, 3, 3, 3]}\n          coordinates={[\n            {latitude: 37.78651041289761, longitude: -122.40747157484294},\n            {latitude: 37.78662062947493, longitude: -122.406404055655},\n            {latitude: 37.78569323533935, longitude: -122.40623038262129},\n            {\n              latitude: 37.785834,\n              longitude: -122.406417,\n            },\n          ]}\n          strokeColor={primary}\n          strokeWidth={2}\n        />\n      </MapView>\n    </View>\n  );\n};\n\nexport default DeliveryMapView;\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE/B,OAAOC,OAAO,IACZC,eAAe,EACfC,MAAM,EAGNC,QAAQ,QACH,mBAAmB;AAC1B,OAAOC,MAAM;AACb,SAAQC,aAAa;AACrB,SAAQC,QAAQ,QAAO,0BAA0B;AAAC;AAAA;AAIlD,IAAMC,eAA+C,GAAG,SAAlDA,eAA+C,GAAS;EAC5D,gBAEID,QAAQ,EAAE;IADHE,OAAO,aAAhBC,MAAM,CAAGD,OAAO;EAElB,sBAA8CT,KAAK,CAACW,QAAQ,CAAS;MACnEC,SAAS,EAAE,CAAC,UAAU;MACtBC,QAAQ,EAAE,SAAS;MACnBC,cAAc,EAAE,MAAM;MACtBC,aAAa,EAAE;IACjB,CAAC,CAAC;IAAA;IALKC,eAAe;IAAEC,kBAAkB;EAO1C,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAIC,MAAc,EAAK;IAClDF,kBAAkB,CAACE,MAAM,CAAC;EAC5B,CAAC;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,KAAe,EAAK;IAC7C,IACgBC,UAAU,GACtBD,KAAK,CADPE,WAAW,CAAGD,UAAU;IAG1BE,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEH,UAAU,CAAC;EAC5D,CAAC;EAED,OACE,KAAC,IAAI;IAAC,KAAK,EAAEjB,MAAM,CAACqB,gBAAiB;IAAA,UACnC,MAAC,OAAO;MACN,cAAc;MACd,YAAY;MACZ,qBAAqB,EAAC,OAAO;MAC7B,sBAAsB,EAAC,OAAO;MAC9B,QAAQ,EAAExB,eAAgB;MAC1B,KAAK,EAAEG,MAAM,CAACsB,OAAQ;MACtB,cAAc,EAAErB,aAAc;MAC9B,sBAAsB,EAAEY,uBAAwB;MAChD,OAAO,EAAEE,iBAAkB;MAC3B,MAAM,EAAEJ,eAAgB;MAAA,WACxB,KAAC,MAAM;QACL,UAAU,EAAE;UACVJ,SAAS,EAAE,CAAC,UAAU;UACtBC,QAAQ,EAAE;QACZ,CAAE;QAAA,UACF,KAAC,IAAI;UAAC,KAAK,EAAER,MAAM,CAACuB,8BAA+B;UAAA,UACjD,KAAC,KAAK;YACJ,MAAM,EAAEC,OAAO,wCAAyC;YACxD,KAAK,EAAExB,MAAM,CAACyB;UAAO;QACrB;MACG,EACA,EACT,KAAC,MAAM;QACL,UAAU,kCACLd,eAAe;UAClBJ,SAAS,EAAE,CAAC,kBAAkB;UAC9BC,QAAQ,EAAE;QAAiB,EAC3B;QAAA,UACF,KAAC,IAAI;UAAC,KAAK,EAAER,MAAM,CAAC0B,qBAAsB;UAAA,UACxC,KAAC,KAAK;YACJ,MAAM,EAAEF,OAAO,6CAA8C;YAC7D,KAAK,EAAExB,MAAM,CAACyB;UAAO;QACrB;MACG,EACA,EACT,KAAC,QAAQ;QACP,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAC9B,WAAW,EAAE,CACX;UAACjB,QAAQ,EAAE,iBAAiB;UAAED,SAAS,EAAE,CAAC;QAAkB,CAAC,EAC7D;UAACC,QAAQ,EAAE,iBAAiB;UAAED,SAAS,EAAE,CAAC;QAAgB,CAAC,EAC3D;UAACC,QAAQ,EAAE,iBAAiB;UAAED,SAAS,EAAE,CAAC;QAAkB,CAAC,EAC7D;UACEC,QAAQ,EAAE,SAAS;UACnBD,SAAS,EAAE,CAAC;QACd,CAAC,CACD;QACF,WAAW,EAAEH,OAAQ;QACrB,WAAW,EAAE;MAAE,EACf;IAAA;EACM,EACL;AAEX,CAAC;AAED,eAAeD,eAAe"},"metadata":{},"sourceType":"module"}