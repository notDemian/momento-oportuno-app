{"ast":null,"code":"import * as React from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Authentication from \"../../../screens/Authentication\";\nimport AuthWithPhoneNumber from \"../../../screens/AuthWithPhoneNumber\";\nimport AuthVerificationCode from \"../../../screens/AuthVerificationCode\";\nimport Login from \"../../../screens/Login\";\nimport ForgotPassword from \"../../../screens/ForgotPassword\";\nimport useThemeColors from \"../../../../custom-hooks/useThemeColors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar AuthenticationStack = function AuthenticationStack() {\n  var insets = useSafeAreaInsets();\n  var _useThemeColors = useThemeColors(),\n    background = _useThemeColors.background;\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"AuthenticationScreen\",\n    screenOptions: {\n      headerShown: true,\n      title: '',\n      headerStatusBarHeight: insets.top,\n      headerStyle: {\n        backgroundColor: background\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"AuthenticationScreen\",\n      component: Authentication,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AuthWithPhoneNumberScreen\",\n      component: AuthWithPhoneNumber\n    }), _jsx(Stack.Screen, {\n      name: \"AuthVerificationCodeScreen\",\n      component: AuthVerificationCode\n    }), _jsx(Stack.Screen, {\n      name: \"LoginScreen\",\n      component: Login\n    }), _jsx(Stack.Screen, {\n      name: \"ForgotPasswordScreen\",\n      component: ForgotPassword\n    })]\n  });\n};\nexport default AuthenticationStack;","map":{"version":3,"names":["React","useSafeAreaInsets","createStackNavigator","Authentication","AuthWithPhoneNumber","AuthVerificationCode","Login","ForgotPassword","useThemeColors","Stack","AuthenticationStack","insets","background","headerShown","title","headerStatusBarHeight","top","headerStyle","backgroundColor"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/routes/Stacks/AuthenticationStack/AuthenticationStack.tsx"],"sourcesContent":["import * as React from 'react';\nimport {useSafeAreaInsets} from 'react-native-safe-area-context';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport Authentication from '@src/components/screens/Authentication';\nimport AuthWithPhoneNumber from '@src/components/screens/AuthWithPhoneNumber';\nimport AuthVerificationCode from '@src/components/screens/AuthVerificationCode';\nimport Login from '@src/components/screens/Login';\nimport ForgotPassword from '@src/components/screens/ForgotPassword';\nimport useThemeColors from '@src/custom-hooks/useThemeColors';\n\ntype AuthenticationStackProps = {};\nconst Stack = createStackNavigator();\n\nconst AuthenticationStack: React.FC<AuthenticationStackProps> = () => {\n  const insets = useSafeAreaInsets();\n  const {background} = useThemeColors();\n  return (\n    <Stack.Navigator\n      initialRouteName=\"AuthenticationScreen\"\n      screenOptions={{\n        headerShown: true,\n        title: '',\n        headerStatusBarHeight: insets.top,\n        headerStyle: {backgroundColor: background},\n      }}>\n      <Stack.Screen\n        name=\"AuthenticationScreen\"\n        component={Authentication}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"AuthWithPhoneNumberScreen\"\n        component={AuthWithPhoneNumber}\n      />\n      <Stack.Screen\n        name=\"AuthVerificationCodeScreen\"\n        component={AuthVerificationCode}\n      />\n      <Stack.Screen name=\"LoginScreen\" component={Login} />\n      <Stack.Screen name=\"ForgotPasswordScreen\" component={ForgotPassword} />\n    </Stack.Navigator>\n  );\n};\n\nexport default AuthenticationStack;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,iBAAiB,QAAO,gCAAgC;AAChE,SAAQC,oBAAoB,QAAO,yBAAyB;AAC5D,OAAOC,cAAc;AACrB,OAAOC,mBAAmB;AAC1B,OAAOC,oBAAoB;AAC3B,OAAOC,KAAK;AACZ,OAAOC,cAAc;AACrB,OAAOC,cAAc;AAAyC;AAAA;AAG9D,IAAMC,KAAK,GAAGP,oBAAoB,EAAE;AAEpC,IAAMQ,mBAAuD,GAAG,SAA1DA,mBAAuD,GAAS;EACpE,IAAMC,MAAM,GAAGV,iBAAiB,EAAE;EAClC,sBAAqBO,cAAc,EAAE;IAA9BI,UAAU,mBAAVA,UAAU;EACjB,OACE,MAAC,KAAK,CAAC,SAAS;IACd,gBAAgB,EAAC,sBAAsB;IACvC,aAAa,EAAE;MACbC,WAAW,EAAE,IAAI;MACjBC,KAAK,EAAE,EAAE;MACTC,qBAAqB,EAAEJ,MAAM,CAACK,GAAG;MACjCC,WAAW,EAAE;QAACC,eAAe,EAAEN;MAAU;IAC3C,CAAE;IAAA,WACF,KAAC,KAAK,CAAC,MAAM;MACX,IAAI,EAAC,sBAAsB;MAC3B,SAAS,EAAET,cAAe;MAC1B,OAAO,EAAE;QACPU,WAAW,EAAE;MACf;IAAE,EACF,EACF,KAAC,KAAK,CAAC,MAAM;MACX,IAAI,EAAC,2BAA2B;MAChC,SAAS,EAAET;IAAoB,EAC/B,EACF,KAAC,KAAK,CAAC,MAAM;MACX,IAAI,EAAC,4BAA4B;MACjC,SAAS,EAAEC;IAAqB,EAChC,EACF,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAC,aAAa;MAAC,SAAS,EAAEC;IAAM,EAAG,EACrD,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAC,sBAAsB;MAAC,SAAS,EAAEC;IAAe,EAAG;EAAA,EACvD;AAEtB,CAAC;AAED,eAAeG,mBAAmB"},"metadata":{},"sourceType":"module"}