{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"timing\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useAnimatedValue from \"./useAnimatedValue\";\nvar DEAD_ZONE = 12;\nvar DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true\n};\nexport default function PanResponderAdapter(_ref) {\n  var layout = _ref.layout,\n    _ref$keyboardDismissM = _ref.keyboardDismissMode,\n    keyboardDismissMode = _ref$keyboardDismissM === void 0 ? 'auto' : _ref$keyboardDismissM,\n    _ref$swipeEnabled = _ref.swipeEnabled,\n    swipeEnabled = _ref$swipeEnabled === void 0 ? true : _ref$swipeEnabled,\n    navigationState = _ref.navigationState,\n    onIndexChange = _ref.onIndexChange,\n    onSwipeStart = _ref.onSwipeStart,\n    onSwipeEnd = _ref.onSwipeEnd,\n    children = _ref.children,\n    style = _ref.style;\n  var routes = navigationState.routes,\n    index = navigationState.index;\n  var panX = useAnimatedValue(0);\n  var listenersRef = React.useRef([]);\n  var navigationStateRef = React.useRef(navigationState);\n  var layoutRef = React.useRef(layout);\n  var onIndexChangeRef = React.useRef(onIndexChange);\n  var currentIndexRef = React.useRef(index);\n  var pendingIndexRef = React.useRef();\n  var swipeVelocityThreshold = 0.15;\n  var swipeDistanceThreshold = layout.width / 1.75;\n  var jumpToIndex = React.useCallback(function (index) {\n    var offset = -index * layoutRef.current.width;\n    var timing = DefaultTransitionSpec.timing,\n      transitionConfig = _objectWithoutProperties(DefaultTransitionSpec, _excluded);\n    Animated.parallel([timing(panX, _objectSpread(_objectSpread({}, transitionConfig), {}, {\n      toValue: offset,\n      useNativeDriver: false\n    }))]).start(function (_ref2) {\n      var finished = _ref2.finished;\n      if (finished) {\n        onIndexChangeRef.current(index);\n        pendingIndexRef.current = undefined;\n      }\n    });\n    pendingIndexRef.current = index;\n  }, [panX]);\n  React.useEffect(function () {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n  React.useEffect(function () {\n    var offset = -navigationStateRef.current.index * layout.width;\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n  React.useEffect(function () {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n  var isMovingHorizontally = function isMovingHorizontally(_, gestureState) {\n    return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2);\n  };\n  var canMoveScreen = function canMoveScreen(event, gestureState) {\n    if (swipeEnabled === false) {\n      return false;\n    }\n    var diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n    return isMovingHorizontally(event, gestureState) && (diffX >= DEAD_ZONE && currentIndexRef.current > 0 || diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1);\n  };\n  var startGesture = function startGesture() {\n    onSwipeStart === null || onSwipeStart === void 0 ? void 0 : onSwipeStart();\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n    panX.stopAnimation();\n\n    panX.setOffset(panX._value);\n  };\n  var respondToGesture = function respondToGesture(_, gestureState) {\n    var diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n    if (\n    diffX > 0 && index <= 0 || diffX < 0 && index >= routes.length - 1) {\n      return;\n    }\n    if (layout.width) {\n      var position = (panX._offset + diffX) / -layout.width;\n      var next = position > index ? Math.ceil(position) : Math.floor(position);\n      if (next !== index) {\n        listenersRef.current.forEach(function (listener) {\n          return listener(next);\n        });\n      }\n    }\n    panX.setValue(diffX);\n  };\n  var finishGesture = function finishGesture(_, gestureState) {\n    panX.flattenOffset();\n    onSwipeEnd === null || onSwipeEnd === void 0 ? void 0 : onSwipeEnd();\n    var currentIndex = typeof pendingIndexRef.current === 'number' ? pendingIndexRef.current : currentIndexRef.current;\n    var nextIndex = currentIndex;\n    if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy) && (Math.abs(gestureState.dx) > swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold)) {\n      nextIndex = Math.round(Math.min(Math.max(0, I18nManager.isRTL ? currentIndex + gestureState.dx / Math.abs(gestureState.dx) : currentIndex - gestureState.dx / Math.abs(gestureState.dx)), routes.length - 1));\n      currentIndexRef.current = nextIndex;\n    }\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n    jumpToIndex(nextIndex);\n  };\n\n  var addEnterListener = React.useCallback(function (listener) {\n    listenersRef.current.push(listener);\n    return function () {\n      var index = listenersRef.current.indexOf(listener);\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n  var jumpTo = React.useCallback(function (key) {\n    var index = navigationStateRef.current.routes.findIndex(function (route) {\n      return route.key === key;\n    });\n    jumpToIndex(index);\n  }, [jumpToIndex]);\n  var panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n      return true;\n    }\n  });\n  var maxTranslate = layout.width * (routes.length - 1);\n  var translateX = Animated.multiply(panX.interpolate({\n    inputRange: [-maxTranslate, 0],\n    outputRange: [-maxTranslate, 0],\n    extrapolate: 'clamp'\n  }), I18nManager.isRTL ? -1 : 1);\n  return children({\n    position: layout.width ? Animated.divide(panX, -layout.width) : new Animated.Value(index),\n    addEnterListener: addEnterListener,\n    jumpTo: jumpTo,\n    render: function render(children) {\n      return React.createElement(Animated.View, _extends({\n        style: [styles.sheet, layout.width ? {\n          width: routes.length * layout.width,\n          transform: [{\n            translateX: translateX\n          }]\n        } : null, style]\n      }, panResponder.panHandlers), React.Children.map(children, function (child, i) {\n        var route = routes[i];\n        var focused = i === index;\n        return React.createElement(View, {\n          key: route.key,\n          style: layout.width ? {\n            width: layout.width\n          } : focused ? StyleSheet.absoluteFill : null\n        }, focused || layout.width ? child : null);\n      }));\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch'\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,OAAOC,gBAAP;AA6BA,IAAMC,SAAS,GAAG,EAAlB;AAEA,IAAMC,qBAAqB,GAAG;EAC5BC,MAAM,EAAEC,QAAQ,CAACC,MADW;EAE5BC,SAAS,EAAE,IAFiB;EAG5BC,OAAO,EAAE,GAHmB;EAI5BC,IAAI,EAAE,CAJsB;EAK5BC,iBAAiB,EAAE;AALS,CAA9B;AAQA,eAAe,SAASC,mBAAT,OAUF;EAAA,IATXC,MAD2D,QAC3DA,MAD2D;IAAA,6BAE3DC,mBAAmB;IAAnBA,mBAAmB,sCAAG,MAFqC;IAAA,yBAG3DC,YAAY;IAAZA,YAAY,kCAAG,IAH4C;IAI3DC,eAJ2D,QAI3DA,eAJ2D;IAK3DC,aAL2D,QAK3DA,aAL2D;IAM3DC,YAN2D,QAM3DA,YAN2D;IAO3DC,UAP2D,QAO3DA,UAP2D;IAQ3DC,QAR2D,QAQ3DA,QAR2D;IAS3DC;EAEA,IAAQC,MAAF,GAAoBN,eAA1B,CAAQM,MAAF;IAAUC,QAAUP,eAA1B,CAAgBO;EAEhB,IAAMC,IAAI,GAAGtB,gBAAgB,CAAC,CAAD,CAA7B;EAEA,IAAMuB,YAAY,GAAGxB,KAAK,CAACyB,MAAN,CAAyB,EAAzB,CAArB;EAEA,IAAMC,kBAAkB,GAAG1B,KAAK,CAACyB,MAAN,CAAaV,eAAb,CAA3B;EACA,IAAMY,SAAS,GAAG3B,KAAK,CAACyB,MAAN,CAAab,MAAb,CAAlB;EACA,IAAMgB,gBAAgB,GAAG5B,KAAK,CAACyB,MAAN,CAAaT,aAAb,CAAzB;EAEA,IAAMa,eAAe,GAAG7B,KAAK,CAACyB,MAAN,CAAaH,KAAb,CAAxB;EACA,IAAMQ,eAAe,GAAG9B,KAAK,CAACyB,MAAN,EAAxB;EAEA,IAAMM,sBAAsB,GAAG,IAA/B;EACA,IAAMC,sBAAsB,GAAGpB,MAAM,CAACqB,KAAP,GAAe,IAA9C;EAEA,IAAMC,WAAW,GAAGlC,KAAK,CAACmC,WAAN,CACjBb,eAAD,EAAmB;IACjB,IAAMc,MAAM,GAAG,CAACd,KAAD,GAASK,SAAS,CAACU,OAAV,CAAkBJ,KAA1C;IAEA,IAAQ7B,MAAF,GAAkCD,qBAAxC,CAAQC,MAAF;MAAakC,4CAAqBnC,qBAAxC;IAEAE,QAAQ,CAACkC,QAAT,CAAkB,CAChBnC,MAAM,CAACmB,IAAD,kCACDe,gBADQ;MAEXE,OAAO,EAAEJ,MAFE;MAGXK,eAAe,EAAE;IAAA,GAJH,CAAlB,EAMGC,KANH,CAMS,iBAAkB;MAAA,IAAfC;MACV,IAAIA,QAAJ,EAAc;QACZf,gBAAgB,CAACS,OAAjB,CAAyBf,KAAzB;QACAQ,eAAe,CAACO,OAAhB,GAA0BO,SAA1B;MACD;IACF,CAXD;IAaAd,eAAe,CAACO,OAAhB,GAA0Bf,KAA1B;EACD,CApBiB,EAqBlB,CAACC,IAAD,CArBkB,CAApB;EAwBAvB,KAAK,CAAC6C,SAAN,CAAgB,YAAM;IACpBnB,kBAAkB,CAACW,OAAnB,GAA6BtB,eAA7B;IACAY,SAAS,CAACU,OAAV,GAAoBzB,MAApB;IACAgB,gBAAgB,CAACS,OAAjB,GAA2BrB,aAA3B;EACD,CAJD;EAMAhB,KAAK,CAAC6C,SAAN,CAAgB,YAAM;IACpB,IAAMT,MAAM,GAAG,CAACV,kBAAkB,CAACW,OAAnB,CAA2Bf,KAA5B,GAAoCV,MAAM,CAACqB,KAA1D;IAEAV,IAAI,CAACuB,QAAL,CAAcV,MAAd;EACD,CAJD,EAIG,CAACxB,MAAM,CAACqB,KAAR,EAAeV,IAAf,CAJH;EAMAvB,KAAK,CAAC6C,SAAN,CAAgB,YAAM;IACpB,IAAIhC,mBAAmB,KAAK,MAA5B,EAAoC;MAClCkC,QAAQ,CAACC,OAAT;IACD;IAED,IAAIpC,MAAM,CAACqB,KAAP,IAAgBJ,eAAe,CAACQ,OAAhB,KAA4Bf,KAAhD,EAAuD;MACrDO,eAAe,CAACQ,OAAhB,GAA0Bf,KAA1B;MACAY,WAAW,CAACZ,KAAD,CAAX;IACD;EACF,CATD,EASG,CAACY,WAAD,EAAcrB,mBAAd,EAAmCD,MAAM,CAACqB,KAA1C,EAAiDX,KAAjD,CATH;EAWA,IAAM2B,oBAAoB,GAAG,SAAvBA,oBAAoB,CACxBC,CAD2B,EAE3BC,YAF2B,EAGxB;IACH,OACEC,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4BF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACI,EAAb,GAAkB,CAA3B,CAA5B,IACAH,IAAI,CAACC,GAAL,CAASF,YAAY,CAACK,EAAtB,IAA4BJ,IAAI,CAACC,GAAL,CAASF,YAAY,CAACM,EAAb,GAAkB,CAA3B,CAF9B;EAID,CARD;EAUA,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CACjBC,KADoB,EAEpBR,YAFoB,EAGjB;IACH,IAAIrC,YAAY,KAAK,KAArB,EAA4B;MAC1B,OAAO,KAAP;IACD;IAED,IAAM8C,KAAK,GAAGC,WAAW,CAACC,KAAZ,GAAoB,CAACX,YAAY,CAACG,EAAlC,GAAuCH,YAAY,CAACG,EAAlE;IAEA,OACEL,oBAAoB,CAACU,KAAD,EAAQR,YAAR,CAApB,KACES,KAAK,IAAI1D,SAAT,IAAsB2B,eAAe,CAACQ,OAAhB,GAA0B,CAAjD,IACEuB,KAAK,IAAI,CAAC1D,SAAV,IAAuB2B,eAAe,CAACQ,OAAhB,GAA0BhB,MAAM,CAAC0C,MAAP,GAAgB,CAFpE,CADF;EAKD,CAfD;EAiBA,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzB/C,YAAY,SAAZ,gBAAY,WAAZ,wBAAY;IAEZ,IAAIJ,mBAAmB,KAAK,SAA5B,EAAuC;MACrCkC,QAAQ,CAACC,OAAT;IACD;IAEDzB,IAAI,CAAC0C,aAAL;;IAEA1C,IAAI,CAAC2C,SAAL,CAAe3C,IAAI,CAAC4C,MAApB;EACD,CAVD;EAYA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CACpBlB,CADuB,EAEvBC,YAFuB,EAGpB;IACH,IAAMS,KAAK,GAAGC,WAAW,CAACC,KAAZ,GAAoB,CAACX,YAAY,CAACG,EAAlC,GAAuCH,YAAY,CAACG,EAAlE;IAEA;IAEGM,KAAK,GAAG,CAAR,IAAatC,KAAK,IAAI,CAAvB,IAECsC,KAAK,GAAG,CAAR,IAAatC,KAAK,IAAID,MAAM,CAAC0C,MAAP,GAAgB,CAJzC,EAKE;MACA;IACD;IAED,IAAInD,MAAM,CAACqB,KAAX,EAAkB;MAEhB,IAAMoC,QAAQ,GAAG,CAAC9C,IAAI,CAAC+C,OAAL,GAAeV,KAAhB,IAAyB,CAAChD,MAAM,CAACqB,KAAlD;MACA,IAAMsC,IAAI,GACRF,QAAQ,GAAG/C,KAAX,GAAmB8B,IAAI,CAACoB,IAAL,CAAUH,QAAV,CAAnB,GAAyCjB,IAAI,CAACqB,KAAL,CAAWJ,QAAX,CAD3C;MAGA,IAAIE,IAAI,KAAKjD,KAAb,EAAoB;QAClBE,YAAY,CAACa,OAAb,CAAqBqC,OAArB,CAA8BC,kBAAD;UAAA,OAAcA,QAAQ,CAACJ,IAAD,CAAnD;QAAA;MACD;IACF;IAEDhD,IAAI,CAACuB,QAAL,CAAcc,KAAd;EACD,CA3BD;EA6BA,IAAMgB,aAAa,GAAG,SAAhBA,aAAa,CACjB1B,CADoB,EAEpBC,YAFoB,EAGjB;IACH5B,IAAI,CAACsD,aAAL;IAEA3D,UAAU,SAAV,cAAU,WAAV,sBAAU;IAEV,IAAM4D,YAAY,GAChB,OAAOhD,eAAe,CAACO,OAAvB,KAAmC,QAAnC,GACIP,eAAe,CAACO,OADpB,GAEIR,eAAe,CAACQ,OAHtB;IAKA,IAAI0C,SAAS,GAAGD,YAAhB;IAEA,IACE1B,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4BF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACI,EAAtB,CAA5B,IACAH,IAAI,CAACC,GAAL,CAASF,YAAY,CAACK,EAAtB,IAA4BJ,IAAI,CAACC,GAAL,CAASF,YAAY,CAACM,EAAtB,CAD5B,KAECL,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4BtB,sBAA5B,IACCoB,IAAI,CAACC,GAAL,CAASF,YAAY,CAACK,EAAtB,IAA4BzB,sBAH9B,CADF,EAKE;MACAgD,SAAS,GAAG3B,IAAI,CAAC4B,KAAL,CACV5B,IAAI,CAAC6B,GAAL,CACE7B,IAAI,CAAC8B,GAAL,CACE,CADF,EAEErB,WAAW,CAACC,KAAZ,GACIgB,YAAY,GAAG3B,YAAY,CAACG,EAAb,GAAkBF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,CADrC,GAEIwB,YAAY,GAAG3B,YAAY,CAACG,EAAb,GAAkBF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,CAJvC,CADF,EAOEjC,MAAM,CAAC0C,MAAP,GAAgB,CAPlB,CADU,CAAZ;MAYAlC,eAAe,CAACQ,OAAhB,GAA0B0C,SAA1B;IACD;IAED,IAAI,CAACI,QAAQ,CAACJ,SAAD,CAAb,EAA0B;MACxBA,SAAS,GAAGD,YAAZ;IACD;IAED5C,WAAW,CAAC6C,SAAD,CAAX;EACD,CAzCD;;EA4CA,IAAMK,gBAAgB,GAAGpF,KAAK,CAACmC,WAAN,CAAmBwC,kBAAD,EAAwB;IACjEnD,YAAY,CAACa,OAAb,CAAqBgD,IAArB,CAA0BV,QAA1B;IAEA,OAAO,YAAM;MACX,IAAMrD,KAAK,GAAGE,YAAY,CAACa,OAAb,CAAqBiD,OAArB,CAA6BX,QAA7B,CAAd;MAEA,IAAIrD,KAAK,GAAG,CAAC,CAAb,EAAgB;QACdE,YAAY,CAACa,OAAb,CAAqBkD,MAArB,CAA4BjE,KAA5B,EAAmC,CAAnC;MACD;IACF,CAND;EAOD,CAVwB,EAUtB,EAVsB,CAAzB;EAYA,IAAMkE,MAAM,GAAGxF,KAAK,CAACmC,WAAN,CACZsD,aAAD,EAAiB;IACf,IAAMnE,KAAK,GAAGI,kBAAkB,CAACW,OAAnB,CAA2BhB,MAA3B,CAAkCqE,SAAlC,CACXC,eAAD;MAAA,OAA4BA,KAAK,CAACF,GAAN,KAAcA,GAD9B;IAAA,EAAd;IAIAvD,WAAW,CAACZ,KAAD,CAAX;EACD,CAPY,EAQb,CAACY,WAAD,CARa,CAAf;EAWA,IAAM0D,YAAY,GAAGC,YAAY,CAACC,MAAb,CAAoB;IACvCC,2BAA2B,EAAErC,aADU;IAEvCsC,kCAAkC,EAAEtC,aAFG;IAGvCuC,mBAAmB,EAAEjC,YAHkB;IAIvCkC,kBAAkB,EAAE9B,gBAJmB;IAKvC+B,uBAAuB,EAAEvB,aALc;IAMvCwB,qBAAqB,EAAExB,aANgB;IAOvCyB,gCAAgC,EAAE;MAAA,OAAM;IAAA;EAPD,CAApB,CAArB;EAUA,IAAMC,YAAY,GAAG1F,MAAM,CAACqB,KAAP,IAAgBZ,MAAM,CAAC0C,MAAP,GAAgB,CAAhC,CAArB;EACA,IAAMwC,UAAU,GAAGlG,QAAQ,CAACmG,QAAT,CACjBjF,IAAI,CAACkF,WAAL,CAAiB;IACfC,UAAU,EAAE,CAAC,CAACJ,YAAF,EAAgB,CAAhB,CADG;IAEfK,WAAW,EAAE,CAAC,CAACL,YAAF,EAAgB,CAAhB,CAFE;IAGfM,WAAW,EAAE;EAHE,CAAjB,CADiB,EAMjB/C,WAAW,CAACC,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CANR,CAAnB;EASA,OAAO3C,QAAQ,CAAC;IACdkD,QAAQ,EAAEzD,MAAM,CAACqB,KAAP,GACN5B,QAAQ,CAACwG,MAAT,CAAgBtF,IAAhB,EAAsB,CAACX,MAAM,CAACqB,KAA9B,CADM,GAEN,IAAI5B,QAAQ,CAACyG,KAAb,CAAmBxF,KAAnB,CAHU;IAId8D,gBAJc,EAIdA,gBAJc;IAKdI,MALc,EAKdA,MALc;IAMduB,MAAM,EAAG5F,wBAAD;MAAA,OACNnB,oBAACK,QAAD,CAAU2G,IAAV;QACE5F,KAAK,EAAE,CACL6F,MAAM,CAACC,KADF,EAELtG,MAAM,CAACqB,KAAP,GACI;UACEA,KAAK,EAAEZ,MAAM,CAAC0C,MAAP,GAAgBnD,MAAM,CAACqB,KADhC;UAEEkF,SAAS,EAAE,CAAC;YAAEZ;UAAF,CAAD;QAFb,CADJ,GAKI,IAPC,EAQLnF,KARK;MADT,GAWMwE,YAAY,CAACwB,WAXnB,GAaGpH,KAAK,CAACqH,QAAN,CAAeC,GAAf,CAAmBnG,QAAnB,EAA6B,UAACoG,KAAD,EAAQC,CAAR,EAAc;QAC1C,IAAM7B,KAAK,GAAGtE,MAAM,CAACmG,CAAD,CAApB;QACA,IAAMC,OAAO,GAAGD,CAAC,KAAKlG,KAAtB;QAEA,OACEtB,oBAACgH,IAAD;UACEvB,GAAG,EAAEE,KAAK,CAACF,GADb;UAEErE,KAAK,EACHR,MAAM,CAACqB,KAAP,GACI;YAAEA,KAAK,EAAErB,MAAM,CAACqB;UAAhB,CADJ,GAEIwF,OAAO,GACPC,UAAU,CAACC,YADJ,GAEP;QAPR,GAUGF,OAAO,IAAI7G,MAAM,CAACqB,KAAlB,GAA0BsF,KAA1B,GAAkC,IAVrC,CADF;MAcD,CAlBA,CAbH;IAAA;EAPY,CAAD,CAAf;AA0CD;AAED,IAAMN,MAAM,GAAGS,UAAU,CAAC5B,MAAX,CAAkB;EAC/BoB,KAAK,EAAE;IACLU,IAAI,EAAE,CADD;IAELC,aAAa,EAAE,KAFV;IAGLC,UAAU,EAAE;EAHP;AADwB,CAAlB,CAAf","names":["React","useAnimatedValue","DEAD_ZONE","DefaultTransitionSpec","timing","Animated","spring","stiffness","damping","mass","overshootClamping","PanResponderAdapter","layout","keyboardDismissMode","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","routes","index","panX","listenersRef","useRef","navigationStateRef","layoutRef","onIndexChangeRef","currentIndexRef","pendingIndexRef","swipeVelocityThreshold","swipeDistanceThreshold","width","jumpToIndex","useCallback","offset","current","transitionConfig","parallel","toValue","useNativeDriver","start","finished","undefined","useEffect","setValue","Keyboard","dismiss","isMovingHorizontally","_","gestureState","Math","abs","dx","dy","vx","vy","canMoveScreen","event","diffX","I18nManager","isRTL","length","startGesture","stopAnimation","setOffset","_value","respondToGesture","position","_offset","next","ceil","floor","forEach","listener","finishGesture","flattenOffset","currentIndex","nextIndex","round","min","max","isFinite","addEnterListener","push","indexOf","splice","jumpTo","key","findIndex","route","panResponder","PanResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","multiply","interpolate","inputRange","outputRange","extrapolate","divide","Value","render","View","styles","sheet","transform","panHandlers","Children","map","child","i","focused","StyleSheet","absoluteFill","flex","flexDirection","alignItems"],"sources":["PanResponderAdapter.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  PanResponder,\n  Keyboard,\n  StyleSheet,\n  GestureResponderEvent,\n  PanResponderGestureState,\n  I18nManager,\n  View,\n} from 'react-native';\nimport useAnimatedValue from './useAnimatedValue';\nimport type {\n  NavigationState,\n  Route,\n  Layout,\n  EventEmitterProps,\n  PagerProps,\n  Listener,\n} from './types';\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n};\n\nexport default function PanResponderAdapter<T extends Route>({\n  layout,\n  keyboardDismissMode = 'auto',\n  swipeEnabled = true,\n  navigationState,\n  onIndexChange,\n  onSwipeStart,\n  onSwipeEnd,\n  children,\n  style,\n}: Props<T>) {\n  const { routes, index } = navigationState;\n\n  const panX = useAnimatedValue(0);\n\n  const listenersRef = React.useRef<Listener[]>([]);\n\n  const navigationStateRef = React.useRef(navigationState);\n  const layoutRef = React.useRef(layout);\n  const onIndexChangeRef = React.useRef(onIndexChange);\n\n  const currentIndexRef = React.useRef(index);\n  const pendingIndexRef = React.useRef<number>();\n\n  const swipeVelocityThreshold = 0.15;\n  const swipeDistanceThreshold = layout.width / 1.75;\n\n  const jumpToIndex = React.useCallback(\n    (index: number) => {\n      const offset = -index * layoutRef.current.width;\n\n      const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n      Animated.parallel([\n        timing(panX, {\n          ...transitionConfig,\n          toValue: offset,\n          useNativeDriver: false,\n        }),\n      ]).start(({ finished }) => {\n        if (finished) {\n          onIndexChangeRef.current(index);\n          pendingIndexRef.current = undefined;\n        }\n      });\n\n      pendingIndexRef.current = index;\n    },\n    [panX]\n  );\n\n  React.useEffect(() => {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n\n  React.useEffect(() => {\n    const offset = -navigationStateRef.current.index * layout.width;\n\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n\n  React.useEffect(() => {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n  const isMovingHorizontally = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  const canMoveScreen = (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    if (swipeEnabled === false) {\n      return false;\n    }\n\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    return (\n      isMovingHorizontally(event, gestureState) &&\n      ((diffX >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1))\n    );\n  };\n\n  const startGesture = () => {\n    onSwipeStart?.();\n\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n\n    panX.stopAnimation();\n    // @ts-expect-error: _value is private, but docs use it as well\n    panX.setOffset(panX._value);\n  };\n\n  const respondToGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    if (\n      // swiping left\n      (diffX > 0 && index <= 0) ||\n      // swiping right\n      (diffX < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    if (layout.width) {\n      // @ts-expect-error: _offset is private, but docs use it as well\n      const position = (panX._offset + diffX) / -layout.width;\n      const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n      if (next !== index) {\n        listenersRef.current.forEach((listener) => listener(next));\n      }\n    }\n\n    panX.setValue(diffX);\n  };\n\n  const finishGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    panX.flattenOffset();\n\n    onSwipeEnd?.();\n\n    const currentIndex =\n      typeof pendingIndexRef.current === 'number'\n        ? pendingIndexRef.current\n        : currentIndexRef.current;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            I18nManager.isRTL\n              ? currentIndex + gestureState.dx / Math.abs(gestureState.dx)\n              : currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          routes.length - 1\n        )\n      );\n\n      currentIndexRef.current = nextIndex;\n    }\n\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n\n    jumpToIndex(nextIndex);\n  };\n\n  // TODO: use the listeners\n  const addEnterListener = React.useCallback((listener: Listener) => {\n    listenersRef.current.push(listener);\n\n    return () => {\n      const index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationStateRef.current.routes.findIndex(\n        (route: { key: string }) => route.key === key\n      );\n\n      jumpToIndex(index);\n    },\n    [jumpToIndex]\n  );\n\n  const panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  const maxTranslate = layout.width * (routes.length - 1);\n  const translateX = Animated.multiply(\n    panX.interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp',\n    }),\n    I18nManager.isRTL ? -1 : 1\n  );\n\n  return children({\n    position: layout.width\n      ? Animated.divide(panX, -layout.width)\n      : new Animated.Value(index),\n    addEnterListener,\n    jumpTo,\n    render: (children) => (\n      <Animated.View\n        style={[\n          styles.sheet,\n          layout.width\n            ? {\n                width: routes.length * layout.width,\n                transform: [{ translateX }],\n              }\n            : null,\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = routes[i];\n          const focused = i === index;\n\n          return (\n            <View\n              key={route.key}\n              style={\n                layout.width\n                  ? { width: layout.width }\n                  : focused\n                  ? StyleSheet.absoluteFill\n                  : null\n              }\n            >\n              {focused || layout.width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    ),\n  });\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}