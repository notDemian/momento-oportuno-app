{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCommonVariables = useCommonVariables;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNativeReanimated = require(\"react-native-reanimated\");\nvar _computeNewIndexWhenDataChanges = require(\"./computeNewIndexWhenDataChanges\");\nvar _handlerOffsetDirection = require(\"../utils/handlerOffsetDirection\");\nfunction useCommonVariables(props) {\n  var vertical = props.vertical,\n    height = props.height,\n    width = props.width,\n    dataLength = props.dataLength,\n    defaultIndex = props.defaultIndex,\n    defaultScrollOffsetValue = props.defaultScrollOffsetValue,\n    loop = props.loop;\n  var size = vertical ? height : width;\n  var validLength = dataLength - 1;\n  var defaultHandlerOffsetValue = -Math.abs(defaultIndex * size);\n  var _handlerOffset = (0, _reactNativeReanimated.useSharedValue)(defaultHandlerOffsetValue);\n  var handlerOffset = defaultScrollOffsetValue != null ? defaultScrollOffsetValue : _handlerOffset;\n  var prevDataLength = (0, _reactNativeReanimated.useSharedValue)(dataLength);\n  _react.default.useEffect(function () {\n    handlerOffset.value = defaultHandlerOffsetValue;\n  }, [vertical, handlerOffset, defaultHandlerOffsetValue]);\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      var previousLength = prevDataLength.value;\n      var currentLength = dataLength;\n      var isLengthChanged = previousLength !== currentLength;\n      var shouldComputed = isLengthChanged && loop;\n      if (shouldComputed) prevDataLength.value = dataLength;\n      return {\n        shouldComputed: shouldComputed,\n        previousLength: previousLength,\n        currentLength: currentLength\n      };\n    };\n    _f._closure = {\n      prevDataLength: prevDataLength,\n      dataLength: dataLength,\n      loop: loop\n    };\n    _f.asString = \"function _f(){const{prevDataLength,dataLength,loop}=jsThis._closure;{const previousLength=prevDataLength.value;const currentLength=dataLength;const isLengthChanged=previousLength!==currentLength;const shouldComputed=isLengthChanged&&loop;if(shouldComputed)prevDataLength.value=dataLength;return{shouldComputed:shouldComputed,previousLength:previousLength,currentLength:currentLength};}}\";\n    _f.__workletHash = 13698961874962;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/hooks/useCommonVariables.ts (39:22)\";\n    return _f;\n  }(), function () {\n    var _f = function _f(_ref) {\n      var shouldComputed = _ref.shouldComputed,\n        previousLength = _ref.previousLength,\n        currentLength = _ref.currentLength;\n      if (shouldComputed) {\n        var direction = (0, _handlerOffsetDirection.handlerOffsetDirection)(handlerOffset);\n        handlerOffset.value = (0, _computeNewIndexWhenDataChanges.computeNewIndexWhenDataChanges)({\n          direction: direction,\n          previousLength: previousLength,\n          currentLength: currentLength,\n          size: size,\n          handlerOffset: handlerOffset.value\n        });\n      }\n    };\n    _f._closure = {\n      handlerOffsetDirection: _handlerOffsetDirection.handlerOffsetDirection,\n      handlerOffset: handlerOffset,\n      computeNewIndexWhenDataChanges: _computeNewIndexWhenDataChanges.computeNewIndexWhenDataChanges,\n      size: size\n    };\n    _f.asString = \"function _f({shouldComputed:shouldComputed,previousLength:previousLength,currentLength:currentLength}){const{handlerOffsetDirection,handlerOffset,computeNewIndexWhenDataChanges,size}=jsThis._closure;{if(shouldComputed){const direction=handlerOffsetDirection(handlerOffset);handlerOffset.value=computeNewIndexWhenDataChanges({direction:direction,previousLength:previousLength,currentLength:currentLength,size:size,handlerOffset:handlerOffset.value});}}}\";\n    _f.__workletHash = 7425703877323;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/hooks/useCommonVariables.ts (53:5)\";\n    return _f;\n  }(), [dataLength, loop]);\n  return {\n    size: size,\n    validLength: validLength,\n    handlerOffset: handlerOffset\n  };\n}","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNativeReanimated","_computeNewIndexWhenDataChanges","_handlerOffsetDirection","useCommonVariables","props","vertical","height","width","dataLength","defaultIndex","defaultScrollOffsetValue","loop","size","validLength","defaultHandlerOffsetValue","Math","abs","_handlerOffset","useSharedValue","handlerOffset","prevDataLength","default","useEffect","value","useAnimatedReaction","_f","previousLength","currentLength","isLengthChanged","shouldComputed","_closure","asString","__workletHash","__location","_ref","direction","handlerOffsetDirection","computeNewIndexWhenDataChanges"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/node_modules/react-native-reanimated-carousel/lib/commonjs/hooks/useCommonVariables.ts"],"sourcesContent":["import React from \"react\";\nimport type Animated from \"react-native-reanimated\";\nimport { useSharedValue, useAnimatedReaction } from \"react-native-reanimated\";\n\nimport { computeNewIndexWhenDataChanges } from \"./computeNewIndexWhenDataChanges\";\nimport type { TInitializeCarouselProps } from \"./useInitProps\";\n\nimport { handlerOffsetDirection } from \"../utils/handlerOffsetDirection\";\n\ninterface ICommonVariables {\n  size: number\n  validLength: number\n  handlerOffset: Animated.SharedValue<number>\n}\n\nexport function useCommonVariables(\n  props: TInitializeCarouselProps<any>,\n): ICommonVariables {\n  const {\n    vertical,\n    height,\n    width,\n    dataLength,\n    defaultIndex,\n    defaultScrollOffsetValue,\n    loop,\n  } = props;\n  const size = vertical ? height : width;\n  const validLength = dataLength - 1;\n  const defaultHandlerOffsetValue = -Math.abs(defaultIndex * size);\n  const _handlerOffset = useSharedValue<number>(defaultHandlerOffsetValue);\n  const handlerOffset = defaultScrollOffsetValue ?? _handlerOffset;\n  const prevDataLength = useSharedValue(dataLength);\n\n  React.useEffect(() => {\n    handlerOffset.value = defaultHandlerOffsetValue;\n  }, [vertical, handlerOffset, defaultHandlerOffsetValue]);\n\n  useAnimatedReaction(() => {\n    const previousLength = prevDataLength.value;\n    const currentLength = dataLength;\n    const isLengthChanged = previousLength !== currentLength;\n    const shouldComputed = isLengthChanged && loop;\n\n    if (shouldComputed)\n      prevDataLength.value = dataLength;\n\n    return {\n      shouldComputed,\n      previousLength,\n      currentLength,\n    };\n  }, ({ shouldComputed, previousLength, currentLength }) => {\n    if (shouldComputed) {\n      // direction -> 1 | -1\n      const direction = handlerOffsetDirection(handlerOffset);\n\n      handlerOffset.value = computeNewIndexWhenDataChanges({\n        direction,\n        previousLength,\n        currentLength,\n        size,\n        handlerOffset: handlerOffset.value,\n      });\n    }\n  }, [dataLength, loop]);\n\n  return {\n    size,\n    validLength,\n    handlerOffset,\n  };\n}\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,sBAAA,GAAAD,OAAA;AAEA,IAAAE,+BAAA,GAAAF,OAAA;AAGA,IAAAG,uBAAA,GAAAH,OAAA;AAQO,SAASI,kBAATA,CACLC,KADK,EAEa;EAClB,IACEC,QADF,GAQID,KARJ,CACEC,QADF;IAEEC,MAFF,GAQIF,KARJ,CAEEE,MAFF;IAGEC,KAHF,GAQIH,KARJ,CAGEG,KAHF;IAIEC,UAJF,GAQIJ,KARJ,CAIEI,UAJF;IAKEC,YALF,GAQIL,KARJ,CAKEK,YALF;IAMEC,wBANF,GAQIN,KARJ,CAMEM,wBANF;IAOEC,IAPF,GAQIP,KARJ,CAOEO,IAPF;EASA,IAAMC,IAAI,GAAGP,QAAQ,GAAGC,MAAH,GAAYC,KAAjC;EACA,IAAMM,WAAW,GAAGL,UAAU,GAAG,CAAjC;EACA,IAAMM,yBAAyB,GAAG,CAACC,IAAI,CAACC,GAAL,CAASP,YAAY,GAAGG,IAAxB,CAAnC;EACA,IAAMK,cAAc,GAAG,IAAAjB,sBAAA,CAAAkB,cAAA,EAAuBJ,yBAAvB,CAAvB;EACA,IAAMK,aAAa,GAAGT,wBAAH,WAAGA,wBAAH,GAA+BO,cAAlD;EACA,IAAMG,cAAc,GAAG,IAAApB,sBAAA,CAAAkB,cAAA,EAAeV,UAAf,CAAvB;EAEAX,MAAA,CAAAwB,OAAA,CAAMC,SAAN,CAAgB,YAAM;IACpBH,aAAa,CAACI,KAAd,GAAsBT,yBAAtB;EACD,CAFD,EAEG,CAACT,QAAD,EAAWc,aAAX,EAA0BL,yBAA1B,CAFH;EAIA,IAAAd,sBAAA,CAAAwB,mBAAA;IAAA,IAAAC,EAAA,YAAAA,GAAA,EAA0B;MACxB,IAAMC,cAAc,GAAGN,cAAc,CAACG,KAAtC;MACA,IAAMI,aAAa,GAAGnB,UAAtB;MACA,IAAMoB,eAAe,GAAGF,cAAc,KAAKC,aAA3C;MACA,IAAME,cAAc,GAAGD,eAAe,IAAIjB,IAA1C;MAEA,IAAIkB,cAAJ,EACET,cAAc,CAACG,KAAf,GAAuBf,UAAvB;MAEF,OAAO;QACLqB,cAAc,EAAdA,cADK;QAELH,cAAc,EAAdA,cAFK;QAGLC,aAAa,EAAbA;MAHK,CAAP;IAKD,CAdD;IAAAF,EAAA,CAAAK,QAAA;MAAAV,cAAA,EAhCoBA,cAgCpB;MAAAZ,UAAA,EAhC2CA,UAgC3C;MAAAG,IAAA,EAjC0CA;IAiC1C;IAAAc,EAAA,CAAAM,QAAA;IAAAN,EAAA,CAAAO,aAAA;IAAAP,EAAA,CAAAQ,UAAA;IAAA,OAAAR,EAAA;EAAA;IAAA,IAAAA,EAAA,YAAAA,GAAAS,IAAA,EAc0D;MAAA,IAApDL,cAAoD,GAAAK,IAAA,CAApDL,cAAoD;QAApCH,cAAoC,GAAAQ,IAAA,CAApCR,cAAoC;QAApBC,aAAoB,GAAAO,IAAA,CAApBP,aAAoB;MACxD,IAAIE,cAAJ,EAAoB;QAElB,IAAMM,SAAS,GAAG,IAAAjC,uBAAA,CAAAkC,sBAAA,EAAuBjB,aAAvB,CAAlB;QAEAA,aAAa,CAACI,KAAd,GAAsB,IAAAtB,+BAAA,CAAAoC,8BAAA,EAA+B;UACnDF,SAAS,EAATA,SADmD;UAEnDT,cAAc,EAAdA,cAFmD;UAGnDC,aAAa,EAAbA,aAHmD;UAInDf,IAAI,EAAJA,IAJmD;UAKnDO,aAAa,EAAEA,aAAa,CAACI;QALsB,CAA/B,CAAtB;MAOD;IACF,CA3BD;IAAAE,EAAA,CAAAK,QAAA;MAAAM,sBAAA,EA9BoBlC,uBAAA,CAAAkC,sBA8BpB;MAAAjB,aAAA,EAxBmBA,aAwBnB;MAAAkB,8BAAA,EA7BwBpC,+BAAA,CAAAoC,8BA6BxB;MAAAzB,IAAA,EAzBIA;IAyBJ;IAAAa,EAAA,CAAAM,QAAA;IAAAN,EAAA,CAAAO,aAAA;IAAAP,EAAA,CAAAQ,UAAA;IAAA,OAAAR,EAAA;EAAA,KA2BG,CAACjB,UAAD,EAAaG,IAAb,CA3BH;EA6BA,OAAO;IACLC,IAAI,EAAJA,IADK;IAELC,WAAW,EAAXA,WAFK;IAGLM,aAAa,EAAbA;EAHK,CAAP;AAKD"},"metadata":{},"sourceType":"script","externalDependencies":[]}