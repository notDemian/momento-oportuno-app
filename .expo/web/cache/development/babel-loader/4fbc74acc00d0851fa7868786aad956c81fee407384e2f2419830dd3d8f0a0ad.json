{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BouncyCheckbox from 'react-native-bouncy-checkbox';\nimport { useTheme } from '@react-navigation/native';\nimport { Text } from \"../Text\";\nimport { Box } from \"../Box\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var CheckBox = function CheckBox(_ref) {\n  var label = _ref.label,\n    onChange = _ref.onChange,\n    rightElement = _ref.rightElement;\n  var _useTheme = useTheme(),\n    _useTheme$colors = _useTheme.colors,\n    primary = _useTheme$colors.primary,\n    text = _useTheme$colors.text,\n    card = _useTheme$colors.card;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    checked = _React$useState2[0],\n    setChecked = _React$useState2[1];\n  var handleOnChange = function handleOnChange() {\n    setChecked(!checked);\n    onChange(!checked);\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: handleOnChange,\n    children: _jsxs(Box, {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: \"m\",\n      children: [_jsxs(Box, {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        children: [_jsx(BouncyCheckbox, {\n          disableBuiltInState: true,\n          isChecked: checked,\n          size: 25,\n          fillColor: primary,\n          unfillColor: card,\n          iconStyle: {\n            borderColor: primary\n          },\n          textStyle: {\n            color: text\n          },\n          onPress: handleOnChange\n        }), _jsx(Text, {\n          children: label\n        })]\n      }), rightElement && _jsx(Box, {\n        alignItems: \"flex-end\",\n        children: rightElement\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","TouchableOpacity","BouncyCheckbox","useTheme","Text","Box","jsx","_jsx","jsxs","_jsxs","CheckBox","_ref","label","onChange","rightElement","_useTheme","_useTheme$colors","colors","primary","text","card","_React$useState","useState","_React$useState2","_slicedToArray","checked","setChecked","handleOnChange","onPress","children","flexDirection","justifyContent","alignItems","padding","disableBuiltInState","isChecked","size","fillColor","unfillColor","iconStyle","borderColor","textStyle","color"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/CheckBox/CheckBox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport BouncyCheckbox from 'react-native-bouncy-checkbox';\nimport { useTheme } from '@react-navigation/native';\nimport { Text } from '../Text';\nimport { Box } from '../Box';\n\ntype CheckBoxProps = {\n  label: string;\n  onChange: (checked: boolean) => void;\n  rightElement?: React.ReactElement;\n};\nexport const CheckBox = ({ label, onChange, rightElement }: CheckBoxProps) => {\n  const {\n    colors: { primary, text, card },\n  } = useTheme();\n  const [checked, setChecked] = React.useState<boolean>(false);\n  const handleOnChange = () => {\n    setChecked(!checked);\n    onChange(!checked);\n  };\n\n  return (\n    <TouchableOpacity onPress={handleOnChange}>\n      <Box\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        padding=\"m\">\n        <Box flexDirection=\"row\" alignItems=\"center\">\n          <BouncyCheckbox\n            disableBuiltInState\n            isChecked={checked}\n            size={25}\n            fillColor={primary}\n            unfillColor={card}\n            iconStyle={{\n              borderColor: primary,\n            }}\n            textStyle={{\n              color: text,\n            }}\n            onPress={handleOnChange}\n          />\n          <Text>{label}</Text>\n        </Box>\n        {rightElement && <Box alignItems=\"flex-end\">{rightElement}</Box>}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAE/B,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,IAAI;AACb,SAASC,GAAG;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO7B,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAyD;EAAA,IAAnDC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,YAAY,GAAAH,IAAA,CAAZG,YAAY;EACtD,IAAAC,SAAA,GAEIZ,QAAQ,CAAC,CAAC;IAAAa,gBAAA,GAAAD,SAAA,CADZE,MAAM;IAAIC,OAAO,GAAAF,gBAAA,CAAPE,OAAO;IAAEC,IAAI,GAAAH,gBAAA,CAAJG,IAAI;IAAEC,IAAI,GAAAJ,gBAAA,CAAJI,IAAI;EAE/B,IAAAC,eAAA,GAA8BrB,KAAK,CAACsB,QAAQ,CAAU,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAArDI,OAAO,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAC1B,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BD,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBZ,QAAQ,CAAC,CAACY,OAAO,CAAC;EACpB,CAAC;EAED,OACElB,IAAA,CAACN,gBAAgB;IAAC2B,OAAO,EAAED,cAAe;IAAAE,QAAA,EACxCpB,KAAA,CAACJ,GAAG;MACFyB,aAAa,EAAC,KAAK;MACnBC,cAAc,EAAC,eAAe;MAC9BC,UAAU,EAAC,QAAQ;MACnBC,OAAO,EAAC,GAAG;MAAAJ,QAAA,GACXpB,KAAA,CAACJ,GAAG;QAACyB,aAAa,EAAC,KAAK;QAACE,UAAU,EAAC,QAAQ;QAAAH,QAAA,GAC1CtB,IAAA,CAACL,cAAc;UACbgC,mBAAmB;UACnBC,SAAS,EAAEV,OAAQ;UACnBW,IAAI,EAAE,EAAG;UACTC,SAAS,EAAEnB,OAAQ;UACnBoB,WAAW,EAAElB,IAAK;UAClBmB,SAAS,EAAE;YACTC,WAAW,EAAEtB;UACf,CAAE;UACFuB,SAAS,EAAE;YACTC,KAAK,EAAEvB;UACT,CAAE;UACFS,OAAO,EAAED;QAAe,CACzB,CAAC,EACFpB,IAAA,CAACH,IAAI;UAAAyB,QAAA,EAAEjB;QAAK,CAAO,CAAC;MAAA,CACjB,CAAC,EACLE,YAAY,IAAIP,IAAA,CAACF,GAAG;QAAC2B,UAAU,EAAC,UAAU;QAAAH,QAAA,EAAEf;MAAY,CAAM,CAAC;IAAA,CAC7D;EAAC,CACU,CAAC;AAEvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}