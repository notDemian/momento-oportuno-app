{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport times from 'lodash/times';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar STAR_IMAGE = require(\"./images/star.png\");\nvar HEART_IMAGE = require(\"./images/heart.png\");\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\nvar BELL_IMAGE = require(\"./images/bell.png\");\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\nvar SwipeRating = function (_Component) {\n  _inherits(SwipeRating, _Component);\n  var _super = _createSuper(SwipeRating);\n  function SwipeRating(props) {\n    var _this;\n    _classCallCheck(this, SwipeRating);\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n      onStartRating = _this$props.onStartRating,\n      onSwipeRating = _this$props.onSwipeRating,\n      onFinishRating = _this$props.onFinishRating,\n      fractions = _this$props.fractions;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n          var rating = _this.getCurrentRating(tapPositionX);\n          if (typeof onStartRating === 'function') {\n            onStartRating(rating);\n          }\n        }\n      },\n      onPanResponderMove: function onPanResponderMove(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n          var rating = _this.getCurrentRating(tapPositionX);\n          if (typeof onSwipeRating === \"function\") {\n            onSwipeRating(rating);\n          }\n        }\n      },\n      onPanResponderRelease: function onPanResponderRelease() {\n        var rating = _this.getCurrentRating(_this.state.value);\n        if (rating >= _this.props.minValue) {\n          if (!fractions) {\n            _this.setCurrentRating(rating);\n          }\n          if (typeof onFinishRating === 'function') {\n            onFinishRating(rating);\n          }\n        }\n      }\n    });\n    _this.state = {\n      panResponder: panResponder,\n      position: position,\n      display: false,\n      isComponentMounted: false\n    };\n    return _this;\n  }\n  _createClass(SwipeRating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      try {\n        this.setState({\n          display: true,\n          isComponentMounted: true\n        }, function () {\n          return _this2.setCurrentRating(_this2.props.startingValue);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.startingValue !== prevProps.startingValue) {\n        this.setCurrentRating(this.props.startingValue);\n      }\n    }\n  }, {\n    key: \"handleLayoutChange\",\n    value: function handleLayoutChange() {\n      var _this3 = this;\n      this.ratingRef.measure(function (fx, fy, width, height, px) {\n        var halfWidth = width / 2;\n        var pageXWithinWindow = px % Dimensions.get(\"window\").width;\n        _this3.setState({\n          centerX: pageXWithinWindow + halfWidth\n        });\n      });\n    }\n  }, {\n    key: \"getPrimaryViewStyle\",\n    value: function getPrimaryViewStyle() {\n      var position = this.state.position;\n      var _this$props2 = this.props,\n        imageSize = _this$props2.imageSize,\n        ratingCount = _this$props2.ratingCount,\n        type = _this$props2.type;\n      var color = TYPES[type].color;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: color,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"getSecondaryViewStyle\",\n    value: function getSecondaryViewStyle() {\n      var position = this.state.position;\n      var _this$props3 = this.props,\n        imageSize = _this$props3.imageSize,\n        ratingCount = _this$props3.ratingCount,\n        type = _this$props3.type;\n      var backgroundColor = TYPES[type].backgroundColor;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: backgroundColor,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"renderRatings\",\n    value: function renderRatings() {\n      var _this$props4 = this.props,\n        imageSize = _this$props4.imageSize,\n        ratingCount = _this$props4.ratingCount,\n        type = _this$props4.type,\n        tintColor = _this$props4.tintColor;\n      var source = TYPES[type].source;\n      return times(ratingCount, function (index) {\n        return _jsx(View, {\n          style: styles.starContainer,\n          children: _jsx(Image, {\n            source: source,\n            style: {\n              width: imageSize,\n              height: imageSize,\n              tintColor: tintColor\n            }\n          })\n        }, index);\n      });\n    }\n\n  }, {\n    key: \"getCurrentRating\",\n    value:\n    function getCurrentRating(value) {\n      var _this$props5 = this.props,\n        fractions = _this$props5.fractions,\n        imageSize = _this$props5.imageSize,\n        ratingCount = _this$props5.ratingCount;\n      var startingValue = ratingCount / 2;\n      var currentRating = this.props.minValue ? this.props.minValue : 0;\n      if (value > ratingCount * imageSize / 2) {\n        currentRating = ratingCount;\n      } else if (value < -ratingCount * imageSize / 2) {\n        currentRating = this.props.minValue ? this.props.minValue : 0;\n      } else if (value <= imageSize || value > imageSize) {\n        var diff = value / imageSize;\n        currentRating = startingValue + diff;\n        currentRating = fractions ? Number(currentRating.toFixed(fractions)) : Math.ceil(currentRating);\n      } else {\n        currentRating = fractions ? Number(startingValue.toFixed(fractions)) : Math.ceil(startingValue);\n      }\n      if (this.props.jumpValue > 0 && this.props.jumpValue < this.props.ratingCount) {\n        return Math.ceil(currentRating * (1 / this.props.jumpValue)) / (1 / this.props.jumpValue);\n      } else {\n        return currentRating;\n      }\n    }\n\n  }, {\n    key: \"setCurrentRating\",\n    value:\n    function setCurrentRating(rating) {\n      var _this$props6 = this.props,\n        imageSize = _this$props6.imageSize,\n        ratingCount = _this$props6.ratingCount;\n\n      var initialRating = ratingCount / 2;\n      var value = null;\n      if (rating > ratingCount) {\n        value = ratingCount * imageSize / 2;\n      } else if (rating < 0) {\n        value = -ratingCount * imageSize / 2;\n      } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n        value = (rating - initialRating) * imageSize;\n      } else {\n        value = 0;\n      }\n      var newPosition = new Animated.ValueXY();\n      newPosition.setValue({\n        x: value,\n        y: 0\n      });\n      if (this.state.isComponentMounted) {\n        this.setState({\n          position: newPosition,\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"displayCurrentRating\",\n    value: function displayCurrentRating() {\n      var _this$props7 = this.props,\n        ratingCount = _this$props7.ratingCount,\n        type = _this$props7.type,\n        readonly = _this$props7.readonly,\n        showReadOnlyText = _this$props7.showReadOnlyText,\n        ratingTextColor = _this$props7.ratingTextColor;\n      var color = ratingTextColor || TYPES[type].color;\n      return _jsxs(View, {\n        style: styles.showRatingView,\n        children: [_jsxs(View, {\n          style: styles.ratingView,\n          children: [_jsxs(Text, {\n            style: [styles.ratingText, {\n              color: color\n            }],\n            children: [\"Rating:\", ' ']\n          }), _jsx(Text, {\n            style: [styles.currentRatingText, {\n              color: color\n            }],\n            children: this.getCurrentRating(this.state.value)\n          }), _jsxs(Text, {\n            style: [styles.maxRatingText, {\n              color: color\n            }],\n            children: [\"/\", ratingCount]\n          })]\n        }), _jsx(View, {\n          children: readonly && showReadOnlyText && _jsx(Text, {\n            style: [styles.readonlyLabel, {\n              color: color\n            }],\n            children: \"(readonly)\"\n          })\n        })]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var _this$props8 = this.props,\n        readonly = _this$props8.readonly,\n        type = _this$props8.type,\n        ratingImage = _this$props8.ratingImage,\n        ratingColor = _this$props8.ratingColor,\n        ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n        style = _this$props8.style,\n        showRating = _this$props8.showRating;\n      if (type === 'custom') {\n        var custom = {\n          source: ratingImage,\n          color: ratingColor,\n          backgroundColor: ratingBackgroundColor\n        };\n        TYPES.custom = custom;\n      }\n      return this.state.display ? _jsxs(View, {\n        pointerEvents: readonly ? 'none' : 'auto',\n        style: style,\n        children: [showRating && this.displayCurrentRating(), _jsxs(View, _objectSpread(_objectSpread({\n          style: styles.starsWrapper\n        }, this.state.panResponder.panHandlers), {}, {\n          children: [_jsxs(View, {\n            style: styles.starsInsideWrapper,\n            onLayout: function onLayout(e) {\n              _this4.handleLayoutChange(e);\n            },\n            ref: function ref(view) {\n              _this4.ratingRef = view;\n            },\n            children: [_jsx(Animated.View, {\n              style: this.getPrimaryViewStyle()\n            }), _jsx(Animated.View, {\n              style: this.getSecondaryViewStyle()\n            })]\n          }), this.renderRatings()]\n        }))]\n      }) : null;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        isComponentMounted: false\n      });\n    }\n  }]);\n  return SwipeRating;\n}(Component);\nSwipeRating.defaultProps = {\n  type: 'star',\n  ratingImage: STAR_IMAGE,\n  ratingColor: '#f1c40f',\n  ratingBackgroundColor: 'white',\n  ratingCount: 5,\n  showReadOnlyText: true,\n  imageSize: 40,\n  minValue: 0,\n  jumpValue: 0\n};\nexport { SwipeRating as default };\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\nvar fractionsType = function fractionsType(props, propName, componentName) {\n  if (props[propName]) {\n    var value = props[propName];\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be between 0 and 20\");\n    }\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a number\");\n  }\n};\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: PropTypes.node,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: PropTypes.object,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};","map":{"version":3,"names":["React","Component","times","PropTypes","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","SwipeRating","props","onStartRating","onSwipeRating","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","event","gesture","newPosition","tapPositionX","x0","state","centerX","dx","setValue","x","y","isComponentMounted","setState","value","rating","getCurrentRating","onPanResponderMove","onPanResponderRelease","minValue","setCurrentRating","display","startingValue","err","console","log","prevProps","ratingRef","measure","fx","fy","width","height","px","halfWidth","pageXWithinWindow","Dimensions","get","imageSize","ratingCount","type","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","tintColor","index","styles","starContainer","currentRating","diff","Number","toFixed","Math","ceil","jumpValue","initialRating","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","custom","displayCurrentRating","starsWrapper","panHandlers","starsInsideWrapper","e","handleLayoutChange","view","getPrimaryViewStyle","getSecondaryViewStyle","renderRatings","defaultProps","StyleSheet","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS","fractionsType","propName","componentName","Error","propTypes","string","node","number","func","bool","object"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/node_modules/react-native-ratings/src/SwipeRating.js"],"sourcesContent":["import React, { Component } from 'react';\nimport times from 'lodash/times';\nimport PropTypes from 'prop-types';\n\nimport {\n  View, Text, Animated, PanResponder, Image,\n  StyleSheet, Platform, Dimensions\n} from 'react-native';\n\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require( './images/star.png' );\nconst HEART_IMAGE = require( './images/heart.png' );\nconst ROCKET_IMAGE = require( './images/rocket.png' );\nconst BELL_IMAGE = require( './images/bell.png' );\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nexport default class SwipeRating extends Component {\n  static defaultProps = {\n    type: 'star',\n    ratingImage: STAR_IMAGE,\n    ratingColor: '#f1c40f',\n    ratingBackgroundColor: 'white',\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: 40,\n    minValue: 0,\n    jumpValue: 0\n  };\n\n  constructor( props ) {\n    super( props );\n    const { onStartRating, onSwipeRating, onFinishRating, fractions } = this.props;\n    const position = new Animated.ValueXY();\n\n    const panResponder = PanResponder.create( {\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: ( event, gesture ) => {\n        const newPosition = new Animated.ValueXY();\n        const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n\n        newPosition.setValue( { x: tapPositionX, y: 0 } );\n        if ( this.state.isComponentMounted ) {\n          this.setState( { position: newPosition, value: tapPositionX } );\n          const rating = this.getCurrentRating( tapPositionX );\n\n          if ( typeof onStartRating === 'function' ) {\n            onStartRating( rating );\n          }\n        }\n      },\n      onPanResponderMove: ( event, gesture ) => {\n        const newPosition = new Animated.ValueXY();\n        const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n\n        newPosition.setValue( { x: tapPositionX, y: 0 } );\n        if ( this.state.isComponentMounted ) {\n          this.setState( { position: newPosition, value: tapPositionX } );\n          const rating = this.getCurrentRating( tapPositionX );\n\n          if ( typeof onSwipeRating === \"function\" ) {\n            onSwipeRating( rating );\n          }\n        }\n      },\n      onPanResponderRelease: () => {\n        const rating = this.getCurrentRating( this.state.value );\n\n        if ( rating >= this.props.minValue ) {\n          if ( !fractions ) {\n            // 'round up' to the nearest rating image\n            this.setCurrentRating( rating );\n          }\n          if ( typeof onFinishRating === 'function' ) {\n            onFinishRating( rating );\n          }\n        }\n      }\n    } );\n\n    this.state = { panResponder, position, display: false, isComponentMounted: false };\n  }\n\n componentDidMount() {\n    try {\n      this.setState(\n        { display: true, isComponentMounted: true },\n        () => this.setCurrentRating( this.props.startingValue )\n      );\n    } catch ( err ) {\n      // eslint-disable-next-line no-console\n      console.log( err )\n    }\n\n  }\n\n  componentDidUpdate( prevProps ) {\n    if ( this.props.startingValue !== prevProps.startingValue ) {\n      this.setCurrentRating( this.props.startingValue );\n    }\n  }\n\n  handleLayoutChange() {\n    // eslint-disable-next-line max-params\n    this.ratingRef.measure( ( fx, fy, width, height, px ) => {\n      const halfWidth = width / 2\n      const pageXWithinWindow = px % Dimensions.get( \"window\" ).width\n\n      this.setState( {\n        centerX: pageXWithinWindow + halfWidth\n      } );\n    } );\n  }\n\n  getPrimaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const {color} = TYPES[type];\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * ( imageSize / 2 ), 0, ratingCount * ( imageSize / 2 )],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const {backgroundColor} = TYPES[type];\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * ( imageSize / 2 ), 0, ratingCount * ( imageSize / 2 )],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  renderRatings() {\n    const { imageSize, ratingCount, type, tintColor } = this.props;\n    const {source} = TYPES[type];\n\n    return times( ratingCount, index =>\n      <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }} />\n      </View>\n    );\n  }\n\n  // eslint-disable-next-line max-statements\n  getCurrentRating( value ) {\n    const { fractions, imageSize, ratingCount } = this.props;\n\n    const startingValue = ratingCount / 2;\n\n    let currentRating = this.props.minValue ? this.props.minValue : 0;\n\n    if ( value > ratingCount * imageSize / 2 ) {\n      currentRating = ratingCount;\n    } else if ( value < -ratingCount * imageSize / 2 ) {\n      currentRating = this.props.minValue ? this.props.minValue : 0;\n    } else if ( value <= imageSize || value > imageSize ) {\n      const diff = value / imageSize\n\n      currentRating = startingValue + diff;\n      currentRating = fractions ? Number( currentRating.toFixed( fractions ) ) : Math.ceil( currentRating );\n    } else {\n      currentRating = fractions ? Number( startingValue.toFixed( fractions ) ) : Math.ceil( startingValue );\n    }\n    if (\n      this.props.jumpValue > 0 &&\n      this.props.jumpValue < this.props.ratingCount\n    ) {\n      return (\n        Math.ceil( currentRating * ( 1 / this.props.jumpValue ) ) /\n        ( 1 / this.props.jumpValue )\n      );\n    } else {\n      return currentRating;\n    }\n  }\n\n  // eslint-disable-next-line max-statements\n  setCurrentRating( rating ) {\n    const { imageSize, ratingCount } = this.props;\n\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // Differently here avoids confusion with `value` below.\n    const initialRating = ratingCount / 2;\n\n    let value = null;\n\n    if ( rating > ratingCount ) {\n      value = ratingCount * imageSize / 2;\n    } else if ( rating < 0 ) {\n      value = -ratingCount * imageSize / 2;\n    } else if ( rating < ratingCount / 2 || rating > ratingCount / 2 ) {\n      value = ( rating - initialRating ) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n\n    newPosition.setValue( { x: value, y: 0 } );\n    if ( this.state.isComponentMounted ) {\n      this.setState( {position: newPosition, value} );\n    }\n  }\n\n  displayCurrentRating() {\n    const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\n    const color = ratingTextColor || TYPES[type].color;\n\n    return (\n      <View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating:{' '}</Text>\n          <Text style={[styles.currentRatingText, { color }]}>{this.getCurrentRating( this.state.value )}</Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>{readonly && showReadOnlyText && <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}</View>\n      </View>\n    );\n  }\n\n  render() {\n    const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n\n    if ( type === 'custom' ) {\n      const custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n\n      TYPES.custom = custom;\n    }\n\n    return (\n      this.state.display ?\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n            <View style={styles.starsInsideWrapper} onLayout={e => {\n              this.handleLayoutChange( e )\n            }} ref={view => {\n              this.ratingRef = view;\n            }}>\n            <Animated.View style={this.getPrimaryViewStyle()} />\n            <Animated.View style={this.getSecondaryViewStyle()} />\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n      null\n    );\n  }\n\n  componentWillUnmount() {\n    this.setState( { isComponentMounted: false } );\n  }\n\n}\n\nconst styles = StyleSheet.create( {\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n} );\n\nconst fractionsType = ( props, propName, componentName ) => {\n  if ( props[propName] ) {\n    const value = props[propName];\n\n    if ( typeof value === 'number' ) {\n      return value >= 0 && value <= 20 ?\n        null :\n        new Error( `\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20` );\n    }\n\n    return new Error( `\\`${propName}\\` in \\`${componentName}\\` must be a number` );\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: PropTypes.node,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: PropTypes.object,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}