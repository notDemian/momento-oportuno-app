{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { AppearanceProvider, useColorScheme } from 'react-native-appearance';\nimport RootNavigation from \"./src/components/routes/RootNavigation\";\nimport CartProvider from \"./src/components/common/CartProvider\";\nimport ThemeContext from \"./src/context/theme-context\";\nimport AuthProvider from \"./src/components/common/AuthProvider/AuthProvider\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AppReviewConfig } from \"./src/constants\";\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar USES_UNTIL_SHOW = AppReviewConfig.USES_UNTIL_SHOW;\nvar rootViewflex = 1;\nvar App = function App() {\n  var appState = React.useRef(AppState.currentState);\n  var _React$useState = React.useState(appState.current),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    appStateVisible = _React$useState2[0],\n    setAppStateVisible = _React$useState2[1];\n  var scheme = useColorScheme();\n  var _React$useState3 = React.useState('dark'),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    currentTheme = _React$useState4[0],\n    setCurrentTheme = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    useSystemTheme = _React$useState6[0],\n    setUseSystemTheme = _React$useState6[1];\n  React.useEffect(function () {\n    AppState.addEventListener('change', _handleAppStateChange);\n    return function () {\n      AppState.removeEventListener('change', _handleAppStateChange);\n    };\n  }, []);\n  var _handleAppStateChange = function _handleAppStateChange(nextAppState) {\n    appState.current = nextAppState;\n    setAppStateVisible(appState.current);\n  };\n  React.useEffect(function () {\n    if (appStateVisible !== 'active') {\n      return;\n    }\n    var handleGetUsesUntilShowAppReview = function handleGetUsesUntilShowAppReview() {\n      var usesUntilShowAppReview, totalUses;\n      return _regeneratorRuntime.async(function handleGetUsesUntilShowAppReview$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(USES_UNTIL_SHOW));\n            case 2:\n              usesUntilShowAppReview = _context.sent;\n              if (usesUntilShowAppReview) {\n                _context.next = 6;\n                break;\n              }\n              AsyncStorage.setItem(USES_UNTIL_SHOW, '1');\n              return _context.abrupt(\"return\");\n            case 6:\n              totalUses = parseInt(usesUntilShowAppReview, 10) + 1;\n              AsyncStorage.setItem(USES_UNTIL_SHOW, totalUses.toString());\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n    handleGetUsesUntilShowAppReview();\n  }, [appStateVisible]);\n  React.useEffect(function () {\n    if (useSystemTheme) {\n      setCurrentTheme(scheme);\n    }\n  }, [scheme, useSystemTheme]);\n  var _setTheme = React.useCallback(function (theme) {\n    setCurrentTheme(theme);\n  }, []);\n  return _jsx(GestureHandlerRootView, {\n    style: {\n      flex: rootViewflex\n    },\n    children: _jsx(AppearanceProvider, {\n      children: _jsx(ThemeContext.Provider, {\n        value: {\n          theme: currentTheme,\n          useSystemTheme: useSystemTheme,\n          setTheme: _setTheme,\n          setUseSystemTheme: setUseSystemTheme\n        },\n        children: _jsx(AuthProvider, {\n          children: _jsx(CartProvider, {\n            children: _jsx(RootNavigation, {})\n          })\n        })\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","AppearanceProvider","useColorScheme","RootNavigation","CartProvider","ThemeContext","AuthProvider","AsyncStorage","AppReviewConfig","GestureHandlerRootView","USES_UNTIL_SHOW","rootViewflex","App","appState","useRef","AppState","currentState","useState","current","appStateVisible","setAppStateVisible","scheme","currentTheme","setCurrentTheme","useSystemTheme","setUseSystemTheme","useEffect","addEventListener","_handleAppStateChange","removeEventListener","nextAppState","handleGetUsesUntilShowAppReview","getItem","usesUntilShowAppReview","setItem","totalUses","parseInt","toString","_setTheme","useCallback","theme","flex","setTheme"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/App.tsx"],"sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * Generated with the TypeScript template\n * https://github.com/react-native-community/react-native-template-typescript\n *\n * @format\n */\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport {AppState, AppStateStatus} from 'react-native';\nimport {\n  AppearanceProvider,\n  useColorScheme,\n  ColorSchemeName,\n} from 'react-native-appearance';\nimport RootNavigation from '@src/components/routes/RootNavigation';\nimport CartProvider from '@src/components/common/CartProvider';\nimport ThemeContext from '@src/context/theme-context';\nimport AuthProvider from '@src/components/common/AuthProvider/AuthProvider';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {AppReviewConfig} from '@src/constants';\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\n\nconst {USES_UNTIL_SHOW} = AppReviewConfig;\nconst rootViewflex = 1;\n\nconst App = () => {\n  const appState = React.useRef(AppState.currentState);\n  const [appStateVisible, setAppStateVisible] = React.useState(\n    appState.current,\n  );\n  const scheme = useColorScheme();\n  const [currentTheme, setCurrentTheme] = React.useState('dark');\n  const [useSystemTheme, setUseSystemTheme] = React.useState(false);\n\n  React.useEffect(() => {\n    AppState.addEventListener('change', _handleAppStateChange);\n\n    return () => {\n      AppState.removeEventListener('change', _handleAppStateChange);\n    };\n  }, []);\n\n  const _handleAppStateChange = (nextAppState: AppStateStatus) => {\n    appState.current = nextAppState;\n    setAppStateVisible(appState.current);\n  };\n\n  React.useEffect(() => {\n    if (appStateVisible !== 'active') {\n      return;\n    }\n    const handleGetUsesUntilShowAppReview = async () => {\n      const usesUntilShowAppReview = await AsyncStorage.getItem(\n        USES_UNTIL_SHOW,\n      );\n      if (!usesUntilShowAppReview) {\n        AsyncStorage.setItem(USES_UNTIL_SHOW, '1');\n        return;\n      }\n      const totalUses = parseInt(usesUntilShowAppReview, 10) + 1;\n      AsyncStorage.setItem(USES_UNTIL_SHOW, totalUses.toString());\n    };\n    handleGetUsesUntilShowAppReview();\n  }, [appStateVisible]);\n\n  React.useEffect(() => {\n    if (useSystemTheme) {\n      setCurrentTheme(scheme);\n    }\n  }, [scheme, useSystemTheme]);\n\n  const _setTheme = React.useCallback((theme: ColorSchemeName) => {\n    setCurrentTheme(theme);\n  }, []);\n\n  return (\n    <GestureHandlerRootView style={{flex: rootViewflex}}>\n      <AppearanceProvider>\n        <ThemeContext.Provider\n          value={{\n            theme: currentTheme,\n            useSystemTheme,\n            setTheme: _setTheme,\n            setUseSystemTheme,\n          }}>\n          <AuthProvider>\n            <CartProvider>\n              <RootNavigation />\n            </CartProvider>\n          </AuthProvider>\n        </ThemeContext.Provider>\n      </AppearanceProvider>\n    </GestureHandlerRootView>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}