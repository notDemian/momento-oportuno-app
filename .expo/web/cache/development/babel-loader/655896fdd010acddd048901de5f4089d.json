{"ast":null,"code":"import * as React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport HomeStack from \"../Stacks/HomeStack\";\nimport AccountStack from \"../Stacks/AccountStack\";\nimport NotificationStack from \"../Stacks/NotificationStack\";\nimport ActivityHistoryStack from \"../Stacks/ActivityHistoryStack\";\nimport Documentation from \"../../screens/Documentation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Navigator = Tab.Navigator;\nvar renderTabBarIcon = function renderTabBarIcon(routeName) {\n  return function (props) {\n    var color = props.color;\n    var iconName = 'home';\n    switch (routeName) {\n      case 'Explore':\n        iconName = 'compass';\n        break;\n      case 'Activity':\n        iconName = 'history';\n        break;\n      case 'Notifications':\n        iconName = 'bell';\n        break;\n      case 'Account':\n        iconName = 'user';\n        break;\n      case 'Documentation':\n        iconName = 'book';\n        break;\n      default:\n        break;\n    }\n    return _jsx(Icon, {\n      name: iconName,\n      solid: true,\n      size: 24,\n      color: color\n    });\n  };\n};\nvar TabNavigation = function TabNavigation() {\n  return _jsxs(Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: function screenOptions(props) {\n      var routeName = props.route.name;\n      return {\n        headerShown: false,\n        tabBarIcon: renderTabBarIcon(routeName)\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Explore\",\n      component: HomeStack\n    }), _jsx(Tab.Screen, {\n      name: \"Activity\",\n      component: ActivityHistoryStack\n    }), _jsx(Tab.Screen, {\n      name: \"Notifications\",\n      component: NotificationStack\n    }), _jsx(Tab.Screen, {\n      name: \"Account\",\n      component: AccountStack\n    }), _jsx(Tab.Screen, {\n      name: \"Documentation\",\n      component: Documentation\n    })]\n  });\n};\nexport default TabNavigation;","map":{"version":3,"names":["React","createBottomTabNavigator","Icon","HomeStack","AccountStack","NotificationStack","ActivityHistoryStack","Documentation","Tab","Navigator","renderTabBarIcon","routeName","props","color","iconName","TabNavigation","route","name","headerShown","tabBarIcon"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/routes/TabNavigation/TabNavigation.tsx"],"sourcesContent":["import * as React from 'react';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\nimport HomeStack from '../Stacks/HomeStack';\nimport AccountStack from '../Stacks/AccountStack';\nimport NotificationStack from '../Stacks/NotificationStack';\nimport ActivityHistoryStack from '../Stacks/ActivityHistoryStack';\nimport Documentation from '@src/components/screens/Documentation';\n\ntype TabNavigationProps = {};\ntype TabBarIconProps = {\n  focused: boolean;\n  color: string;\n  size: number;\n};\nconst Tab = createBottomTabNavigator();\nconst {Navigator} = Tab;\n\nconst renderTabBarIcon = (routeName: string) => {\n  return (props: TabBarIconProps) => {\n    const {color} = props;\n    let iconName = 'home';\n    switch (routeName) {\n      case 'Explore':\n        iconName = 'compass';\n        break;\n      case 'Activity':\n        iconName = 'history';\n        break;\n      case 'Notifications':\n        iconName = 'bell';\n        break;\n      case 'Account':\n        iconName = 'user';\n        break;\n      case 'Documentation':\n        iconName = 'book';\n        break;\n      default:\n        break;\n    }\n    return <Icon name={iconName} solid size={24} color={color} />;\n  };\n};\n\nconst TabNavigation: React.FC<TabNavigationProps> = () => {\n  return (\n    <Navigator\n      initialRouteName=\"Home\"\n      screenOptions={(props) => {\n        const {\n          route: {name: routeName},\n        } = props;\n        return {\n          headerShown: false,\n          tabBarIcon: renderTabBarIcon(routeName),\n        };\n      }}>\n      <Tab.Screen name=\"Explore\" component={HomeStack} />\n      <Tab.Screen name=\"Activity\" component={ActivityHistoryStack} />\n      <Tab.Screen name=\"Notifications\" component={NotificationStack} />\n      <Tab.Screen name=\"Account\" component={AccountStack} />\n      <Tab.Screen name=\"Documentation\" component={Documentation} />\n    </Navigator>\n  );\n};\n\nexport default TabNavigation;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,wBAAwB,QAAO,+BAA+B;AACtE,OAAOC,IAAI;AACX,OAAOC,SAAS;AAChB,OAAOC,YAAY;AACnB,OAAOC,iBAAiB;AACxB,OAAOC,oBAAoB;AAC3B,OAAOC,aAAa;AAA8C;AAAA;AAQlE,IAAMC,GAAG,GAAGP,wBAAwB,EAAE;AACtC,IAAOQ,SAAS,GAAID,GAAG,CAAhBC,SAAS;AAEhB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,SAAiB,EAAK;EAC9C,OAAO,UAACC,KAAsB,EAAK;IACjC,IAAOC,KAAK,GAAID,KAAK,CAAdC,KAAK;IACZ,IAAIC,QAAQ,GAAG,MAAM;IACrB,QAAQH,SAAS;MACf,KAAK,SAAS;QACZG,QAAQ,GAAG,SAAS;QACpB;MACF,KAAK,UAAU;QACbA,QAAQ,GAAG,SAAS;QACpB;MACF,KAAK,eAAe;QAClBA,QAAQ,GAAG,MAAM;QACjB;MACF,KAAK,SAAS;QACZA,QAAQ,GAAG,MAAM;QACjB;MACF,KAAK,eAAe;QAClBA,QAAQ,GAAG,MAAM;QACjB;MACF;QACE;IAAM;IAEV,OAAO,KAAC,IAAI;MAAC,IAAI,EAAEA,QAAS;MAAC,KAAK;MAAC,IAAI,EAAE,EAAG;MAAC,KAAK,EAAED;IAAM,EAAG;EAC/D,CAAC;AACH,CAAC;AAED,IAAME,aAA2C,GAAG,SAA9CA,aAA2C,GAAS;EACxD,OACE,MAAC,SAAS;IACR,gBAAgB,EAAC,MAAM;IACvB,aAAa,EAAE,uBAACH,KAAK,EAAK;MACxB,IACgBD,SAAS,GACrBC,KAAK,CADPI,KAAK,CAAGC,IAAI;MAEd,OAAO;QACLC,WAAW,EAAE,KAAK;QAClBC,UAAU,EAAET,gBAAgB,CAACC,SAAS;MACxC,CAAC;IACH,CAAE;IAAA,WACF,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,SAAS;MAAC,SAAS,EAAER;IAAU,EAAG,EACnD,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,UAAU;MAAC,SAAS,EAAEG;IAAqB,EAAG,EAC/D,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,eAAe;MAAC,SAAS,EAAED;IAAkB,EAAG,EACjE,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,SAAS;MAAC,SAAS,EAAED;IAAa,EAAG,EACtD,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,eAAe;MAAC,SAAS,EAAEG;IAAc,EAAG;EAAA,EACnD;AAEhB,CAAC;AAED,eAAeQ,aAAa"},"metadata":{},"sourceType":"module"}