{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"rootStyle\", \"textInputStyle\", \"onBlur\", \"onFocus\", \"value\", \"renderCell\", \"cellCount\", \"RootProps\", \"RootComponent\"];\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as React from 'react';\nimport { getStyle, getSymbols } from \"./utils\";\nimport useFocusState from \"./useFocusState\";\nimport styles from \"./CodeField.styles\";\nvar DEFAULT_CELL_COUNT = 4;\nvar CodeField = function CodeField(_ref, ref) {\n  var rootStyle = _ref.rootStyle,\n    textInputStyle = _ref.textInputStyle,\n    onBlur = _ref.onBlur,\n    onFocus = _ref.onFocus,\n    value = _ref.value,\n    renderCell = _ref.renderCell,\n    _ref$cellCount = _ref.cellCount,\n    cellCount = _ref$cellCount === void 0 ? DEFAULT_CELL_COUNT : _ref$cellCount,\n    _ref$RootProps = _ref.RootProps,\n    RootProps = _ref$RootProps === void 0 ? {} : _ref$RootProps,\n    _ref$RootComponent = _ref.RootComponent,\n    RootComponent = _ref$RootComponent === void 0 ? View : _ref$RootComponent,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useFocusState = useFocusState({\n      onBlur: onBlur,\n      onFocus: onFocus\n    }),\n    _useFocusState2 = _slicedToArray(_useFocusState, 3),\n    isFocused = _useFocusState2[0],\n    handleOnBlur = _useFocusState2[1],\n    handleOnFocus = _useFocusState2[2];\n  var cells = getSymbols(value || '', cellCount).map(function (symbol, index, symbols) {\n    var isFirstEmptySymbol = symbols.indexOf('') === index;\n    return renderCell({\n      index: index,\n      symbol: symbol,\n      isFocused: isFocused && isFirstEmptySymbol\n    });\n  });\n  return React.createElement(RootComponent, _extends({}, RootProps, {\n    style: getStyle(styles.root, rootStyle)\n  }), cells, React.createElement(TextInput, _extends({\n    disableFullscreenUI: true,\n    caretHidden: true,\n    spellCheck: false,\n    autoCorrect: false,\n    blurOnSubmit: false,\n    clearButtonMode: 'never',\n    autoCapitalize: 'characters',\n    underlineColorAndroid: 'transparent',\n    maxLength: cellCount\n  }, rest, {\n    value: value,\n    onBlur: handleOnBlur,\n    onFocus: handleOnFocus,\n    style: getStyle(styles.textInput, textInputStyle),\n    ref: ref\n  })));\n};\nexport default React.forwardRef(CodeField);","map":{"version":3,"names":["React","getStyle","getSymbols","useFocusState","styles","DEFAULT_CELL_COUNT","CodeField","ref","rootStyle","textInputStyle","onBlur","onFocus","value","renderCell","cellCount","RootProps","RootComponent","View","rest","isFocused","handleOnBlur","handleOnFocus","cells","map","symbol","index","symbols","isFirstEmptySymbol","indexOf","createElement","style","root","TextInput","disableFullscreenUI","caretHidden","spellCheck","autoCorrect","blurOnSubmit","clearButtonMode","autoCapitalize","underlineColorAndroid","maxLength","textInput","forwardRef"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/node_modules/react-native-confirmation-code-field/esm/CodeField.js"],"sourcesContent":["import {TextInput, View} from 'react-native';\nimport * as React from 'react';\nimport {getStyle, getSymbols} from './utils';\nimport useFocusState from './useFocusState';\nimport styles from './CodeField.styles';\nconst DEFAULT_CELL_COUNT = 4;\nconst CodeField = (\n  {\n    rootStyle,\n    textInputStyle,\n    onBlur,\n    onFocus,\n    value,\n    renderCell,\n    cellCount = DEFAULT_CELL_COUNT,\n    RootProps = {},\n    RootComponent = View,\n    ...rest\n  },\n  ref,\n) => {\n  const [isFocused, handleOnBlur, handleOnFocus] = useFocusState({\n    onBlur,\n    onFocus,\n  });\n  const cells = getSymbols(value || '', cellCount).map(\n    (symbol, index, symbols) => {\n      const isFirstEmptySymbol = symbols.indexOf('') === index;\n      return renderCell({\n        index,\n        symbol,\n        isFocused: isFocused && isFirstEmptySymbol,\n      });\n    },\n  );\n  return React.createElement(\n    RootComponent,\n    Object.assign({}, RootProps, {style: getStyle(styles.root, rootStyle)}),\n    cells,\n    React.createElement(\n      TextInput,\n      Object.assign(\n        {\n          disableFullscreenUI: true,\n          // Use `caretHidden={false}` when `value={''}` and user can't paste\\copy text because menu doesn't appear\n          // See more: https://github.com/retyui/react-native-confirmation-code-field/issues/140\n          caretHidden: true,\n          spellCheck: false,\n          autoCorrect: false,\n          blurOnSubmit: false,\n          clearButtonMode: 'never',\n          autoCapitalize: 'characters',\n          underlineColorAndroid: 'transparent',\n          maxLength: cellCount,\n        },\n        rest,\n        {\n          value: value,\n          onBlur: handleOnBlur,\n          onFocus: handleOnFocus,\n          style: getStyle(styles.textInput, textInputStyle),\n          ref: ref,\n        },\n      ),\n    ),\n  );\n};\nexport default React.forwardRef(CodeField);\n"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,QAAQ,EAAEC,UAAU;AAC5B,OAAOC,aAAa;AACpB,OAAOC,MAAM;AACb,IAAMC,kBAAkB,GAAG,CAAC;AAC5B,IAAMC,SAAS,GAAG,SAAZA,SAAS,OAabC,GAAG,EACA;EAAA,IAZDC,SAAS,QAATA,SAAS;IACTC,cAAc,QAAdA,cAAc;IACdC,MAAM,QAANA,MAAM;IACNC,OAAO,QAAPA,OAAO;IACPC,KAAK,QAALA,KAAK;IACLC,UAAU,QAAVA,UAAU;IAAA,sBACVC,SAAS;IAATA,SAAS,+BAAGT,kBAAkB;IAAA,sBAC9BU,SAAS;IAATA,SAAS,+BAAG,CAAC,CAAC;IAAA,0BACdC,aAAa;IAAbA,aAAa,mCAAGC,IAAI;IACjBC,IAAI;EAIT,qBAAiDf,aAAa,CAAC;MAC7DO,MAAM,EAANA,MAAM;MACNC,OAAO,EAAPA;IACF,CAAC,CAAC;IAAA;IAHKQ,SAAS;IAAEC,YAAY;IAAEC,aAAa;EAI7C,IAAMC,KAAK,GAAGpB,UAAU,CAACU,KAAK,IAAI,EAAE,EAAEE,SAAS,CAAC,CAACS,GAAG,CAClD,UAACC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAK;IAC1B,IAAMC,kBAAkB,GAAGD,OAAO,CAACE,OAAO,CAAC,EAAE,CAAC,KAAKH,KAAK;IACxD,OAAOZ,UAAU,CAAC;MAChBY,KAAK,EAALA,KAAK;MACLD,MAAM,EAANA,MAAM;MACNL,SAAS,EAAEA,SAAS,IAAIQ;IAC1B,CAAC,CAAC;EACJ,CAAC,CACF;EACD,OAAO3B,KAAK,CAAC6B,aAAa,CACxBb,aAAa,EACb,SAAc,CAAC,CAAC,EAAED,SAAS,EAAE;IAACe,KAAK,EAAE7B,QAAQ,CAACG,MAAM,CAAC2B,IAAI,EAAEvB,SAAS;EAAC,CAAC,CAAC,EACvEc,KAAK,EACLtB,KAAK,CAAC6B,aAAa,CACjBG,SAAS,EACT,SACE;IACEC,mBAAmB,EAAE,IAAI;IAGzBC,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE,KAAK;IAClBC,YAAY,EAAE,KAAK;IACnBC,eAAe,EAAE,OAAO;IACxBC,cAAc,EAAE,YAAY;IAC5BC,qBAAqB,EAAE,aAAa;IACpCC,SAAS,EAAE3B;EACb,CAAC,EACDI,IAAI,EACJ;IACEN,KAAK,EAAEA,KAAK;IACZF,MAAM,EAAEU,YAAY;IACpBT,OAAO,EAAEU,aAAa;IACtBS,KAAK,EAAE7B,QAAQ,CAACG,MAAM,CAACsC,SAAS,EAAEjC,cAAc,CAAC;IACjDF,GAAG,EAAEA;EACP,CAAC,CACF,CACF,CACF;AACH,CAAC;AACD,eAAeP,KAAK,CAAC2C,UAAU,CAACrC,SAAS,CAAC"},"metadata":{},"sourceType":"module"}