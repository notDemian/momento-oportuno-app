{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { useFocusEffect, useScrollToTop } from '@react-navigation/native';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport { SearchBar, LoadingIndicator } from \"../../elements\";\nimport PopularPlaces from \"./PopularPlaces\";\nimport RecommendedPlaces from \"./RecommendedPlaces\";\nimport MerchantCampaigns from \"./MerchantCampaigns\";\nimport PopularCategories from \"./PopularCategories\";\nimport HotDeals from \"./HotDeals\";\nimport RemarkablePlaces from \"./RemarkablePlaces\";\nimport AppReviewModal from \"../../common/AppReviewModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Home = function Home() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isNavigationTransitionFinished = _React$useState2[0],\n    setIsNavigationTransitionFinished = _React$useState2[1];\n  var scrollViewRef = React.useRef(null);\n  useScrollToTop(scrollViewRef);\n  useFocusEffect(React.useCallback(function () {\n    var task = InteractionManager.runAfterInteractions(function () {\n      setIsNavigationTransitionFinished(true);\n    });\n    return function () {\n      return task.cancel();\n    };\n  }, []));\n  return _jsxs(SafeAreaView, {\n    children: [_jsxs(ScrollView, {\n      ref: scrollViewRef,\n      stickyHeaderIndices: [0],\n      children: [_jsx(SearchBar, {\n        placeholder: \"Find places, dishes, restaurants...\"\n      }), _jsx(PopularCategories, {}), isNavigationTransitionFinished ? _jsxs(_Fragment, {\n        children: [_jsx(PopularPlaces, {}), _jsx(MerchantCampaigns, {}), _jsx(RecommendedPlaces, {}), _jsx(HotDeals, {}), _jsx(RemarkablePlaces, {})]\n      }) : _jsx(LoadingIndicator, {\n        size: \"large\",\n        hasMargin: true\n      })]\n    }), _jsx(AppReviewModal, {\n      daysBeforeReminding: 1\n    })]\n  });\n};\nexport default Home;","map":{"version":3,"names":["React","useFocusEffect","useScrollToTop","SearchBar","LoadingIndicator","PopularPlaces","RecommendedPlaces","MerchantCampaigns","PopularCategories","HotDeals","RemarkablePlaces","AppReviewModal","Home","useState","isNavigationTransitionFinished","setIsNavigationTransitionFinished","scrollViewRef","useRef","useCallback","task","InteractionManager","runAfterInteractions","cancel"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/screens/Home/Home.tsx"],"sourcesContent":["import * as React from 'react';\nimport {useFocusEffect, useScrollToTop} from '@react-navigation/native';\nimport {ScrollView, SafeAreaView, InteractionManager} from 'react-native';\nimport {SearchBar, LoadingIndicator} from '@src/components/elements';\nimport PopularPlaces from './PopularPlaces';\nimport RecommendedPlaces from './RecommendedPlaces';\nimport MerchantCampaigns from './MerchantCampaigns';\nimport PopularCategories from './PopularCategories';\nimport HotDeals from './HotDeals';\nimport RemarkablePlaces from './RemarkablePlaces';\nimport AppReviewModal from '@src/components/common/AppReviewModal';\n\ntype HomeProps = {};\n\nconst Home: React.FC<HomeProps> = () => {\n  const [isNavigationTransitionFinished, setIsNavigationTransitionFinished] =\n    React.useState(false);\n  const scrollViewRef = React.useRef(null);\n\n  useScrollToTop(scrollViewRef);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      const task = InteractionManager.runAfterInteractions(() => {\n        setIsNavigationTransitionFinished(true);\n      });\n      return () => task.cancel();\n    }, []),\n  );\n\n  return (\n    <SafeAreaView>\n      <ScrollView ref={scrollViewRef} stickyHeaderIndices={[0]}>\n        <SearchBar placeholder=\"Find places, dishes, restaurants...\" />\n        <PopularCategories />\n        {isNavigationTransitionFinished ? (\n          <>\n            <PopularPlaces />\n            <MerchantCampaigns />\n            <RecommendedPlaces />\n            <HotDeals />\n            <RemarkablePlaces />\n          </>\n        ) : (\n          <LoadingIndicator size=\"large\" hasMargin />\n        )}\n      </ScrollView>\n      <AppReviewModal daysBeforeReminding={1} />\n    </SafeAreaView>\n  );\n};\n\nexport default Home;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,cAAc,EAAEC,cAAc,QAAO,0BAA0B;AAAC;AAAA;AAAA;AAExE,SAAQC,SAAS,EAAEC,gBAAgB;AACnC,OAAOC,aAAa;AACpB,OAAOC,iBAAiB;AACxB,OAAOC,iBAAiB;AACxB,OAAOC,iBAAiB;AACxB,OAAOC,QAAQ;AACf,OAAOC,gBAAgB;AACvB,OAAOC,cAAc;AAA8C;AAAA;AAAA;AAInE,IAAMC,IAAyB,GAAG,SAA5BA,IAAyB,GAAS;EACtC,sBACEZ,KAAK,CAACa,QAAQ,CAAC,KAAK,CAAC;IAAA;IADhBC,8BAA8B;IAAEC,iCAAiC;EAExE,IAAMC,aAAa,GAAGhB,KAAK,CAACiB,MAAM,CAAC,IAAI,CAAC;EAExCf,cAAc,CAACc,aAAa,CAAC;EAE7Bf,cAAc,CACZD,KAAK,CAACkB,WAAW,CAAC,YAAM;IACtB,IAAMC,IAAI,GAAGC,kBAAkB,CAACC,oBAAoB,CAAC,YAAM;MACzDN,iCAAiC,CAAC,IAAI,CAAC;IACzC,CAAC,CAAC;IACF,OAAO;MAAA,OAAMI,IAAI,CAACG,MAAM,EAAE;IAAA;EAC5B,CAAC,EAAE,EAAE,CAAC,CACP;EAED,OACE,MAAC,YAAY;IAAA,WACX,MAAC,UAAU;MAAC,GAAG,EAAEN,aAAc;MAAC,mBAAmB,EAAE,CAAC,CAAC,CAAE;MAAA,WACvD,KAAC,SAAS;QAAC,WAAW,EAAC;MAAqC,EAAG,EAC/D,KAAC,iBAAiB,KAAG,EACpBF,8BAA8B,GAC7B;QAAA,WACE,KAAC,aAAa,KAAG,EACjB,KAAC,iBAAiB,KAAG,EACrB,KAAC,iBAAiB,KAAG,EACrB,KAAC,QAAQ,KAAG,EACZ,KAAC,gBAAgB,KAAG;MAAA,EACnB,GAEH,KAAC,gBAAgB;QAAC,IAAI,EAAC,OAAO;QAAC,SAAS;MAAA,EACzC;IAAA,EACU,EACb,KAAC,cAAc;MAAC,mBAAmB,EAAE;IAAE,EAAG;EAAA,EAC7B;AAEnB,CAAC;AAED,eAAeF,IAAI"},"metadata":{},"sourceType":"module"}