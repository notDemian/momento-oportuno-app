{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.horizontalStackLayout = horizontalStackLayout;\nexports.useHorizontalStackLayout = useHorizontalStackLayout;\nexports.verticalStackLayout = verticalStackLayout;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = require(\"react\");\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _reactNativeReanimated = require(\"react-native-reanimated\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar screen = _reactNative.Dimensions.get(\"window\");\nfunction horizontalStackLayout() {\n  var modeConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function () {\n    var _f = function _f(_value) {\n      var showLength = modeConfig.showLength,\n        _modeConfig$snapDirec = modeConfig.snapDirection,\n        snapDirection = _modeConfig$snapDirec === void 0 ? \"left\" : _modeConfig$snapDirec,\n        _modeConfig$moveSize = modeConfig.moveSize,\n        moveSize = _modeConfig$moveSize === void 0 ? screen.width : _modeConfig$moveSize,\n        _modeConfig$stackInte = modeConfig.stackInterval,\n        stackInterval = _modeConfig$stackInte === void 0 ? 18 : _modeConfig$stackInte,\n        _modeConfig$scaleInte = modeConfig.scaleInterval,\n        scaleInterval = _modeConfig$scaleInte === void 0 ? 0.04 : _modeConfig$scaleInte,\n        _modeConfig$opacityIn = modeConfig.opacityInterval,\n        opacityInterval = _modeConfig$opacityIn === void 0 ? 0.1 : _modeConfig$opacityIn,\n        _modeConfig$rotateZDe = modeConfig.rotateZDeg,\n        rotateZDeg = _modeConfig$rotateZDe === void 0 ? 30 : _modeConfig$rotateZDe;\n      var transform = [];\n      var _getCommonVariables = getCommonVariables({\n          showLength: showLength,\n          value: _value,\n          snapDirection: snapDirection\n        }),\n        validLength = _getCommonVariables.validLength,\n        value = _getCommonVariables.value,\n        inputRange = _getCommonVariables.inputRange;\n      var _getCommonStyles = getCommonStyles({\n          validLength: validLength,\n          value: value,\n          opacityInterval: opacityInterval,\n          snapDirection: snapDirection\n        }),\n        zIndex = _getCommonStyles.zIndex,\n        opacity = _getCommonStyles.opacity;\n      var styles = {\n        transform: transform,\n        zIndex: zIndex,\n        opacity: opacity\n      };\n      var translateX;\n      var scale;\n      var rotateZ;\n      if (snapDirection === \"left\") {\n        translateX = (0, _reactNativeReanimated.interpolate)(value, inputRange, [-moveSize, 0, validLength * stackInterval], _reactNativeReanimated.Extrapolate.CLAMP);\n        scale = (0, _reactNativeReanimated.interpolate)(value, inputRange, [1, 1, 1 - validLength * scaleInterval], _reactNativeReanimated.Extrapolate.CLAMP);\n        rotateZ = (0, _reactNativeReanimated.interpolate)(value, inputRange, [-rotateZDeg, 0, 0], _reactNativeReanimated.Extrapolate.CLAMP) + \"deg\";\n      } else if (snapDirection === \"right\") {\n        translateX = (0, _reactNativeReanimated.interpolate)(value, inputRange, [-validLength * stackInterval, 0, moveSize], _reactNativeReanimated.Extrapolate.CLAMP);\n        scale = (0, _reactNativeReanimated.interpolate)(value, inputRange, [1 - validLength * scaleInterval, 1, 1], _reactNativeReanimated.Extrapolate.CLAMP);\n        rotateZ = (0, _reactNativeReanimated.interpolate)(value, inputRange, [0, 0, rotateZDeg], _reactNativeReanimated.Extrapolate.CLAMP) + \"deg\";\n      }\n      transform.push({\n        translateX: translateX\n      }, {\n        scale: scale\n      }, {\n        rotateZ: rotateZ\n      });\n      return styles;\n    };\n    _f._closure = {\n      screen: {\n        width: screen.width\n      },\n      modeConfig: modeConfig,\n      getCommonVariables: getCommonVariables,\n      getCommonStyles: getCommonStyles,\n      interpolate: _reactNativeReanimated.interpolate,\n      Extrapolate: {\n        CLAMP: _reactNativeReanimated.Extrapolate.CLAMP\n      }\n    };\n    _f.asString = \"function _f(_value){const{screen,modeConfig,getCommonVariables,getCommonStyles,interpolate,Extrapolate}=jsThis._closure;{const{showLength:showLength,snapDirection=\\\"left\\\",moveSize=screen.width,stackInterval=18,scaleInterval=0.04,opacityInterval=0.1,rotateZDeg=30}=modeConfig;const transform=[];const{validLength:validLength,value:value,inputRange:inputRange}=getCommonVariables({showLength:showLength,value:_value,snapDirection:snapDirection});const{zIndex:zIndex,opacity:opacity}=getCommonStyles({validLength:validLength,value:value,opacityInterval:opacityInterval,snapDirection:snapDirection});const styles={transform:transform,zIndex:zIndex,opacity:opacity};let translateX;let scale;let rotateZ;if(snapDirection===\\\"left\\\"){translateX=interpolate(value,inputRange,[-moveSize,0,validLength*stackInterval],Extrapolate.CLAMP);scale=interpolate(value,inputRange,[1,1,1-validLength*scaleInterval],Extrapolate.CLAMP);rotateZ=interpolate(value,inputRange,[-rotateZDeg,0,0],Extrapolate.CLAMP)+\\\"deg\\\";}else if(snapDirection===\\\"right\\\"){translateX=interpolate(value,inputRange,[-validLength*stackInterval,0,moveSize],Extrapolate.CLAMP);scale=interpolate(value,inputRange,[1-validLength*scaleInterval,1,1],Extrapolate.CLAMP);rotateZ=interpolate(value,inputRange,[0,0,rotateZDeg],Extrapolate.CLAMP)+\\\"deg\\\";}transform.push({translateX:translateX},{scale:scale},{rotateZ:rotateZ});return styles;}}\";\n    _f.__workletHash = 1281660142034;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/layouts/stack.ts (39:9)\";\n    return _f;\n  }();\n}\nfunction useHorizontalStackLayout() {\n  var customAnimationConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var customConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var config = (0, _react.useMemo)(function () {\n    return _objectSpread({\n      type: customAnimationConfig.snapDirection === \"right\" ? \"negative\" : \"positive\",\n      viewCount: customAnimationConfig.showLength\n    }, customConfig);\n  }, [customAnimationConfig, customConfig]);\n  return {\n    layout: horizontalStackLayout(customAnimationConfig),\n    config: config\n  };\n}\nfunction verticalStackLayout() {\n  var modeConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function () {\n    var _f = function _f(_value) {\n      var showLength = modeConfig.showLength,\n        _modeConfig$snapDirec2 = modeConfig.snapDirection,\n        snapDirection = _modeConfig$snapDirec2 === void 0 ? \"left\" : _modeConfig$snapDirec2,\n        _modeConfig$moveSize2 = modeConfig.moveSize,\n        moveSize = _modeConfig$moveSize2 === void 0 ? screen.width : _modeConfig$moveSize2,\n        _modeConfig$stackInte2 = modeConfig.stackInterval,\n        stackInterval = _modeConfig$stackInte2 === void 0 ? 18 : _modeConfig$stackInte2,\n        _modeConfig$scaleInte2 = modeConfig.scaleInterval,\n        scaleInterval = _modeConfig$scaleInte2 === void 0 ? 0.04 : _modeConfig$scaleInte2,\n        _modeConfig$opacityIn2 = modeConfig.opacityInterval,\n        opacityInterval = _modeConfig$opacityIn2 === void 0 ? 0.1 : _modeConfig$opacityIn2,\n        _modeConfig$rotateZDe2 = modeConfig.rotateZDeg,\n        rotateZDeg = _modeConfig$rotateZDe2 === void 0 ? 30 : _modeConfig$rotateZDe2;\n      var transform = [];\n      var _getCommonVariables2 = getCommonVariables({\n          showLength: showLength,\n          value: _value,\n          snapDirection: snapDirection\n        }),\n        validLength = _getCommonVariables2.validLength,\n        value = _getCommonVariables2.value,\n        inputRange = _getCommonVariables2.inputRange;\n      var _getCommonStyles2 = getCommonStyles({\n          validLength: validLength,\n          value: value,\n          opacityInterval: opacityInterval,\n          snapDirection: snapDirection\n        }),\n        zIndex = _getCommonStyles2.zIndex,\n        opacity = _getCommonStyles2.opacity;\n      var styles = {\n        transform: transform,\n        zIndex: zIndex,\n        opacity: opacity\n      };\n      var translateX;\n      var scale;\n      var rotateZ;\n      var translateY;\n      if (snapDirection === \"left\") {\n        translateX = (0, _reactNativeReanimated.interpolate)(value, inputRange, [-moveSize, 0, 0], _reactNativeReanimated.Extrapolate.CLAMP);\n        scale = (0, _reactNativeReanimated.interpolate)(value, inputRange, [1, 1, 1 - validLength * scaleInterval], _reactNativeReanimated.Extrapolate.CLAMP);\n        rotateZ = (0, _reactNativeReanimated.interpolate)(value, inputRange, [-rotateZDeg, 0, 0], _reactNativeReanimated.Extrapolate.CLAMP) + \"deg\";\n        translateY = (0, _reactNativeReanimated.interpolate)(value, inputRange, [0, 0, validLength * stackInterval], _reactNativeReanimated.Extrapolate.CLAMP);\n      } else if (snapDirection === \"right\") {\n        translateX = (0, _reactNativeReanimated.interpolate)(value, inputRange, [0, 0, moveSize], _reactNativeReanimated.Extrapolate.CLAMP);\n        scale = (0, _reactNativeReanimated.interpolate)(value, inputRange, [1 - validLength * scaleInterval, 1, 1], _reactNativeReanimated.Extrapolate.CLAMP);\n        rotateZ = (0, _reactNativeReanimated.interpolate)(value, inputRange, [0, 0, rotateZDeg], _reactNativeReanimated.Extrapolate.CLAMP) + \"deg\";\n        translateY = (0, _reactNativeReanimated.interpolate)(value, inputRange, [validLength * stackInterval, 0, 0], _reactNativeReanimated.Extrapolate.CLAMP);\n      }\n      transform.push({\n        translateX: translateX\n      }, {\n        scale: scale\n      }, {\n        rotateZ: rotateZ\n      }, {\n        translateY: translateY\n      });\n      return styles;\n    };\n    _f._closure = {\n      screen: {\n        width: screen.width\n      },\n      modeConfig: modeConfig,\n      getCommonVariables: getCommonVariables,\n      getCommonStyles: getCommonStyles,\n      interpolate: _reactNativeReanimated.interpolate,\n      Extrapolate: {\n        CLAMP: _reactNativeReanimated.Extrapolate.CLAMP\n      }\n    };\n    _f.asString = \"function _f(_value){const{screen,modeConfig,getCommonVariables,getCommonStyles,interpolate,Extrapolate}=jsThis._closure;{const{showLength:showLength,snapDirection=\\\"left\\\",moveSize=screen.width,stackInterval=18,scaleInterval=0.04,opacityInterval=0.1,rotateZDeg=30}=modeConfig;const transform=[];const{validLength:validLength,value:value,inputRange:inputRange}=getCommonVariables({showLength:showLength,value:_value,snapDirection:snapDirection});const{zIndex:zIndex,opacity:opacity}=getCommonStyles({validLength:validLength,value:value,opacityInterval:opacityInterval,snapDirection:snapDirection});const styles={transform:transform,zIndex:zIndex,opacity:opacity};let translateX;let scale;let rotateZ;let translateY;if(snapDirection===\\\"left\\\"){translateX=interpolate(value,inputRange,[-moveSize,0,0],Extrapolate.CLAMP);scale=interpolate(value,inputRange,[1,1,1-validLength*scaleInterval],Extrapolate.CLAMP);rotateZ=interpolate(value,inputRange,[-rotateZDeg,0,0],Extrapolate.CLAMP)+\\\"deg\\\";translateY=interpolate(value,inputRange,[0,0,validLength*stackInterval],Extrapolate.CLAMP);}else if(snapDirection===\\\"right\\\"){translateX=interpolate(value,inputRange,[0,0,moveSize],Extrapolate.CLAMP);scale=interpolate(value,inputRange,[1-validLength*scaleInterval,1,1],Extrapolate.CLAMP);rotateZ=interpolate(value,inputRange,[0,0,rotateZDeg],Extrapolate.CLAMP)+\\\"deg\\\";translateY=interpolate(value,inputRange,[validLength*stackInterval,0,0],Extrapolate.CLAMP);}transform.push({translateX:translateX},{scale:scale},{rotateZ:rotateZ},{translateY:translateY});return styles;}}\";\n    _f.__workletHash = 8891397395670;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/layouts/stack.ts (155:9)\";\n    return _f;\n  }();\n}\nvar getCommonVariables = function () {\n  var _f = function _f(opts) {\n    var showLength = opts.showLength,\n      _value = opts.value,\n      snapDirection = opts.snapDirection;\n    function easeInOutCubic(v) {\n      return v < 0.5 ? 4 * v * v * v : 1 - Math.pow(-2 * v + 2, 3) / 2;\n    }\n    var page = Math.floor(Math.abs(_value));\n    var diff = Math.abs(_value) % 1;\n    var value = _value < 0 ? -(page + easeInOutCubic(diff)) : page + easeInOutCubic(diff);\n    var validLength = showLength - 1;\n    var inputRange;\n    if (snapDirection === \"left\") inputRange = [-1, 0, validLength];else if (snapDirection === \"right\") inputRange = [-validLength, 0, 1];else throw new Error(\"snapDirection must be set to either left or right\");\n    return {\n      inputRange: inputRange,\n      validLength: validLength,\n      value: value\n    };\n  };\n  _f._closure = {};\n  _f.asString = \"function getCommonVariables(opts){const{showLength:showLength,value:_value,snapDirection:snapDirection}=opts;function easeInOutCubic(v){return v<0.5?4*v*v*v:1-(-2*v+2)**3/2;}const page=Math.floor(Math.abs(_value));const diff=Math.abs(_value)%1;const value=_value<0?-(page+easeInOutCubic(diff)):page+easeInOutCubic(diff);const validLength=showLength-1;let inputRange;if(snapDirection===\\\"left\\\")inputRange=[-1,0,validLength];else if(snapDirection===\\\"right\\\")inputRange=[-validLength,0,1];else throw new Error(\\\"snapDirection must be set to either left or right\\\");return{inputRange:inputRange,validLength:validLength,value:value};}\";\n  _f.__workletHash = 6212413287432;\n  _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/layouts/stack.ts (263:0)\";\n  return _f;\n}();\nvar getCommonStyles = function () {\n  var _f = function _f(opts) {\n    var snapDirection = opts.snapDirection,\n      validLength = opts.validLength,\n      value = opts.value,\n      opacityInterval = opts.opacityInterval;\n    var zIndex;\n    var opacity;\n    if (snapDirection === \"left\") {\n      zIndex = Math.floor((0, _reactNativeReanimated.interpolate)(value, [-1.5, -1, -1 + Number.MIN_VALUE, 0, validLength], [Number.MIN_VALUE, validLength, validLength, validLength - 1, -1]) * 10000) / 100;\n      opacity = (0, _reactNativeReanimated.interpolate)(value, [-1, 0, validLength - 1, validLength], [0.25, 1, 1 - (validLength - 1) * opacityInterval, 0.25]);\n    } else if (snapDirection === \"right\") {\n      zIndex = Math.floor((0, _reactNativeReanimated.interpolate)(value, [-validLength, 0, 1 - Number.MIN_VALUE, 1, 1.5], [1, validLength - 1, validLength, validLength, Number.MIN_VALUE]) * 10000) / 100;\n      opacity = (0, _reactNativeReanimated.interpolate)(value, [-validLength, 1 - validLength, 0, 1], [0.25, 1 - (validLength - 1) * opacityInterval, 1, 0.25]);\n    } else {\n      throw new Error(\"snapDirection must be set to either left or right\");\n    }\n    return {\n      zIndex: zIndex,\n      opacity: opacity\n    };\n  };\n  _f._closure = {\n    interpolate: _reactNativeReanimated.interpolate\n  };\n  _f.asString = \"function getCommonStyles(opts){const{interpolate}=jsThis._closure;{const{snapDirection:snapDirection,validLength:validLength,value:value,opacityInterval:opacityInterval}=opts;let zIndex;let opacity;if(snapDirection===\\\"left\\\"){zIndex=Math.floor(interpolate(value,[-1.5,-1,-1+Number.MIN_VALUE,0,validLength],[Number.MIN_VALUE,validLength,validLength,validLength-1,-1])*10000)/100;opacity=interpolate(value,[-1,0,validLength-1,validLength],[0.25,1,1-(validLength-1)*opacityInterval,0.25]);}else if(snapDirection===\\\"right\\\"){zIndex=Math.floor(interpolate(value,[-validLength,0,1-Number.MIN_VALUE,1,1.5],[1,validLength-1,validLength,validLength,Number.MIN_VALUE])*10000)/100;opacity=interpolate(value,[-validLength,1-validLength,0,1],[0.25,1-(validLength-1)*opacityInterval,1,0.25]);}else{throw new Error(\\\"snapDirection must be set to either left or right\\\");}return{zIndex:zIndex,opacity:opacity};}}\";\n  _f.__workletHash = 12739032600542;\n  _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/layouts/stack.ts (298:0)\";\n  return _f;\n}();","map":{"version":3,"names":["_react","require","_reactNative","_reactNativeReanimated","screen","Dimensions","get","horizontalStackLayout","modeConfig","arguments","length","undefined","_f","_value","showLength","_modeConfig$snapDirec","snapDirection","_modeConfig$moveSize","moveSize","width","_modeConfig$stackInte","stackInterval","_modeConfig$scaleInte","scaleInterval","_modeConfig$opacityIn","opacityInterval","_modeConfig$rotateZDe","rotateZDeg","transform","_getCommonVariables","getCommonVariables","value","validLength","inputRange","_getCommonStyles","getCommonStyles","zIndex","opacity","styles","translateX","scale","rotateZ","interpolate","Extrapolate","CLAMP","push","_closure","asString","__workletHash","__location","useHorizontalStackLayout","customAnimationConfig","customConfig","config","useMemo","_objectSpread","type","viewCount","layout","verticalStackLayout","_modeConfig$snapDirec2","_modeConfig$moveSize2","_modeConfig$stackInte2","_modeConfig$scaleInte2","_modeConfig$opacityIn2","_modeConfig$rotateZDe2","_getCommonVariables2","_getCommonStyles2","translateY","opts","easeInOutCubic","v","Math","pow","page","floor","abs","diff","Error","Number","MIN_VALUE"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/node_modules/react-native-reanimated-carousel/lib/commonjs/layouts/stack.ts"],"sourcesContent":["import { useMemo } from \"react\";\nimport type { TransformsStyle, ViewStyle } from \"react-native\";\nimport { Dimensions } from \"react-native\";\nimport { Extrapolate, interpolate } from \"react-native-reanimated\";\n\nimport type { IComputedDirectionTypes, CustomConfig } from \"../types\";\n\nconst screen = Dimensions.get(\"window\");\n\nexport interface ILayoutConfig {\n  showLength?: number\n  moveSize?: number\n  stackInterval?: number\n  scaleInterval?: number\n  opacityInterval?: number\n  rotateZDeg?: number\n  snapDirection?: \"left\" | \"right\"\n}\n\nexport type TStackModeProps = IComputedDirectionTypes<{\n  /**\n     * Carousel Animated transitions.\n     */\n  mode?: \"horizontal-stack\" | \"vertical-stack\"\n  /**\n     * Stack animation style.\n     * @default\n     *     mode: 'vertical',\n     *     snapDirection: 'right',\n     *     moveSize: window.width,\n     *     stackInterval: 30,\n     *     scaleInterval: 0.08,\n     *     rotateZDeg: 135,\n     */\n  modeConfig?: ILayoutConfig\n}>;\n\nexport function horizontalStackLayout(modeConfig: ILayoutConfig = {}) {\n  return (_value: number) => {\n    \"worklet\";\n\n    const {\n      showLength,\n      snapDirection = \"left\",\n      moveSize = screen.width,\n      stackInterval = 18,\n      scaleInterval = 0.04,\n      opacityInterval = 0.1,\n      rotateZDeg = 30,\n    } = modeConfig;\n\n    const transform: TransformsStyle[\"transform\"] = [];\n    const { validLength, value, inputRange } = getCommonVariables({\n      showLength: showLength!,\n      value: _value,\n      snapDirection,\n    });\n    const { zIndex, opacity } = getCommonStyles({\n      validLength,\n      value,\n      opacityInterval,\n      snapDirection,\n    });\n\n    const styles: ViewStyle = {\n      transform,\n      zIndex,\n      opacity,\n    };\n\n    let translateX: number;\n    let scale: number;\n    let rotateZ: string;\n\n    if (snapDirection === \"left\") {\n      translateX = interpolate(\n        value,\n        inputRange,\n        [-moveSize, 0, validLength * stackInterval],\n        Extrapolate.CLAMP,\n      );\n      scale = interpolate(\n        value,\n        inputRange,\n        [1, 1, 1 - validLength * scaleInterval],\n        Extrapolate.CLAMP,\n      );\n      rotateZ = `${interpolate(\n        value,\n        inputRange,\n        [-rotateZDeg, 0, 0],\n        Extrapolate.CLAMP,\n      )}deg`;\n    }\n    else if (snapDirection === \"right\") {\n      translateX = interpolate(\n        value,\n        inputRange,\n        [-validLength * stackInterval, 0, moveSize],\n        Extrapolate.CLAMP,\n      );\n      scale = interpolate(\n        value,\n        inputRange,\n        [1 - validLength * scaleInterval, 1, 1],\n        Extrapolate.CLAMP,\n      );\n      rotateZ = `${interpolate(\n        value,\n        inputRange,\n        [0, 0, rotateZDeg],\n        Extrapolate.CLAMP,\n      )}deg`;\n    }\n\n    transform.push(\n      {\n        translateX: translateX!,\n      },\n      {\n        scale: scale!,\n      },\n      {\n        rotateZ: rotateZ!,\n      },\n    );\n\n    return styles;\n  };\n}\n\nexport function useHorizontalStackLayout(\n  customAnimationConfig: ILayoutConfig = {},\n  customConfig: CustomConfig = {},\n) {\n  const config = useMemo(\n    () => ({\n      type:\n                customAnimationConfig.snapDirection === \"right\"\n                  ? \"negative\"\n                  : \"positive\",\n      viewCount: customAnimationConfig.showLength,\n      ...customConfig,\n    }),\n    [customAnimationConfig, customConfig],\n  );\n\n  return {\n    layout: horizontalStackLayout(customAnimationConfig),\n    config,\n  };\n}\n\nexport function verticalStackLayout(modeConfig: ILayoutConfig = {}) {\n  return (_value: number) => {\n    \"worklet\";\n\n    const {\n      showLength,\n      snapDirection = \"left\",\n      moveSize = screen.width,\n      stackInterval = 18,\n      scaleInterval = 0.04,\n      opacityInterval = 0.1,\n      rotateZDeg = 30,\n    } = modeConfig;\n    const transform: TransformsStyle[\"transform\"] = [];\n    const { validLength, value, inputRange } = getCommonVariables({\n      showLength: showLength!,\n      value: _value,\n      snapDirection,\n    });\n    const { zIndex, opacity } = getCommonStyles({\n      validLength,\n      value,\n      opacityInterval,\n      snapDirection,\n    });\n\n    const styles: ViewStyle = {\n      transform,\n      zIndex,\n      opacity,\n    };\n\n    let translateX: number;\n    let scale: number;\n    let rotateZ: string;\n    let translateY: number;\n\n    if (snapDirection === \"left\") {\n      translateX = interpolate(\n        value,\n        inputRange,\n        [-moveSize, 0, 0],\n        Extrapolate.CLAMP,\n      );\n      scale = interpolate(\n        value,\n        inputRange,\n        [1, 1, 1 - validLength * scaleInterval],\n        Extrapolate.CLAMP,\n      );\n      rotateZ = `${interpolate(\n        value,\n        inputRange,\n        [-rotateZDeg, 0, 0],\n        Extrapolate.CLAMP,\n      )}deg`;\n      translateY = interpolate(\n        value,\n        inputRange,\n        [0, 0, validLength * stackInterval],\n        Extrapolate.CLAMP,\n      );\n    }\n    else if (snapDirection === \"right\") {\n      translateX = interpolate(\n        value,\n        inputRange,\n        [0, 0, moveSize],\n        Extrapolate.CLAMP,\n      );\n      scale = interpolate(\n        value,\n        inputRange,\n        [1 - validLength * scaleInterval, 1, 1],\n        Extrapolate.CLAMP,\n      );\n      rotateZ = `${interpolate(\n        value,\n        inputRange,\n        [0, 0, rotateZDeg],\n        Extrapolate.CLAMP,\n      )}deg`;\n      translateY = interpolate(\n        value,\n        inputRange,\n        [validLength * stackInterval, 0, 0],\n        Extrapolate.CLAMP,\n      );\n    }\n\n    transform.push(\n      {\n        translateX: translateX!,\n      },\n      {\n        scale: scale!,\n      },\n      {\n        rotateZ: rotateZ!,\n      },\n      {\n        translateY: translateY!,\n      },\n    );\n\n    return styles;\n  };\n}\n\nfunction getCommonVariables(opts: {\n  value: number\n  showLength: number\n  snapDirection: \"left\" | \"right\"\n}) {\n  \"worklet\";\n\n  const { showLength, value: _value, snapDirection } = opts;\n  function easeInOutCubic(v: number): number {\n    return v < 0.5 ? 4 * v * v * v : 1 - (-2 * v + 2) ** 3 / 2;\n  }\n  const page = Math.floor(Math.abs(_value));\n  const diff = Math.abs(_value) % 1;\n  const value\n        = _value < 0\n          ? -(page + easeInOutCubic(diff))\n          : page + easeInOutCubic(diff);\n  const validLength = showLength! - 1;\n\n  let inputRange: [number, number, number];\n\n  if (snapDirection === \"left\")\n    inputRange = [-1, 0, validLength];\n  else if (snapDirection === \"right\")\n    inputRange = [-validLength, 0, 1];\n  else\n    throw new Error(\"snapDirection must be set to either left or right\");\n\n  return {\n    inputRange,\n    validLength,\n    value,\n  };\n}\n\nfunction getCommonStyles(opts: {\n  value: number\n  validLength: number\n  opacityInterval: number\n  snapDirection: \"left\" | \"right\"\n}) {\n  \"worklet\";\n\n  const { snapDirection, validLength, value, opacityInterval } = opts;\n\n  let zIndex: number;\n  let opacity: number;\n\n  if (snapDirection === \"left\") {\n    zIndex\n            = Math.floor(\n        interpolate(\n          value,\n          [-1.5, -1, -1 + Number.MIN_VALUE, 0, validLength],\n          [\n            Number.MIN_VALUE,\n            validLength,\n            validLength,\n            validLength - 1,\n            -1,\n          ],\n        ) * 10000,\n      ) / 100;\n\n    opacity = interpolate(\n      value,\n      [-1, 0, validLength - 1, validLength],\n      [0.25, 1, 1 - (validLength - 1) * opacityInterval, 0.25],\n    );\n  }\n  else if (snapDirection === \"right\") {\n    zIndex\n            = Math.floor(\n        interpolate(\n          value,\n          [-validLength, 0, 1 - Number.MIN_VALUE, 1, 1.5],\n          [\n            1,\n            validLength - 1,\n            validLength,\n            validLength,\n            Number.MIN_VALUE,\n          ],\n        ) * 10000,\n      ) / 100;\n    opacity = interpolate(\n      value,\n      [-validLength, 1 - validLength, 0, 1],\n      [0.25, 1 - (validLength - 1) * opacityInterval, 1, 0.25],\n    );\n  }\n  else {\n    throw new Error(\"snapDirection must be set to either left or right\");\n  }\n\n  return {\n    zIndex,\n    opacity,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}