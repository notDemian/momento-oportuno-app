{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"hasMargin\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport useThemeColors from \"../../../custom-hooks/useThemeColors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LoadingIndicator = function LoadingIndicator(_ref) {\n  var hasMargin = _ref.hasMargin,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useThemeColors = useThemeColors(),\n    primary = _useThemeColors.primary;\n  var margin = 0;\n  if (hasMargin) {\n    margin = 15;\n  }\n  return _jsx(ActivityIndicator, _objectSpread(_objectSpread({\n    color: primary\n  }, rest), {}, {\n    style: {\n      margin: margin\n    }\n  }));\n};\nexport default LoadingIndicator;","map":{"version":3,"names":["React","useThemeColors","LoadingIndicator","hasMargin","rest","primary","margin"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/elements/LoadingIndicator/LoadingIndicator.tsx"],"sourcesContent":["import * as React from 'react';\nimport {ActivityIndicator, ActivityIndicatorProps} from 'react-native';\nimport useThemeColors from '@src/custom-hooks/useThemeColors';\n\ntype LoadingIndicatorProps = {\n  hasMargin?: boolean;\n} & ActivityIndicatorProps;\n\nconst LoadingIndicator: React.FC<LoadingIndicatorProps> = ({\n  hasMargin,\n  ...rest\n}) => {\n  const {primary} = useThemeColors();\n  let margin = 0;\n  if (hasMargin) {\n    margin = 15;\n  }\n  return (\n    <ActivityIndicator\n      color={primary}\n      {...rest}\n      style={{\n        margin,\n      }}\n    />\n  );\n};\nexport default LoadingIndicator;\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAE/B,OAAOC,cAAc;AAAyC;AAM9D,IAAMC,gBAAiD,GAAG,SAApDA,gBAAiD,OAGjD;EAAA,IAFJC,SAAS,QAATA,SAAS;IACNC,IAAI;EAEP,sBAAkBH,cAAc,EAAE;IAA3BI,OAAO,mBAAPA,OAAO;EACd,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIH,SAAS,EAAE;IACbG,MAAM,GAAG,EAAE;EACb;EACA,OACE,KAAC,iBAAiB;IAChB,KAAK,EAAED;EAAQ,GACXD,IAAI;IACR,KAAK,EAAE;MACLE,MAAM,EAANA;IACF;EAAE,GACF;AAEN,CAAC;AACD,eAAeJ,gBAAgB"},"metadata":{},"sourceType":"module"}