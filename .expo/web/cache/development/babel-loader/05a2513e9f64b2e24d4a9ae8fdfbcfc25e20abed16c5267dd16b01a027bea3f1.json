{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.omitZero = exports.computeNewIndexWhenDataChanges = void 0;\nvar omitZero = function () {\n  var _f = function _f(a, b) {\n    if (a === 0) return 0;\n    return b;\n  };\n  _f._closure = {};\n  _f.asString = \"function omitZero(a,b){if(a===0)return 0;return b;}\";\n  _f.__workletHash = 5890945945056;\n  _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/hooks/computeNewIndexWhenDataChanges.ts (1:7)\";\n  return _f;\n}();\nexports.omitZero = omitZero;\nvar computeNewIndexWhenDataChanges = function () {\n  var _f = function _f(params) {\n    var direction = params.direction,\n      _handlerOffset = params.handlerOffset,\n      size = params.size,\n      previousLength = params.previousLength,\n      currentLength = params.currentLength;\n    var handlerOffset = _handlerOffset;\n    var positionIndex;\n    var round;\n    var isPositive = direction < 0;\n    if (isPositive) {\n      positionIndex = Math.abs(handlerOffset) / size;\n      round = parseInt(String(omitZero(previousLength, positionIndex / previousLength)));\n    } else {\n      positionIndex = (Math.abs(handlerOffset) - size) / size;\n      round = parseInt(String(omitZero(previousLength, positionIndex / previousLength))) + 1;\n    }\n    var prevOffset = omitZero(previousLength, positionIndex % previousLength);\n    var prevIndex = isPositive ? prevOffset : previousLength - prevOffset - 1;\n    var changedLength = round * (currentLength - previousLength);\n    var changedOffset = changedLength * size;\n    if (prevIndex > currentLength - 1 && currentLength < previousLength) {\n      if (isPositive) handlerOffset = (currentLength - 1) * size * direction;else handlerOffset = (currentLength - 1) * size * -1;\n    } else {\n      handlerOffset += changedOffset * direction;\n    }\n    return handlerOffset;\n  };\n  _f._closure = {\n    omitZero: omitZero\n  };\n  _f.asString = \"function computeNewIndexWhenDataChanges(params){const{omitZero}=jsThis._closure;{const{direction:direction,handlerOffset:_handlerOffset,size:size,previousLength:previousLength,currentLength:currentLength}=params;let handlerOffset=_handlerOffset;let positionIndex;let round;const isPositive=direction<0;if(isPositive){positionIndex=Math.abs(handlerOffset)/size;round=parseInt(String(omitZero(previousLength,positionIndex/previousLength)));}else{positionIndex=(Math.abs(handlerOffset)-size)/size;round=parseInt(String(omitZero(previousLength,positionIndex/previousLength)))+1;}const prevOffset=omitZero(previousLength,positionIndex%previousLength);const prevIndex=isPositive?prevOffset:previousLength-prevOffset-1;const changedLength=round*(currentLength-previousLength);const changedOffset=changedLength*size;if(prevIndex>currentLength-1&&currentLength<previousLength){if(isPositive)handlerOffset=(currentLength-1)*size*direction;else handlerOffset=(currentLength-1)*size*-1;}else{handlerOffset+=changedOffset*direction;}return handlerOffset;}}\";\n  _f.__workletHash = 10599245670129;\n  _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/hooks/computeNewIndexWhenDataChanges.ts (9:7)\";\n  return _f;\n}();\nexports.computeNewIndexWhenDataChanges = computeNewIndexWhenDataChanges;","map":{"version":3,"names":["omitZero","a","b","computeNewIndexWhenDataChanges","params","direction","_handlerOffset","handlerOffset","size","previousLength","currentLength","positionIndex","round","isPositive","Math","abs","parseInt","String","prevOffset","prevIndex","changedLength","changedOffset"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/node_modules/react-native-reanimated-carousel/lib/commonjs/hooks/computeNewIndexWhenDataChanges.ts"],"sourcesContent":["export function omitZero(a: number, b: number) {\n  \"worklet\";\n  if (a === 0)\n    return 0;\n\n  return b;\n}\n\nexport function computeNewIndexWhenDataChanges(params: {\n  direction: number\n  handlerOffset: number\n  size: number\n  previousLength: number\n  currentLength: number\n}) {\n  \"worklet\";\n  const { direction, handlerOffset: _handlerOffset, size, previousLength, currentLength } = params;\n\n  let handlerOffset = _handlerOffset;\n  let positionIndex;\n  let round;\n\n  const isPositive = direction < 0;\n\n  if (isPositive) {\n    positionIndex = (Math.abs(handlerOffset)) / size;\n    round = parseInt(String(omitZero(previousLength, positionIndex / previousLength)));\n  }\n  else {\n    positionIndex = (Math.abs(handlerOffset) - size) / size;\n    round = parseInt(String(omitZero(previousLength, positionIndex / previousLength))) + 1;\n  }\n\n  const prevOffset = omitZero(previousLength, positionIndex % previousLength);\n  const prevIndex = isPositive ? prevOffset : previousLength - prevOffset - 1;\n  const changedLength = round * (currentLength - previousLength);\n  const changedOffset = changedLength * size;\n  if (prevIndex > currentLength - 1 && currentLength < previousLength) {\n    if (isPositive)\n      handlerOffset = (currentLength - 1) * size * direction;\n\n    else\n      handlerOffset = (currentLength - 1) * size * -1;\n  }\n  else {\n    handlerOffset += changedOffset * direction;\n  }\n\n  return handlerOffset;\n}\n\n"],"mappings":";;;;IAAgBA,Q;uBAASC,C,EAAWC,C,EAAW;IAE7C,IAAID,CAAC,KAAK,CAAV,EACE,OAAO,CAAP;IAEF,OAAOC,CAAP;EACD,C;;;;;;;;IAEeC,8B;uBAA+BC,M,EAM5C;IAED,IAAQC,SAAR,GAA0FD,MAA1F,CAAQC,SAAR;MAAkCC,cAAlC,GAA0FF,MAA1F,CAAmBG,aAAnB;MAAkDC,IAAlD,GAA0FJ,MAA1F,CAAkDI,IAAlD;MAAwDC,cAAxD,GAA0FL,MAA1F,CAAwDK,cAAxD;MAAwEC,aAAxE,GAA0FN,MAA1F,CAAwEM,aAAxE;IAEA,IAAIH,aAAa,GAAGD,cAApB;IACA,IAAIK,aAAJ;IACA,IAAIC,KAAJ;IAEA,IAAMC,UAAU,GAAGR,SAAS,GAAG,CAA/B;IAEA,IAAIQ,UAAJ,EAAgB;MACdF,aAAa,GAAIG,IAAI,CAACC,GAAL,CAASR,aAAT,CAAD,GAA4BC,IAA5C;MACAI,KAAK,GAAGI,QAAQ,CAACC,MAAM,CAACjB,QAAQ,CAACS,cAAD,EAAiBE,aAAa,GAAGF,cAAjC,CAAT,CAAP,CAAhB;IACD,CAHD,MAIK;MACHE,aAAa,GAAG,CAACG,IAAI,CAACC,GAAL,CAASR,aAAT,IAA0BC,IAA3B,IAAmCA,IAAnD;MACAI,KAAK,GAAGI,QAAQ,CAACC,MAAM,CAACjB,QAAQ,CAACS,cAAD,EAAiBE,aAAa,GAAGF,cAAjC,CAAT,CAAP,CAAR,GAA6E,CAArF;IACD;IAED,IAAMS,UAAU,GAAGlB,QAAQ,CAACS,cAAD,EAAiBE,aAAa,GAAGF,cAAjC,CAA3B;IACA,IAAMU,SAAS,GAAGN,UAAU,GAAGK,UAAH,GAAgBT,cAAc,GAAGS,UAAjB,GAA8B,CAA1E;IACA,IAAME,aAAa,GAAGR,KAAK,IAAIF,aAAa,GAAGD,cAApB,CAA3B;IACA,IAAMY,aAAa,GAAGD,aAAa,GAAGZ,IAAtC;IACA,IAAIW,SAAS,GAAGT,aAAa,GAAG,CAA5B,IAAiCA,aAAa,GAAGD,cAArD,EAAqE;MACnE,IAAII,UAAJ,EACEN,aAAa,GAAG,CAACG,aAAa,GAAG,CAAjB,IAAsBF,IAAtB,GAA6BH,SAA7C,CADF,KAIEE,aAAa,GAAG,CAACG,aAAa,GAAG,CAAjB,IAAsBF,IAAtB,GAA6B,CAAC,CAA9C;IACH,CAND,MAOK;MACHD,aAAa,IAAIc,aAAa,GAAGhB,SAAjC;IACD;IAED,OAAOE,aAAP;EACD,C;;cArBoBP"},"metadata":{},"sourceType":"script","externalDependencies":[]}