{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport 'react-native-gesture-handler';\nimport React, { useContext } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport ThemeContext from \"../../context/theme-context\";\nimport TabNavigation from \"./TabNavigation\";\nimport DishDetails from \"../screens/DishDetails\";\nimport SearchDishes from \"../screens/SearchDishes\";\nimport AuthenticationStack from \"./Stacks/AuthenticationStack\";\nimport { lightTheme, darkTheme } from \"../../styles/theme\";\nimport AuthContext from \"../../context/auth-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RootStack = createStackNavigator();\nvar RootNavigation = function RootNavigation() {\n  var _useContext = useContext(ThemeContext),\n    theme = _useContext.theme;\n  var _useContext2 = useContext(AuthContext),\n    userToken = _useContext2.userToken;\n  var flex = 1;\n  var rootContainerBackgroundColor = theme === 'light' ? lightTheme.colors.background : darkTheme.colors.background;\n  var screenOptions = Platform.OS === 'ios' ? _objectSpread({}, TransitionPresets.ModalSlideFromBottomIOS) : _objectSpread({}, TransitionPresets.FadeFromBottomAndroid);\n  return _jsx(NavigationContainer, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    children: _jsxs(View, {\n      style: {\n        flex: flex,\n        backgroundColor: rootContainerBackgroundColor\n      },\n      children: [_jsx(StatusBar, {\n        backgroundColor: theme === 'light' ? lightTheme.colors.background : darkTheme.colors.background,\n        barStyle: theme === 'light' ? 'dark-content' : 'light-content'\n      }), _jsxs(RootStack.Navigator, {\n        screenOptions: _objectSpread(_objectSpread({}, screenOptions), {}, {\n          presentation: 'modal'\n        }),\n        children: [userToken ? _jsx(RootStack.Screen, {\n          name: \"Main\",\n          options: {\n            headerShown: false\n          },\n          component: TabNavigation\n        }) : _jsx(RootStack.Screen, {\n          options: {\n            headerTransparent: true,\n            headerStatusBarHeight: 0,\n            title: '',\n            headerBackTitleVisible: false\n          },\n          name: \"Auth\",\n          component: AuthenticationStack\n        }), _jsx(RootStack.Screen, {\n          options: {\n            headerTransparent: true,\n            title: '',\n            headerBackTitleVisible: false\n          },\n          name: \"DishDetailsModal\",\n          component: DishDetails\n        }), _jsx(RootStack.Screen, {\n          options: {\n            headerShown: false,\n            cardOverlayEnabled: true,\n            cardStyleInterpolator: function cardStyleInterpolator(_ref) {\n              var progress = _ref.current.progress;\n              return {\n                cardStyle: {\n                  opacity: progress.interpolate({\n                    inputRange: [0, 0.5, 0.9, 1],\n                    outputRange: [0, 0.25, 0.7, 1]\n                  })\n                },\n                overlayStyle: {\n                  opacity: progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 0.5],\n                    extrapolate: 'clamp'\n                  })\n                }\n              };\n            }\n          },\n          name: \"SearchDishesModal\",\n          component: SearchDishes\n        })]\n      })]\n    })\n  });\n};\nexport default RootNavigation;","map":{"version":3,"names":["React","useContext","NavigationContainer","createStackNavigator","TransitionPresets","ThemeContext","TabNavigation","DishDetails","SearchDishes","AuthenticationStack","lightTheme","darkTheme","AuthContext","RootStack","RootNavigation","theme","userToken","flex","rootContainerBackgroundColor","colors","background","screenOptions","Platform","OS","ModalSlideFromBottomIOS","FadeFromBottomAndroid","backgroundColor","presentation","headerShown","headerTransparent","headerStatusBarHeight","title","headerBackTitleVisible","cardOverlayEnabled","cardStyleInterpolator","progress","current","cardStyle","opacity","interpolate","inputRange","outputRange","overlayStyle","extrapolate"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/routes/RootNavigation.tsx"],"sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * Generated with the TypeScript template\n * https://github.com/react-native-community/react-native-template-typescript\n *\n * @format\n */\n\nimport 'react-native-gesture-handler';\nimport React, {useContext} from 'react';\nimport {StatusBar, View, Platform} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator, TransitionPresets} from '@react-navigation/stack';\nimport ThemeContext from '@src/context/theme-context';\nimport TabNavigation from '@src/components/routes/TabNavigation';\nimport DishDetails from '@src/components/screens/DishDetails';\nimport SearchDishes from '@src/components/screens/SearchDishes';\nimport AuthenticationStack from '@src/components/routes/Stacks/AuthenticationStack';\nimport {lightTheme, darkTheme} from '@src/styles/theme';\nimport AuthContext from '@src/context/auth-context';\n\nconst RootStack = createStackNavigator();\n\nconst RootNavigation = () => {\n  const {theme} = useContext(ThemeContext);\n  const {userToken} = useContext(AuthContext);\n  const flex = 1;\n  const rootContainerBackgroundColor =\n    theme === 'light'\n      ? lightTheme.colors.background\n      : darkTheme.colors.background;\n  const screenOptions =\n    Platform.OS === 'ios'\n      ? {\n          ...TransitionPresets.ModalSlideFromBottomIOS,\n        }\n      : {\n          ...TransitionPresets.FadeFromBottomAndroid,\n        };\n\n  return (\n    <NavigationContainer theme={theme === 'light' ? lightTheme : darkTheme}>\n      <View style={{flex, backgroundColor: rootContainerBackgroundColor}}>\n        <StatusBar\n          backgroundColor={\n            theme === 'light'\n              ? lightTheme.colors.background\n              : darkTheme.colors.background\n          }\n          barStyle={theme === 'light' ? 'dark-content' : 'light-content'}\n        />\n        <RootStack.Navigator\n          screenOptions={{\n            ...screenOptions,\n            presentation: 'modal',\n          }}>\n          {userToken ? (\n            <RootStack.Screen\n              name=\"Main\"\n              options={{headerShown: false}}\n              component={TabNavigation}\n            />\n          ) : (\n            <RootStack.Screen\n              options={{\n                headerTransparent: true,\n                headerStatusBarHeight: 0,\n                title: '',\n                headerBackTitleVisible: false,\n              }}\n              name=\"Auth\"\n              component={AuthenticationStack}\n            />\n          )}\n          <RootStack.Screen\n            options={{\n              headerTransparent: true,\n              title: '',\n              headerBackTitleVisible: false,\n            }}\n            name=\"DishDetailsModal\"\n            component={DishDetails}\n          />\n          <RootStack.Screen\n            options={{\n              headerShown: false,\n              cardOverlayEnabled: true,\n              cardStyleInterpolator: ({current: {progress}}) => ({\n                cardStyle: {\n                  opacity: progress.interpolate({\n                    inputRange: [0, 0.5, 0.9, 1],\n                    outputRange: [0, 0.25, 0.7, 1],\n                  }),\n                },\n                overlayStyle: {\n                  opacity: progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 0.5],\n                    extrapolate: 'clamp',\n                  }),\n                },\n              }),\n            }}\n            name=\"SearchDishesModal\"\n            component={SearchDishes}\n          />\n        </RootStack.Navigator>\n      </View>\n    </NavigationContainer>\n  );\n};\n\nexport default RootNavigation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}