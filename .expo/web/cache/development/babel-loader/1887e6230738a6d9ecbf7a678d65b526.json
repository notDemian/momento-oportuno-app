{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTheme } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Container = function Container(_ref) {\n  var children = _ref.children,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useTheme = useTheme(),\n    card = _useTheme.colors.card;\n  return _jsx(View, _objectSpread(_objectSpread({\n    style: [{\n      backgroundColor: card\n    }, style]\n  }, rest), {}, {\n    children: children\n  }));\n};\nexport default Container;","map":{"version":3,"names":["React","useTheme","Container","children","style","rest","card","colors","backgroundColor"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/elements/Container/Container.tsx"],"sourcesContent":["import * as React from 'react';\nimport {View, ViewProps} from 'react-native';\nimport {useTheme} from '@react-navigation/native';\n\ninterface OwnProps {\n  children?: React.ReactNode;\n}\n\ntype ContainerProps = OwnProps & ViewProps;\n\nconst Container: React.FC<ContainerProps> = ({children, style, ...rest}) => {\n  const {\n    colors: {card},\n  } = useTheme();\n  return (\n    <View style={[{backgroundColor: card}, style]} {...rest}>\n      {children}\n    </View>\n  );\n};\n\nexport default Container;\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAE/B,SAAQC,QAAQ,QAAO,0BAA0B;AAAC;AAQlD,IAAMC,SAAmC,GAAG,SAAtCA,SAAmC,OAAmC;EAAA,IAA9BC,QAAQ,QAARA,QAAQ;IAAEC,KAAK,QAALA,KAAK;IAAKC,IAAI;EACpE,gBAEIJ,QAAQ,EAAE;IADHK,IAAI,aAAbC,MAAM,CAAGD,IAAI;EAEf,OACE,KAAC,IAAI;IAAC,KAAK,EAAE,CAAC;MAACE,eAAe,EAAEF;IAAI,CAAC,EAAEF,KAAK;EAAE,GAAKC,IAAI;IAAA,UACpDF;EAAQ,GACJ;AAEX,CAAC;AAED,eAAeD,SAAS"},"metadata":{},"sourceType":"module"}