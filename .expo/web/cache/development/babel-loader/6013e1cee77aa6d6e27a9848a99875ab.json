{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { Section, Icon, Divider } from \"../../../elements\";\nimport ListRowItem from \"../../../elements/List/ListRowItem\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LinkedAccounts = function LinkedAccounts() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isGoogleAccountLinked = _React$useState2[0],\n    setIsGoogleAccountLinked = _React$useState2[1];\n  var _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isFacebookAccountLinked = _React$useState4[0],\n    setIsFacebookAccountLinked = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isAppleAccountLinked = _React$useState6[0],\n    setIsAppleAccountLinked = _React$useState6[1];\n  return _jsxs(Section, {\n    title: \"Linked Accounts\",\n    children: [_jsx(ListRowItem, {\n      title: \"Google\",\n      leftIcon: _jsx(Icon, {\n        name: \"google\",\n        size: 18\n      }),\n      rightIcon: _jsx(Switch, {\n        value: isGoogleAccountLinked,\n        onValueChange: function onValueChange(value) {\n          return setIsGoogleAccountLinked(value);\n        }\n      })\n    }), _jsx(Divider, {}), _jsx(ListRowItem, {\n      title: \"Facebook\",\n      leftIcon: _jsx(Icon, {\n        name: \"facebook\",\n        size: 18\n      }),\n      rightIcon: _jsx(Switch, {\n        value: isFacebookAccountLinked,\n        onValueChange: function onValueChange(value) {\n          return setIsFacebookAccountLinked(value);\n        }\n      })\n    }), _jsx(Divider, {}), _jsx(ListRowItem, {\n      title: \"Apple\",\n      leftIcon: _jsx(Icon, {\n        name: \"apple\",\n        size: 18\n      }),\n      rightIcon: _jsx(Switch, {\n        value: isAppleAccountLinked,\n        onValueChange: function onValueChange(value) {\n          return setIsAppleAccountLinked(value);\n        }\n      })\n    })]\n  });\n};\nexport default LinkedAccounts;","map":{"version":3,"names":["React","Section","Icon","Divider","ListRowItem","LinkedAccounts","useState","isGoogleAccountLinked","setIsGoogleAccountLinked","isFacebookAccountLinked","setIsFacebookAccountLinked","isAppleAccountLinked","setIsAppleAccountLinked","value"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/screens/EditProfile/LinkedAccounts/LinkedAccounts.tsx"],"sourcesContent":["import * as React from 'react';\nimport {Section, Icon, Divider} from '@src/components/elements';\nimport ListRowItem from '@src/components/elements/List/ListRowItem';\nimport {Switch} from 'react-native';\n\ntype LinkedAccountsProps = {};\n\nconst LinkedAccounts: React.FC<LinkedAccountsProps> = () => {\n  const [isGoogleAccountLinked, setIsGoogleAccountLinked] =\n    React.useState(false);\n  const [isFacebookAccountLinked, setIsFacebookAccountLinked] =\n    React.useState(true);\n  const [isAppleAccountLinked, setIsAppleAccountLinked] = React.useState(false);\n\n  return (\n    <Section title=\"Linked Accounts\">\n      <ListRowItem\n        title=\"Google\"\n        leftIcon={<Icon name=\"google\" size={18} />}\n        rightIcon={\n          <Switch\n            value={isGoogleAccountLinked}\n            onValueChange={(value) => setIsGoogleAccountLinked(value)}\n          />\n        }\n      />\n      <Divider />\n      <ListRowItem\n        title=\"Facebook\"\n        leftIcon={<Icon name=\"facebook\" size={18} />}\n        rightIcon={\n          <Switch\n            value={isFacebookAccountLinked}\n            onValueChange={(value) => setIsFacebookAccountLinked(value)}\n          />\n        }\n      />\n      <Divider />\n      <ListRowItem\n        title=\"Apple\"\n        leftIcon={<Icon name=\"apple\" size={18} />}\n        rightIcon={\n          <Switch\n            value={isAppleAccountLinked}\n            onValueChange={(value) => setIsAppleAccountLinked(value)}\n          />\n        }\n      />\n    </Section>\n  );\n};\n\nexport default LinkedAccounts;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,OAAO,EAAEC,IAAI,EAAEC,OAAO;AAC9B,OAAOC,WAAW;AAAkD;AAAA;AAAA;AAKpE,IAAMC,cAA6C,GAAG,SAAhDA,cAA6C,GAAS;EAC1D,sBACEL,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC;IAAA;IADhBC,qBAAqB;IAAEC,wBAAwB;EAEtD,uBACER,KAAK,CAACM,QAAQ,CAAC,IAAI,CAAC;IAAA;IADfG,uBAAuB;IAAEC,0BAA0B;EAE1D,uBAAwDV,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtEK,oBAAoB;IAAEC,uBAAuB;EAEpD,OACE,MAAC,OAAO;IAAC,KAAK,EAAC,iBAAiB;IAAA,WAC9B,KAAC,WAAW;MACV,KAAK,EAAC,QAAQ;MACd,QAAQ,EAAE,KAAC,IAAI;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAE;MAAG,EAAI;MAC3C,SAAS,EACP,KAAC,MAAM;QACL,KAAK,EAAEL,qBAAsB;QAC7B,aAAa,EAAE,uBAACM,KAAK;UAAA,OAAKL,wBAAwB,CAACK,KAAK,CAAC;QAAA;MAAC;IAE7D,EACD,EACF,KAAC,OAAO,KAAG,EACX,KAAC,WAAW;MACV,KAAK,EAAC,UAAU;MAChB,QAAQ,EAAE,KAAC,IAAI;QAAC,IAAI,EAAC,UAAU;QAAC,IAAI,EAAE;MAAG,EAAI;MAC7C,SAAS,EACP,KAAC,MAAM;QACL,KAAK,EAAEJ,uBAAwB;QAC/B,aAAa,EAAE,uBAACI,KAAK;UAAA,OAAKH,0BAA0B,CAACG,KAAK,CAAC;QAAA;MAAC;IAE/D,EACD,EACF,KAAC,OAAO,KAAG,EACX,KAAC,WAAW;MACV,KAAK,EAAC,OAAO;MACb,QAAQ,EAAE,KAAC,IAAI;QAAC,IAAI,EAAC,OAAO;QAAC,IAAI,EAAE;MAAG,EAAI;MAC1C,SAAS,EACP,KAAC,MAAM;QACL,KAAK,EAAEF,oBAAqB;QAC5B,aAAa,EAAE,uBAACE,KAAK;UAAA,OAAKD,uBAAuB,CAACC,KAAK,CAAC;QAAA;MAAC;IAE5D,EACD;EAAA,EACM;AAEd,CAAC;AAED,eAAeR,cAAc"},"metadata":{},"sourceType":"module"}