{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollViewGesture = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\nvar _constants = require(\"./constants\");\nvar _store = require(\"./store\");\nvar _dealWithAnimation = require(\"./utils/dealWithAnimation\");\nvar _this = this,\n  _jsxFileName = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx\";\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar IScrollViewGesture = function IScrollViewGesture(props) {\n  var _React$useContext = _react.default.useContext(_store.CTX),\n    _React$useContext$pro = _React$useContext.props,\n    vertical = _React$useContext$pro.vertical,\n    pagingEnabled = _React$useContext$pro.pagingEnabled,\n    snapEnabled = _React$useContext$pro.snapEnabled,\n    panGestureHandlerProps = _React$useContext$pro.panGestureHandlerProps,\n    infinite = _React$useContext$pro.loop,\n    scrollAnimationDuration = _React$useContext$pro.scrollAnimationDuration,\n    withAnimation = _React$useContext$pro.withAnimation,\n    enabled = _React$useContext$pro.enabled,\n    dataLength = _React$useContext$pro.dataLength,\n    overscrollEnabled = _React$useContext$pro.overscrollEnabled;\n  var size = props.size,\n    translation = props.translation,\n    testID = props.testID,\n    _props$style = props.style,\n    style = _props$style === void 0 ? {} : _props$style,\n    onScrollBegin = props.onScrollBegin,\n    onScrollEnd = props.onScrollEnd,\n    onTouchBegin = props.onTouchBegin,\n    onTouchEnd = props.onTouchEnd;\n  var maxPage = dataLength;\n  var isHorizontal = (0, _reactNativeReanimated.useDerivedValue)(function () {\n    var _f = function _f() {\n      return !vertical;\n    };\n    _f._closure = {\n      vertical: vertical\n    };\n    _f.asString = \"function _f(){const{vertical}=jsThis._closure;{return!vertical;}}\";\n    _f.__workletHash = 14495821007639;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (70:39)\";\n    return _f;\n  }(), [vertical]);\n  var touching = (0, _reactNativeReanimated.useSharedValue)(false);\n  var scrollEndTranslation = (0, _reactNativeReanimated.useSharedValue)(0);\n  var scrollEndVelocity = (0, _reactNativeReanimated.useSharedValue)(0);\n  var containerRef = (0, _reactNativeReanimated.useAnimatedRef)();\n  var getLimit = _react.default.useCallback(function () {\n    var _f = function _f() {\n      if (!infinite && !overscrollEnabled) {\n        var _measure = (0, _reactNativeReanimated.measure)(containerRef),\n          _measure$width = _measure.width,\n          containerWidth = _measure$width === void 0 ? 0 : _measure$width;\n        if (dataLength * size < containerWidth) return 0;\n        return dataLength * size - containerWidth;\n      }\n      return dataLength * size;\n    };\n    _f._closure = {\n      infinite: infinite,\n      overscrollEnabled: overscrollEnabled,\n      measure: _reactNativeReanimated.measure,\n      containerRef: containerRef,\n      dataLength: dataLength,\n      size: size\n    };\n    _f.asString = \"function _f(){const{infinite,overscrollEnabled,measure,containerRef,dataLength,size}=jsThis._closure;{if(!infinite&&!overscrollEnabled){const{width:containerWidth=0}=measure(containerRef);if(dataLength*size<containerWidth)return 0;return dataLength*size-containerWidth;}return dataLength*size;}}\";\n    _f.__workletHash = 11841077662563;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (77:37)\";\n    return _f;\n  }(), [infinite, size, dataLength, overscrollEnabled]);\n  var withSpring = _react.default.useCallback(function () {\n    var _f = function _f(toValue, onFinished) {\n      var defaultWithAnimation = {\n        type: \"timing\",\n        config: {\n          duration: scrollAnimationDuration + 100,\n          easing: _constants.Easing.easeOutQuart\n        }\n      };\n      return (0, _dealWithAnimation.dealWithAnimation)(withAnimation != null ? withAnimation : defaultWithAnimation)(toValue, function () {\n        var _f = function _f(isFinished) {\n          if (isFinished) onFinished && (0, _reactNativeReanimated.runOnJS)(onFinished)();\n        };\n        _f._closure = {\n          onFinished: onFinished,\n          runOnJS: _reactNativeReanimated.runOnJS\n        };\n        _f.asString = \"function _f(isFinished){const{onFinished,runOnJS}=jsThis._closure;{if(isFinished)onFinished&&runOnJS(onFinished)();}}\";\n        _f.__workletHash = 3881957308013;\n        _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (107:8)\";\n        return _f;\n      }());\n    };\n    _f._closure = {\n      scrollAnimationDuration: scrollAnimationDuration,\n      Easing: {\n        easeOutQuart: _constants.Easing.easeOutQuart\n      },\n      dealWithAnimation: _dealWithAnimation.dealWithAnimation,\n      withAnimation: withAnimation,\n      runOnJS: _reactNativeReanimated.runOnJS\n    };\n    _f.asString = \"function _f(toValue,onFinished){const{scrollAnimationDuration,Easing,dealWithAnimation,withAnimation,runOnJS}=jsThis._closure;{var _withAnimation;const defaultWithAnimation={type:\\\"timing\\\",config:{duration:scrollAnimationDuration+100,easing:Easing.easeOutQuart}};return dealWithAnimation((_withAnimation=withAnimation)!==null&&_withAnimation!==void 0?_withAnimation:defaultWithAnimation)(toValue,function(isFinished){\\\"worklet\\\";if(isFinished)onFinished&&runOnJS(onFinished)();});}}\";\n    _f.__workletHash = 4492029393801;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (95:4)\";\n    return _f;\n  }(), [scrollAnimationDuration, withAnimation]);\n  var endWithSpring = _react.default.useCallback(function () {\n    var _f = function _f(onFinished) {\n      var origin = translation.value;\n      var velocity = scrollEndVelocity.value;\n      var finalTranslation = (0, _reactNativeReanimated.withDecay)({\n        velocity: velocity,\n        deceleration: 0.999\n      });\n      if (pagingEnabled) {\n        var offset = -(scrollEndTranslation.value >= 0 ? 1 : -1);\n        var computed = offset < 0 ? Math.ceil : Math.floor;\n        var page = computed(-translation.value / size);\n        if (infinite) {\n          var finalPage = page + offset;\n          finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n        } else {\n          var _finalPage = Math.min(maxPage - 1, Math.max(0, page + offset));\n          finalTranslation = withSpring(withProcessTranslation(-_finalPage * size), onFinished);\n        }\n      }\n      if (!pagingEnabled && snapEnabled) {\n        var nextPage = Math.round((origin + velocity * 0.4) / size) * size;\n        finalTranslation = withSpring(withProcessTranslation(nextPage), onFinished);\n      }\n      translation.value = finalTranslation;\n      function withProcessTranslation(translation) {\n        if (!infinite && !overscrollEnabled) {\n          var limit = getLimit();\n          var sign = Math.sign(translation);\n          return sign * Math.max(0, Math.min(limit, Math.abs(translation)));\n        }\n        return translation;\n      }\n    };\n    _f._closure = {\n      translation: translation,\n      scrollEndVelocity: scrollEndVelocity,\n      withDecay: _reactNativeReanimated.withDecay,\n      pagingEnabled: pagingEnabled,\n      scrollEndTranslation: scrollEndTranslation,\n      size: size,\n      infinite: infinite,\n      withSpring: withSpring,\n      maxPage: maxPage,\n      snapEnabled: snapEnabled,\n      overscrollEnabled: overscrollEnabled,\n      getLimit: getLimit\n    };\n    _f.asString = \"function _f(onFinished){const{translation,scrollEndVelocity,withDecay,pagingEnabled,scrollEndTranslation,size,infinite,withSpring,maxPage,snapEnabled,overscrollEnabled,getLimit}=jsThis._closure;{const origin=translation.value;const velocity=scrollEndVelocity.value;let finalTranslation=withDecay({velocity:velocity,deceleration:0.999});if(pagingEnabled){const offset=-(scrollEndTranslation.value>=0?1:-1);const computed=offset<0?Math.ceil:Math.floor;const page=computed(-translation.value/size);if(infinite){const finalPage=page+offset;finalTranslation=withSpring(withProcessTranslation(-finalPage*size),onFinished);}else{const finalPage=Math.min(maxPage-1,Math.max(0,page+offset));finalTranslation=withSpring(withProcessTranslation(-finalPage*size),onFinished);}}if(!pagingEnabled&&snapEnabled){const nextPage=Math.round((origin+velocity*0.4)/size)*size;finalTranslation=withSpring(withProcessTranslation(nextPage),onFinished);}translation.value=finalTranslation;function withProcessTranslation(translation){if(!infinite&&!overscrollEnabled){const limit=getLimit();const sign=Math.sign(translation);return sign*Math.max(0,Math.min(limit,Math.abs(translation)));}return translation;}}}\";\n    _f.__workletHash = 17058811688208;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (118:4)\";\n    return _f;\n  }(), [translation, scrollEndVelocity.value, pagingEnabled, size, scrollEndTranslation.value, infinite, withSpring, snapEnabled, maxPage]);\n  var onFinish = _react.default.useCallback(function () {\n    var _f = function _f(isFinished) {\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && (0, _reactNativeReanimated.runOnJS)(onScrollEnd)();\n      }\n    };\n    _f._closure = {\n      touching: touching,\n      onScrollEnd: onScrollEnd,\n      runOnJS: _reactNativeReanimated.runOnJS\n    };\n    _f.asString = \"function _f(isFinished){const{touching,onScrollEnd,runOnJS}=jsThis._closure;{if(isFinished){touching.value=false;onScrollEnd&&runOnJS(onScrollEnd)();}}}\";\n    _f.__workletHash = 12308424749737;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (180:4)\";\n    return _f;\n  }(), [onScrollEnd, touching]);\n  var activeDecay = _react.default.useCallback(function () {\n    var _f = function _f() {\n      touching.value = true;\n      translation.value = (0, _reactNativeReanimated.withDecay)({\n        velocity: scrollEndVelocity.value\n      }, function () {\n        var _f = function _f(isFinished) {\n          return onFinish(isFinished);\n        };\n        _f._closure = {\n          onFinish: onFinish\n        };\n        _f.asString = \"function _f(isFinished){const{onFinish}=jsThis._closure;{return onFinish(isFinished);}}\";\n        _f.__workletHash = 12004837605207;\n        _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (195:6)\";\n        return _f;\n      }());\n    };\n    _f._closure = {\n      touching: touching,\n      translation: translation,\n      withDecay: _reactNativeReanimated.withDecay,\n      scrollEndVelocity: scrollEndVelocity,\n      onFinish: onFinish\n    };\n    _f.asString = \"function _f(){const{touching,translation,withDecay,scrollEndVelocity,onFinish}=jsThis._closure;{touching.value=true;translation.value=withDecay({velocity:scrollEndVelocity.value},function(isFinished){return onFinish(isFinished);});}}\";\n    _f.__workletHash = 1701548878343;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (190:40)\";\n    return _f;\n  }(), [onFinish, scrollEndVelocity.value, touching, translation]);\n  var resetBoundary = _react.default.useCallback(function () {\n    var _f = function _f() {\n      if (touching.value) return;\n      if (translation.value > 0) {\n        if (scrollEndTranslation.value < 0) {\n          activeDecay();\n          return;\n        }\n        if (!infinite) {\n          translation.value = withSpring(0);\n          return;\n        }\n      }\n      if (translation.value < -((maxPage - 1) * size)) {\n        if (scrollEndTranslation.value > 0) {\n          activeDecay();\n          return;\n        }\n        if (!infinite) translation.value = withSpring(-((maxPage - 1) * size));\n      }\n    };\n    _f._closure = {\n      touching: touching,\n      translation: translation,\n      scrollEndTranslation: scrollEndTranslation,\n      activeDecay: activeDecay,\n      infinite: infinite,\n      withSpring: withSpring,\n      maxPage: maxPage,\n      size: size\n    };\n    _f.asString = \"function _f(){const{touching,translation,scrollEndTranslation,activeDecay,infinite,withSpring,maxPage,size}=jsThis._closure;{if(touching.value)return;if(translation.value>0){if(scrollEndTranslation.value<0){activeDecay();return;}if(!infinite){translation.value=withSpring(0);return;}}if(translation.value<-((maxPage-1)*size)){if(scrollEndTranslation.value>0){activeDecay();return;}if(!infinite)translation.value=withSpring(-((maxPage-1)*size));}}}\";\n    _f.__workletHash = 5584514378333;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (199:42)\";\n    return _f;\n  }(), [touching.value, translation, maxPage, size, scrollEndTranslation.value, infinite, activeDecay, withSpring]);\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      return translation.value;\n    };\n    _f._closure = {\n      translation: translation\n    };\n    _f.asString = \"function _f(){const{translation}=jsThis._closure;{return translation.value;}}\";\n    _f.__workletHash = 9829368032147;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (235:4)\";\n    return _f;\n  }(), function () {\n    var _f = function _f() {\n      if (!pagingEnabled) resetBoundary();\n    };\n    _f._closure = {\n      pagingEnabled: pagingEnabled,\n      resetBoundary: resetBoundary\n    };\n    _f.asString = \"function _f(){const{pagingEnabled,resetBoundary}=jsThis._closure;{if(!pagingEnabled)resetBoundary();}}\";\n    _f.__workletHash = 3586615076030;\n    _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (236:4)\";\n    return _f;\n  }(), [pagingEnabled, resetBoundary]);\n  var panGestureEventHandler = (0, _reactNativeReanimated.useAnimatedGestureHandler)({\n    onStart: function () {\n      var _f = function _f(_, ctx) {\n        touching.value = true;\n        ctx.validStart = true;\n        onScrollBegin && (0, _reactNativeReanimated.runOnJS)(onScrollBegin)();\n        ctx.max = (maxPage - 1) * size;\n        if (!infinite && !overscrollEnabled) ctx.max = getLimit();\n        ctx.panOffset = translation.value;\n      };\n      _f._closure = {\n        touching: touching,\n        onScrollBegin: onScrollBegin,\n        runOnJS: _reactNativeReanimated.runOnJS,\n        maxPage: maxPage,\n        size: size,\n        infinite: infinite,\n        overscrollEnabled: overscrollEnabled,\n        getLimit: getLimit,\n        translation: translation\n      };\n      _f.asString = \"function _f(_,ctx){const{touching,onScrollBegin,runOnJS,maxPage,size,infinite,overscrollEnabled,getLimit,translation}=jsThis._closure;{touching.value=true;ctx.validStart=true;onScrollBegin&&runOnJS(onScrollBegin)();ctx.max=(maxPage-1)*size;if(!infinite&&!overscrollEnabled)ctx.max=getLimit();ctx.panOffset=translation.value;}}\";\n      _f.__workletHash = 3619428160497;\n      _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (248:15)\";\n      return _f;\n    }(),\n    onActive: function () {\n      var _f = function _f(e, ctx) {\n        if (ctx.validStart) {\n          ctx.validStart = false;\n          (0, _reactNativeReanimated.cancelAnimation)(translation);\n        }\n        touching.value = true;\n        var translationX = e.translationX,\n          translationY = e.translationY;\n        var panTranslation = isHorizontal.value ? translationX : translationY;\n        if (!infinite) {\n          if (translation.value > 0 || translation.value < -ctx.max) {\n            var boundary = translation.value > 0 ? 0 : -ctx.max;\n            var fixed = boundary - ctx.panOffset;\n            var dynamic = panTranslation - fixed;\n            translation.value = boundary + dynamic * 0.5;\n            return;\n          }\n        }\n        var translationValue = ctx.panOffset + panTranslation;\n        translation.value = translationValue;\n      };\n      _f._closure = {\n        cancelAnimation: _reactNativeReanimated.cancelAnimation,\n        translation: translation,\n        touching: touching,\n        isHorizontal: isHorizontal,\n        infinite: infinite\n      };\n      _f.asString = \"function _f(e,ctx){const{cancelAnimation,translation,touching,isHorizontal,infinite}=jsThis._closure;{if(ctx.validStart){ctx.validStart=false;cancelAnimation(translation);}touching.value=true;const{translationX:translationX,translationY:translationY}=e;const panTranslation=isHorizontal.value?translationX:translationY;if(!infinite){if(translation.value>0||translation.value<-ctx.max){const boundary=translation.value>0?0:-ctx.max;const fixed=boundary-ctx.panOffset;const dynamic=panTranslation-fixed;translation.value=boundary+dynamic*0.5;return;}}const translationValue=ctx.panOffset+panTranslation;translation.value=translationValue;}}\";\n      _f.__workletHash = 11300048714025;\n      _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (259:16)\";\n      return _f;\n    }(),\n    onEnd: function () {\n      var _f = function _f(e) {\n        var velocityX = e.velocityX,\n          velocityY = e.velocityY,\n          translationX = e.translationX,\n          translationY = e.translationY;\n        scrollEndVelocity.value = isHorizontal.value ? velocityX : velocityY;\n        scrollEndTranslation.value = isHorizontal.value ? translationX : translationY;\n        endWithSpring(onScrollEnd);\n        if (!infinite) touching.value = false;\n      };\n      _f._closure = {\n        scrollEndVelocity: scrollEndVelocity,\n        isHorizontal: isHorizontal,\n        scrollEndTranslation: scrollEndTranslation,\n        endWithSpring: endWithSpring,\n        onScrollEnd: onScrollEnd,\n        infinite: infinite,\n        touching: touching\n      };\n      _f.asString = \"function _f(e){const{scrollEndVelocity,isHorizontal,scrollEndTranslation,endWithSpring,onScrollEnd,infinite,touching}=jsThis._closure;{const{velocityX:velocityX,velocityY:velocityY,translationX:translationX,translationY:translationY}=e;scrollEndVelocity.value=isHorizontal.value?velocityX:velocityY;scrollEndTranslation.value=isHorizontal.value?translationX:translationY;endWithSpring(onScrollEnd);if(!infinite)touching.value=false;}}\";\n      _f.__workletHash = 10638018947905;\n      _f.__location = \"/home/runner/work/react-native-reanimated-carousel/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (282:13)\";\n      return _f;\n    }()\n  }, [pagingEnabled, isHorizontal.value, infinite, maxPage, size, snapEnabled, onScrollBegin, onScrollEnd]);\n  return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, (0, _extends2.default)({}, panGestureHandlerProps, {\n    enabled: enabled,\n    onGestureEvent: panGestureEventHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_reactNativeReanimated.default.View, {\n    ref: containerRef,\n    testID: testID,\n    style: style,\n    onTouchStart: onTouchBegin,\n    onTouchEnd: onTouchEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }, props.children));\n};\nvar ScrollViewGesture = IScrollViewGesture;\nexports.ScrollViewGesture = ScrollViewGesture;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNativeGestureHandler","_reactNativeReanimated","_interopRequireWildcard","_constants","_store","_dealWithAnimation","IScrollViewGesture","props","_React$useContext","default","useContext","CTX","_React$useContext$pro","vertical","pagingEnabled","snapEnabled","panGestureHandlerProps","infinite","loop","scrollAnimationDuration","withAnimation","enabled","dataLength","overscrollEnabled","size","translation","testID","_props$style","style","onScrollBegin","onScrollEnd","onTouchBegin","onTouchEnd","maxPage","isHorizontal","useDerivedValue","_f","_closure","asString","__workletHash","__location","touching","useSharedValue","scrollEndTranslation","scrollEndVelocity","containerRef","useAnimatedRef","getLimit","useCallback","_measure","measure","_measure$width","width","containerWidth","withSpring","toValue","onFinished","defaultWithAnimation","type","config","duration","easing","Easing","easeOutQuart","dealWithAnimation","isFinished","runOnJS","endWithSpring","origin","value","velocity","finalTranslation","withDecay","deceleration","offset","computed","Math","ceil","floor","page","finalPage","withProcessTranslation","_finalPage","min","max","nextPage","round","limit","sign","abs","onFinish","activeDecay","resetBoundary","useAnimatedReaction","panGestureEventHandler","useAnimatedGestureHandler","onStart","_","ctx","validStart","panOffset","onActive","e","cancelAnimation","translationX","translationY","panTranslation","boundary","fixed","dynamic","translationValue","onEnd","velocityX","velocityY","createElement","PanGestureHandler","_extends2","onGestureEvent","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","View","ref","onTouchStart","children","ScrollViewGesture"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/node_modules/react-native-reanimated-carousel/lib/commonjs/ScrollViewGesture.tsx"],"sourcesContent":["import React from \"react\";\nimport type { StyleProp, ViewStyle } from \"react-native\";\nimport type { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\nimport {\n  PanGestureHandler,\n} from \"react-native-gesture-handler\";\nimport Animated, {\n  cancelAnimation,\n  measure,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n  withDecay,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"./constants\";\nimport { CTX } from \"./store\";\nimport type { WithTimingAnimation } from \"./types\";\nimport { dealWithAnimation } from \"./utils/dealWithAnimation\";\n\ninterface GestureContext extends Record<string, unknown> {\n  validStart: boolean\n  panOffset: number\n  max: number\n}\n\ninterface Props {\n  size: number\n  infinite?: boolean\n  testID?: string\n  style?: StyleProp<ViewStyle>\n  onScrollBegin?: () => void\n  onScrollEnd?: () => void\n  onTouchBegin?: () => void\n  onTouchEnd?: () => void\n  translation: Animated.SharedValue<number>\n}\n\nconst IScrollViewGesture: React.FC<Props> = (props) => {\n  const {\n    props: {\n      vertical,\n      pagingEnabled,\n      snapEnabled,\n      panGestureHandlerProps,\n      loop: infinite,\n      scrollAnimationDuration,\n      withAnimation,\n      enabled,\n      dataLength,\n      overscrollEnabled,\n    },\n  } = React.useContext(CTX);\n\n  const {\n    size,\n    translation,\n    testID,\n    style = {},\n    onScrollBegin,\n    onScrollEnd,\n    onTouchBegin,\n    onTouchEnd,\n  } = props;\n\n  const maxPage = dataLength;\n  const isHorizontal = useDerivedValue(() => !vertical, [vertical]);\n  const touching = useSharedValue(false);\n  const scrollEndTranslation = useSharedValue(0);\n  const scrollEndVelocity = useSharedValue(0);\n  const containerRef = useAnimatedRef<Animated.View>();\n\n  // Get the limit of the scroll.\n  const getLimit = React.useCallback(() => {\n    \"worklet\";\n\n    if (!infinite && !overscrollEnabled) {\n      const { width: containerWidth = 0 } = measure(containerRef);\n\n      // If the item's total width is less than the container's width, then there is no need to scroll.\n      if (dataLength * size < containerWidth)\n        return 0;\n\n      // Disable the \"overscroll\" effect\n      return dataLength * size - containerWidth;\n    }\n\n    return dataLength * size;\n  }, [infinite, size, dataLength, overscrollEnabled]);\n\n  const withSpring = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: {\n          duration: scrollAnimationDuration + 100,\n          easing: Easing.easeOutQuart,\n        },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        (isFinished: boolean) => {\n          \"worklet\";\n          if (isFinished)\n            onFinished && runOnJS(onFinished)();\n        },\n      );\n    },\n    [scrollAnimationDuration, withAnimation],\n  );\n\n  const endWithSpring = React.useCallback(\n    (onFinished?: () => void) => {\n      \"worklet\";\n      const origin = translation.value;\n      const velocity = scrollEndVelocity.value;\n      // Default to scroll in the direction of the slide (with deceleration)\n      let finalTranslation: number = withDecay({ velocity, deceleration: 0.999 });\n\n      /**\n       * The page size is the same as the item size.\n       * If direction is vertical, the page size is the height of the item.\n       * If direction is horizontal, the page size is the width of the item.\n       *\n       * `page size` equals to `size` variable.\n       * */\n      if (pagingEnabled) {\n        // distance with direction\n        const offset = -(scrollEndTranslation.value >= 0 ? 1 : -1); // 1 or -1\n        const computed = offset < 0 ? Math.ceil : Math.floor;\n        const page = computed(-translation.value / size);\n\n        if (infinite) {\n          const finalPage = page + offset;\n          finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n        }\n        else {\n          const finalPage = Math.min(maxPage - 1, Math.max(0, page + offset));\n          finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n        }\n      }\n\n      if (!pagingEnabled && snapEnabled) {\n        // scroll to the nearest item\n        const nextPage = Math.round((origin + velocity * 0.4) / size) * size;\n        finalTranslation = withSpring(withProcessTranslation(nextPage), onFinished);\n      }\n\n      translation.value = finalTranslation;\n\n      function withProcessTranslation(translation: number) {\n        if (!infinite && !overscrollEnabled) {\n          const limit = getLimit();\n          const sign = Math.sign(translation);\n          return sign * Math.max(0, Math.min(limit, Math.abs(translation)));\n        }\n\n        return translation;\n      }\n    },\n    [\n      translation,\n      scrollEndVelocity.value,\n      pagingEnabled,\n      size,\n      scrollEndTranslation.value,\n      infinite,\n      withSpring,\n      snapEnabled,\n      maxPage,\n    ],\n  );\n\n  const onFinish = React.useCallback(\n    (isFinished: boolean) => {\n      \"worklet\";\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && runOnJS(onScrollEnd)();\n      }\n    },\n    [onScrollEnd, touching],\n  );\n\n  const activeDecay = React.useCallback(() => {\n    \"worklet\";\n    touching.value = true;\n    translation.value = withDecay(\n      { velocity: scrollEndVelocity.value },\n      isFinished => onFinish(isFinished as boolean),\n    );\n  }, [onFinish, scrollEndVelocity.value, touching, translation]);\n\n  const resetBoundary = React.useCallback(() => {\n    \"worklet\";\n    if (touching.value)\n      return;\n\n    if (translation.value > 0) {\n      if (scrollEndTranslation.value < 0) {\n        activeDecay();\n        return;\n      }\n      if (!infinite) {\n        translation.value = withSpring(0);\n        return;\n      }\n    }\n\n    if (translation.value < -((maxPage - 1) * size)) {\n      if (scrollEndTranslation.value > 0) {\n        activeDecay();\n        return;\n      }\n      if (!infinite)\n        translation.value = withSpring(-((maxPage - 1) * size));\n    }\n  }, [\n    touching.value,\n    translation,\n    maxPage,\n    size,\n    scrollEndTranslation.value,\n    infinite,\n    activeDecay,\n    withSpring,\n  ]);\n\n  useAnimatedReaction(\n    () => translation.value,\n    () => {\n      if (!pagingEnabled)\n        resetBoundary();\n    },\n    [pagingEnabled, resetBoundary],\n  );\n\n  const panGestureEventHandler = useAnimatedGestureHandler<\n  PanGestureHandlerGestureEvent,\n  GestureContext\n  >(\n    {\n      onStart: (_, ctx) => {\n        touching.value = true;\n        ctx.validStart = true;\n        onScrollBegin && runOnJS(onScrollBegin)();\n\n        ctx.max = (maxPage - 1) * size;\n        if (!infinite && !overscrollEnabled)\n          ctx.max = getLimit();\n\n        ctx.panOffset = translation.value;\n      },\n      onActive: (e, ctx) => {\n        if (ctx.validStart) {\n          ctx.validStart = false;\n          cancelAnimation(translation);\n        }\n        touching.value = true;\n        const { translationX, translationY } = e;\n        const panTranslation = isHorizontal.value\n          ? translationX\n          : translationY;\n        if (!infinite) {\n          if ((translation.value > 0 || translation.value < -ctx.max)) {\n            const boundary = translation.value > 0 ? 0 : -ctx.max;\n            const fixed = boundary - ctx.panOffset;\n            const dynamic = panTranslation - fixed;\n            translation.value = boundary + dynamic * 0.5;\n            return;\n          }\n        }\n\n        const translationValue = ctx.panOffset + panTranslation;\n        translation.value = translationValue;\n      },\n      onEnd: (e) => {\n        const { velocityX, velocityY, translationX, translationY } = e;\n        scrollEndVelocity.value = isHorizontal.value\n          ? velocityX\n          : velocityY;\n        scrollEndTranslation.value = isHorizontal.value\n          ? translationX\n          : translationY;\n\n        endWithSpring(onScrollEnd);\n\n        if (!infinite)\n          touching.value = false;\n      },\n    },\n    [\n      pagingEnabled,\n      isHorizontal.value,\n      infinite,\n      maxPage,\n      size,\n      snapEnabled,\n      onScrollBegin,\n      onScrollEnd,\n    ],\n  );\n\n  return (\n    <PanGestureHandler\n      {...panGestureHandlerProps}\n      enabled={enabled}\n      onGestureEvent={panGestureEventHandler}\n    >\n      <Animated.View\n        ref={containerRef}\n        testID={testID}\n        style={style}\n        onTouchStart={onTouchBegin}\n        onTouchEnd={onTouchEnd}\n      >\n        {props.children}\n      </Animated.View>\n    </PanGestureHandler>\n  );\n};\n\nexport const ScrollViewGesture = IScrollViewGesture;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}