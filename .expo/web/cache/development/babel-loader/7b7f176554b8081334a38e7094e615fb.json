{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useTheme } from '@react-navigation/native';\nimport Icon from \"../Icon\";\nimport { TabView as RNTabView, TabBar, SceneMap } from 'react-native-tab-view';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TabView = function TabView(_ref) {\n  var tabData = _ref.tabData,\n    onTabIndexChange = _ref.onTabIndexChange,\n    isTabBarFullWidth = _ref.isTabBarFullWidth,\n    tabBarStyle = _ref.tabBarStyle;\n  var _useTheme = useTheme(),\n    _useTheme$colors = _useTheme.colors,\n    card = _useTheme$colors.card,\n    primary = _useTheme$colors.primary,\n    text = _useTheme$colors.text;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    navigationStateIndex = _React$useState2[0],\n    setNavigationStateIndex = _React$useState2[1];\n  var _renderIcon = function _renderIcon(props) {\n    var route = props.route;\n    if (route.icon) {\n      return _jsx(Icon, {\n        name: route.icon,\n        size: 20,\n        color: \"white\"\n      });\n    }\n    return null;\n  };\n  var onIndexChange = function onIndexChange(index) {\n    setNavigationStateIndex(index);\n    if (onTabIndexChange) {\n      onTabIndexChange(index);\n    }\n  };\n  var tabViewRoutes = tabData.map(function (item) {\n    return {\n      key: item.key,\n      title: item.title,\n      icon: item.icon\n    };\n  });\n  var navigationState = {\n    index: navigationStateIndex,\n    routes: tabViewRoutes\n  };\n  var scenes = {};\n  tabData.forEach(function (item) {\n    scenes[item.key] = item.content;\n  });\n  return _jsx(RNTabView, {\n    navigationState: navigationState,\n    renderTabBar: function renderTabBar(props) {\n      return _jsx(TabBar, _objectSpread(_objectSpread({}, props), {}, {\n        renderIcon: _renderIcon,\n        style: [{\n          backgroundColor: card\n        }, tabBarStyle],\n        labelStyle: styles.tabBarLabel,\n        activeColor: primary,\n        inactiveColor: text,\n        tabStyle: isTabBarFullWidth ? {\n          width: Dimensions.get('window').width / tabData.length\n        } : styles.tabBar,\n        indicatorStyle: {\n          backgroundColor: primary\n        },\n        scrollEnabled: true\n      }));\n    },\n    renderScene: SceneMap(scenes),\n    onIndexChange: onIndexChange,\n    initialLayout: {\n      width: Dimensions.get('window').width,\n      height: 0\n    }\n  });\n};\nexport default TabView;","map":{"version":3,"names":["React","useTheme","Icon","TabView","RNTabView","TabBar","SceneMap","styles","tabData","onTabIndexChange","isTabBarFullWidth","tabBarStyle","colors","card","primary","text","useState","navigationStateIndex","setNavigationStateIndex","_renderIcon","props","route","icon","onIndexChange","index","tabViewRoutes","map","item","key","title","navigationState","routes","scenes","forEach","content","backgroundColor","tabBarLabel","width","Dimensions","get","length","tabBar","height"],"sources":["/Users/vunguyen/Documents/work/jcstudio/food-star-expo-app-template/src/components/elements/TabView/TabView.tsx"],"sourcesContent":["import * as React from 'react';\nimport {Dimensions, StyleProp, ViewStyle} from 'react-native';\nimport {useTheme} from '@react-navigation/native';\nimport Icon from '../Icon';\nimport {TabView as RNTabView, TabBar, SceneMap} from 'react-native-tab-view';\nimport styles from './styles';\n\ntype Cenes = {\n  [key: string]: React.ComponentType<any>;\n};\n\ntype TabViewItem = {\n  key: string;\n  title: string;\n  icon?: string;\n  content: React.ComponentType<any>;\n};\n\nexport type TabViewData = TabViewItem[];\n\ntype TabViewProps = {\n  tabData: TabViewData;\n  onTabIndexChange?: (index: number) => {};\n  isTabBarFullWidth?: boolean;\n  tabBarStyle?: StyleProp<ViewStyle>;\n};\n\nconst TabView: React.FC<TabViewProps> = ({\n  tabData,\n  onTabIndexChange,\n  isTabBarFullWidth,\n  tabBarStyle,\n}) => {\n  const {\n    colors: {card, primary, text},\n  } = useTheme();\n  const [navigationStateIndex, setNavigationStateIndex] = React.useState(0);\n\n  const _renderIcon = (props: any) => {\n    const {route} = props;\n    if (route.icon) {\n      return <Icon name={route.icon} size={20} color=\"white\" />;\n    }\n    return null;\n  };\n\n  const onIndexChange = (index: number) => {\n    setNavigationStateIndex(index);\n    if (onTabIndexChange) {\n      onTabIndexChange(index);\n    }\n  };\n\n  const tabViewRoutes = tabData.map((item) => {\n    return {\n      key: item.key,\n      title: item.title,\n      icon: item.icon,\n    };\n  });\n  const navigationState = {\n    index: navigationStateIndex,\n    routes: tabViewRoutes,\n  };\n  const scenes: Cenes = {};\n  tabData.forEach((item) => {\n    scenes[item.key] = item.content;\n  });\n\n  return (\n    <RNTabView\n      navigationState={navigationState}\n      renderTabBar={(props) => (\n        <TabBar\n          {...props}\n          renderIcon={_renderIcon}\n          style={[{backgroundColor: card}, tabBarStyle]}\n          labelStyle={styles.tabBarLabel}\n          activeColor={primary}\n          inactiveColor={text}\n          tabStyle={\n            isTabBarFullWidth\n              ? {\n                  width: Dimensions.get('window').width / tabData.length,\n                }\n              : styles.tabBar\n          }\n          indicatorStyle={{\n            backgroundColor: primary,\n          }}\n          scrollEnabled={true}\n        />\n      )}\n      renderScene={SceneMap(scenes)}\n      onIndexChange={onIndexChange}\n      initialLayout={{width: Dimensions.get('window').width, height: 0}}\n    />\n  );\n};\n\nexport default TabView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}